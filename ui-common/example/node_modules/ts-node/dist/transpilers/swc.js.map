{"version":3,"file":"swc.js","sourceRoot":"","sources":["../../src/transpilers/swc.ts"],"names":[],"mappings":"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","sourcesContent":["import type * as ts from 'typescript';\nimport type * as swcWasm from '@swc/wasm';\nimport type * as swcTypes from '@swc/core';\nimport type { CreateTranspilerOptions, Transpiler } from './types';\n\nexport interface SwcTranspilerOptions extends CreateTranspilerOptions {\n  /**\n   * swc compiler to use for compilation\n   * Set to '@swc/wasm' to use swc's WASM compiler\n   * Default: '@swc/core', falling back to '@swc/wasm'\n   */\n  swc?: string | typeof swcWasm;\n}\n\nexport function create(createOptions: SwcTranspilerOptions): Transpiler {\n  const {\n    swc,\n    service: { config, projectLocalResolveHelper },\n  } = createOptions;\n\n  // Load swc compiler\n  let swcInstance: typeof swcWasm;\n  if (typeof swc === 'string') {\n    swcInstance = require(projectLocalResolveHelper(\n      swc,\n      true\n    )) as typeof swcWasm;\n  } else if (swc == null) {\n    let swcResolved;\n    try {\n      swcResolved = projectLocalResolveHelper('@swc/core', true);\n    } catch (e) {\n      try {\n        swcResolved = projectLocalResolveHelper('@swc/wasm', true);\n      } catch (e) {\n        throw new Error(\n          'swc compiler requires either @swc/core or @swc/wasm to be installed as a dependency.  See https://typestrong.org/ts-node/docs/transpilers'\n        );\n      }\n    }\n    swcInstance = require(swcResolved) as typeof swcWasm;\n  } else {\n    swcInstance = swc;\n  }\n\n  // Prepare SWC options derived from typescript compiler options\n  const compilerOptions = config.options;\n  const {\n    esModuleInterop,\n    sourceMap,\n    importHelpers,\n    experimentalDecorators,\n    emitDecoratorMetadata,\n    target,\n    module,\n    jsxFactory,\n    jsxFragmentFactory,\n    strict,\n    alwaysStrict,\n    noImplicitUseStrict,\n  } = compilerOptions;\n  const nonTsxOptions = createSwcOptions(false);\n  const tsxOptions = createSwcOptions(true);\n  function createSwcOptions(isTsx: boolean): swcTypes.Options {\n    let swcTarget = targetMapping.get(target!) ?? 'es3';\n    // Downgrade to lower target if swc does not support the selected target.\n    // Perhaps project has an older version of swc.\n    // TODO cache the results of this; slightly faster\n    let swcTargetIndex = swcTargets.indexOf(swcTarget);\n    for (; swcTargetIndex >= 0; swcTargetIndex--) {\n      try {\n        swcInstance.transformSync('', {\n          jsc: { target: swcTargets[swcTargetIndex] },\n        });\n        break;\n      } catch (e) {}\n    }\n    swcTarget = swcTargets[swcTargetIndex];\n    const keepClassNames = target! >= /* ts.ScriptTarget.ES2016 */ 3;\n    // swc only supports these 4x module options [MUST_UPDATE_FOR_NEW_MODULEKIND]\n    const moduleType =\n      module === ModuleKind.CommonJS\n        ? 'commonjs'\n        : module === ModuleKind.AMD\n        ? 'amd'\n        : module === ModuleKind.UMD\n        ? 'umd'\n        : 'es6';\n    // In swc:\n    //   strictMode means `\"use strict\"` is *always* emitted for non-ES module, *never* for ES module where it is assumed it can be omitted.\n    //   (this assumption is invalid, but that's the way swc behaves)\n    // tsc is a bit more complex:\n    //   alwaysStrict will force emitting it always unless `import`/`export` syntax is emitted which implies it per the JS spec.\n    //   if not alwaysStrict, will emit implicitly whenever module target is non-ES *and* transformed module syntax is emitted.\n    // For node, best option is to assume that all scripts are modules (commonjs or esm) and thus should get tsc's implicit strict behavior.\n\n    // Always set strictMode, *unless* alwaysStrict is disabled and noImplicitUseStrict is enabled\n    const strictMode =\n      // if `alwaysStrict` is disabled, remembering that `strict` defaults `alwaysStrict` to true\n      (alwaysStrict === false || (alwaysStrict !== true && strict !== true)) &&\n      // if noImplicitUseStrict is enabled\n      noImplicitUseStrict === true\n        ? false\n        : true;\n    return {\n      sourceMaps: sourceMap,\n      // isModule: true,\n      module: moduleType\n        ? ({\n            noInterop: !esModuleInterop,\n            type: moduleType,\n            strictMode,\n          } as swcTypes.ModuleConfig)\n        : undefined,\n      swcrc: false,\n      jsc: {\n        externalHelpers: importHelpers,\n        parser: {\n          syntax: 'typescript',\n          tsx: isTsx,\n          decorators: experimentalDecorators,\n          dynamicImport: true,\n        },\n        target: swcTarget,\n        transform: {\n          decoratorMetadata: emitDecoratorMetadata,\n          legacyDecorator: true,\n          react: {\n            throwIfNamespace: false,\n            development: false,\n            useBuiltins: false,\n            pragma: jsxFactory!,\n            pragmaFrag: jsxFragmentFactory!,\n          } as swcTypes.ReactConfig,\n        },\n        keepClassNames,\n      } as swcTypes.JscConfig,\n    };\n  }\n\n  const transpile: Transpiler['transpile'] = (input, transpileOptions) => {\n    const { fileName } = transpileOptions;\n    const swcOptions =\n      fileName.endsWith('.tsx') || fileName.endsWith('.jsx')\n        ? tsxOptions\n        : nonTsxOptions;\n    const { code, map } = swcInstance.transformSync(input, {\n      ...swcOptions,\n      filename: fileName,\n    });\n    return { outputText: code, sourceMapText: map };\n  };\n\n  return {\n    transpile,\n  };\n}\n\n/** @internal */\nexport const targetMapping = new Map<ts.ScriptTarget, SwcTarget>();\ntargetMapping.set(/* ts.ScriptTarget.ES3 */ 0, 'es3');\ntargetMapping.set(/* ts.ScriptTarget.ES5 */ 1, 'es5');\ntargetMapping.set(/* ts.ScriptTarget.ES2015 */ 2, 'es2015');\ntargetMapping.set(/* ts.ScriptTarget.ES2016 */ 3, 'es2016');\ntargetMapping.set(/* ts.ScriptTarget.ES2017 */ 4, 'es2017');\ntargetMapping.set(/* ts.ScriptTarget.ES2018 */ 5, 'es2018');\ntargetMapping.set(/* ts.ScriptTarget.ES2019 */ 6, 'es2019');\ntargetMapping.set(/* ts.ScriptTarget.ES2020 */ 7, 'es2020');\ntargetMapping.set(/* ts.ScriptTarget.ES2021 */ 8, 'es2021');\ntargetMapping.set(/* ts.ScriptTarget.ES2022 */ 9, 'es2022');\ntargetMapping.set(/* ts.ScriptTarget.ESNext */ 99, 'es2022');\n\ntype SwcTarget = typeof swcTargets[number];\n/**\n * @internal\n * We use this list to downgrade to a prior target when we probe swc to detect if it supports a particular target\n */\nconst swcTargets = [\n  'es3',\n  'es5',\n  'es2015',\n  'es2016',\n  'es2017',\n  'es2018',\n  'es2019',\n  'es2020',\n  'es2021',\n  'es2022',\n] as const;\n\nconst ModuleKind = {\n  None: 0,\n  CommonJS: 1,\n  AMD: 2,\n  UMD: 3,\n  System: 4,\n  ES2015: 5,\n  ES2020: 6,\n  ESNext: 99,\n} as const;\n"]}