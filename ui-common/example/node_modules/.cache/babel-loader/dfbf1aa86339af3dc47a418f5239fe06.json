{"ast":null,"code":"'use strict';\n\nmodule.exports = smalltalk;\nsmalltalk.displayName = 'smalltalk';\nsmalltalk.aliases = [];\n\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/, /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/smalltalk.js"],"names":["module","exports","smalltalk","displayName","aliases","Prism","languages","comment","pattern","greedy","char","string","symbol","lookbehind","inside","variable","punctuation","keyword","boolean","number","operator"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AACAA,SAAS,CAACC,WAAV,GAAwB,WAAxB;AACAD,SAAS,CAACE,OAAV,GAAoB,EAApB;;AACA,SAASF,SAAT,CAAmBG,KAAnB,EAA0B;AACxBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,SAAhB,GAA4B;AAC1BK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,gBADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KADiB;AAK1BC,IAAAA,IAAI,EAAE;AACJF,MAAAA,OAAO,EAAE,KADL;AAEJC,MAAAA,MAAM,EAAE;AAFJ,KALoB;AAS1BE,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EAAE,gBADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KATkB;AAa1BG,IAAAA,MAAM,EAAE,mDAbkB;AAc1B,uBAAmB;AACjBJ,MAAAA,OAAO,EAAE,mBADQ;AAEjBK,MAAAA,UAAU,EAAE,IAFK;AAGjBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,YADJ;AAENC,QAAAA,WAAW,EAAE;AAFP;AAHS,KAdO;AAsB1B,2BAAuB;AACrBR,MAAAA,OAAO,EAAE,WADY;AAErBM,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,WADJ;AAENC,QAAAA,WAAW,EAAE;AAFP;AAFa,KAtBG;AA6B1BC,IAAAA,OAAO,EAAE,4BA7BiB;AA8B1BC,IAAAA,OAAO,EAAE,oBA9BiB;AA+B1BC,IAAAA,MAAM,EAAE,CACN,0CADM,EAEN,4BAFM,CA/BkB;AAmC1BC,IAAAA,QAAQ,EAAE,gDAnCgB;AAoC1BJ,IAAAA,WAAW,EAAE;AApCa,GAA5B;AAsCD","sourcesContent":["'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}