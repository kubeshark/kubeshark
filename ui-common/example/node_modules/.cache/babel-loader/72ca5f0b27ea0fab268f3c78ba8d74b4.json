{"ast":null,"code":"import { createUnarySpacing } from '@material-ui/system';\nvar warnOnce;\nexport default function createSpacing() {\n  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8; // Already transformed.\n\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons and type, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  var transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  var spacing = function spacing() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(\"Material-UI: Too many arguments provided, expected between 0 and 4, got \".concat(args.length));\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(function (argument) {\n      if (typeof argument === 'string') {\n        return argument;\n      }\n\n      var output = transform(argument);\n      return typeof output === 'number' ? \"\".concat(output, \"px\") : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: function get() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/styles/createSpacing.js"],"names":["createUnarySpacing","warnOnce","createSpacing","spacingInput","arguments","length","undefined","mui","transform","spacing","_len","args","Array","_key","process","env","NODE_ENV","console","error","concat","map","argument","output","join","Object","defineProperty","get"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,qBAAnC;AACA,IAAIC,QAAJ;AACA,eAAe,SAASC,aAAT,GAAyB;AACtC,MAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAvF,CADsC,CAGtC;;AACA,MAAID,YAAY,CAACI,GAAjB,EAAsB;AACpB,WAAOJ,YAAP;AACD,GANqC,CAMpC;AACF;AACA;;;AAGA,MAAIK,SAAS,GAAGR,kBAAkB,CAAC;AACjCS,IAAAA,OAAO,EAAEN;AADwB,GAAD,CAAlC;;AAIA,MAAIM,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,SAAK,IAAIC,IAAI,GAAGN,SAAS,CAACC,MAArB,EAA6BM,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaT,SAAS,CAACS,IAAD,CAAtB;AACD;;AAED,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,EAAEL,IAAI,CAACN,MAAL,IAAe,CAAjB,CAAJ,EAAyB;AACvBY,QAAAA,OAAO,CAACC,KAAR,CAAc,2EAA2EC,MAA3E,CAAkFR,IAAI,CAACN,MAAvF,CAAd;AACD;AACF;;AAED,QAAIM,IAAI,CAACN,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOG,SAAS,CAAC,CAAD,CAAhB;AACD;;AAED,QAAIG,IAAI,CAACN,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOG,SAAS,CAACG,IAAI,CAAC,CAAD,CAAL,CAAhB;AACD;;AAED,WAAOA,IAAI,CAACS,GAAL,CAAS,UAAUC,QAAV,EAAoB;AAClC,UAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,eAAOA,QAAP;AACD;;AAED,UAAIC,MAAM,GAAGd,SAAS,CAACa,QAAD,CAAtB;AACA,aAAO,OAAOC,MAAP,KAAkB,QAAlB,GAA6B,GAAGH,MAAH,CAAUG,MAAV,EAAkB,IAAlB,CAA7B,GAAuDA,MAA9D;AACD,KAPM,EAOJC,IAPI,CAOC,GAPD,CAAP;AAQD,GA3BD,CAfsC,CA0CnC;;;AAGHC,EAAAA,MAAM,CAACC,cAAP,CAAsBhB,OAAtB,EAA+B,MAA/B,EAAuC;AACrCiB,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,UAAIZ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAI,CAACf,QAAD,IAAaa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA1C,EAAkD;AAChDC,UAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,4DAAD,EAA+D,2BAA/D,EAA4F,mEAA5F,EAAiK,EAAjK,EAAqK,8KAArK,EAAqVK,IAArV,CAA0V,IAA1V,CAAd;AACD;;AAEDtB,QAAAA,QAAQ,GAAG,IAAX;AACD;;AAED,aAAOE,YAAP;AACD;AAXoC,GAAvC;AAaAM,EAAAA,OAAO,CAACF,GAAR,GAAc,IAAd;AACA,SAAOE,OAAP;AACD","sourcesContent":["import { createUnarySpacing } from '@material-ui/system';\nvar warnOnce;\nexport default function createSpacing() {\n  var spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  } // Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.\n  // Smaller components, such as icons and type, can align to a 4dp grid.\n  // https://material.io/design/layout/understanding-layout.html#usage\n\n\n  var transform = createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  var spacing = function spacing() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(args.length <= 4)) {\n        console.error(\"Material-UI: Too many arguments provided, expected between 0 and 4, got \".concat(args.length));\n      }\n    }\n\n    if (args.length === 0) {\n      return transform(1);\n    }\n\n    if (args.length === 1) {\n      return transform(args[0]);\n    }\n\n    return args.map(function (argument) {\n      if (typeof argument === 'string') {\n        return argument;\n      }\n\n      var output = transform(argument);\n      return typeof output === 'number' ? \"\".concat(output, \"px\") : output;\n    }).join(' ');\n  }; // Backward compatibility, to remove in v5.\n\n\n  Object.defineProperty(spacing, 'unit', {\n    get: function get() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnOnce || process.env.NODE_ENV === 'test') {\n          console.error(['Material-UI: theme.spacing.unit usage has been deprecated.', 'It will be removed in v5.', 'You can replace `theme.spacing.unit * y` with `theme.spacing(y)`.', '', 'You can use the `https://github.com/mui-org/material-ui/tree/master/packages/material-ui-codemod/README.md#theme-spacing-api` migration helper to make the process smoother.'].join('\\n'));\n        }\n\n        warnOnce = true;\n      }\n\n      return spacingInput;\n    }\n  });\n  spacing.mui = true;\n  return spacing;\n}"]},"metadata":{},"sourceType":"module"}