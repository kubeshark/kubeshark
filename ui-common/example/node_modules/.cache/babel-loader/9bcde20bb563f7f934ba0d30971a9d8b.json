{"ast":null,"code":"'use strict';\n\nmodule.exports = aql;\naql.displayName = 'aql';\naql.aliases = [];\n\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [{\n      pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n      lookbehind: true\n    }, /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n    {\n      pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n      lookbehind: true\n    }, {\n      pattern: /\\bOPTIONS(?=\\s*\\{)/i\n    }],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [/\\b0b[01]+/i, /\\b0x[0-9a-f]+/i, /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/aql.js"],"names":["module","exports","aql","displayName","aliases","Prism","languages","comment","property","pattern","lookbehind","greedy","string","identifier","variable","keyword","function","boolean","range","alias","number","operator","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,OAAO,EAAE,yBADW;AAEpBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EACL,mEAFM;AAGRC,MAAAA,UAAU,EAAE,IAHJ;AAIRC,MAAAA,MAAM,EAAE;AAJA,KAFU;AAQpBC,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EAAE,kCADH;AAENE,MAAAA,MAAM,EAAE;AAFF,KARY;AAYpBE,IAAAA,UAAU,EAAE;AACVJ,MAAAA,OAAO,EAAE,kCADC;AAEVE,MAAAA,MAAM,EAAE;AAFE,KAZQ;AAgBpBG,IAAAA,QAAQ,EAAE,QAhBU;AAiBpBC,IAAAA,OAAO,EAAE,CACP;AACEN,MAAAA,OAAO,EAAE,gCADX;AAEEC,MAAAA,UAAU,EAAE;AAFd,KADO,EAKP,uOALO,EAKkO;AACzO;AACED,MAAAA,OAAO,EAAE,wCADX;AAEEC,MAAAA,UAAU,EAAE;AAFd,KANO,EAUP;AACED,MAAAA,OAAO,EAAE,kCADX;AAEEC,MAAAA,UAAU,EAAE;AAFd,KAVO,EAcP;AACED,MAAAA,OAAO,EAAE;AADX,KAdO,CAjBW;AAmCpBO,IAAAA,QAAQ,EAAE,sBAnCU;AAoCpBC,IAAAA,OAAO,EAAE,qBApCW;AAqCpBC,IAAAA,KAAK,EAAE;AACLT,MAAAA,OAAO,EAAE,MADJ;AAELU,MAAAA,KAAK,EAAE;AAFF,KArCa;AAyCpBC,IAAAA,MAAM,EAAE,CACN,YADM,EAEN,gBAFM,EAGN,uDAHM,CAzCY;AA8CpBC,IAAAA,QAAQ,EAAE,uCA9CU;AA+CpBC,IAAAA,WAAW,EAAE;AA/CO,GAAtB;AAiDD","sourcesContent":["'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}