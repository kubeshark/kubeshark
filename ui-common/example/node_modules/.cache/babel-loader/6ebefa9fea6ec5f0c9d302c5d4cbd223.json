{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useTheme from '../styles/useTheme';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport useMediaQuery from '../useMediaQuery'; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport var isWidthUp = function isWidthUp(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport var isWidthDown = function isWidthDown(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\nvar withWidth = function withWidth() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n        withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n        _options$noSSR = options.noSSR,\n        noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n        initialWidthOption = options.initialWidth;\n\n    function WithWidth(props) {\n      var contextTheme = useTheme();\n      var theme = props.theme || contextTheme;\n\n      var _getThemeProps = getThemeProps({\n        theme: theme,\n        name: 'MuiWithWidth',\n        props: _extends({}, props)\n      }),\n          initialWidth = _getThemeProps.initialWidth,\n          width = _getThemeProps.width,\n          other = _objectWithoutProperties(_getThemeProps, [\"initialWidth\", \"width\"]);\n\n      var _React$useState = React.useState(false),\n          mountedState = _React$useState[0],\n          setMountedState = _React$useState[1];\n\n      useEnhancedEffect(function () {\n        setMountedState(true);\n      }, []);\n      /**\n       * innerWidth |xs      sm      md      lg      xl\n       *            |-------|-------|-------|-------|------>\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\n       */\n\n      var keys = theme.breakpoints.keys.slice().reverse();\n      var widthComputed = keys.reduce(function (output, key) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var matches = useMediaQuery(theme.breakpoints.up(key));\n        return !output && matches ? key : output;\n      }, null);\n\n      var more = _extends({\n        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n      }, withThemeOption ? {\n        theme: theme\n      } : {}, other); // When rendering the component on the server,\n      // we have no idea about the client browser screen width.\n      // In order to prevent blinks and help the reconciliation of the React tree\n      // we are not rendering the child component.\n      //\n      // An alternative is to use the `initialWidth` property.\n\n\n      if (more.width === undefined) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(Component, more);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n      /**\n       * As `window.innerWidth` is unavailable on the server,\n       * we default to rendering an empty component during the first mount.\n       * You might want to use an heuristic to approximate\n       * the screen width of the client browser screen width.\n       *\n       * For instance, you could be using the user-agent or the client-hints.\n       * https://caniuse.com/#search=client%20hint\n       */\n      initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n      /**\n       * @ignore\n       */\n      theme: PropTypes.object,\n\n      /**\n       * Bypass the width calculation logic.\n       */\n      width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithWidth, Component);\n    return WithWidth;\n  };\n};\n\nexport default withWidth;","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/withWidth/withWidth.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","getDisplayName","getThemeProps","hoistNonReactStatics","useTheme","keys","breakpointKeys","useMediaQuery","isWidthUp","breakpoint","width","inclusive","arguments","length","undefined","indexOf","isWidthDown","useEnhancedEffect","window","useEffect","useLayoutEffect","withWidth","options","Component","_options$withTheme","withTheme","withThemeOption","_options$noSSR","noSSR","initialWidthOption","initialWidth","WithWidth","props","contextTheme","theme","_getThemeProps","name","other","_React$useState","useState","mountedState","setMountedState","breakpoints","slice","reverse","widthComputed","reduce","output","key","matches","up","more","createElement","process","env","NODE_ENV","propTypes","oneOf","object","displayName","concat"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDisplayName } from '@material-ui/utils';\nimport { getThemeProps } from '@material-ui/styles';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport useTheme from '../styles/useTheme';\nimport { keys as breakpointKeys } from '../styles/createBreakpoints';\nimport useMediaQuery from '../useMediaQuery'; // By default, returns true if screen width is the same or greater than the given breakpoint.\n\nexport var isWidthUp = function isWidthUp(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(breakpoint) <= breakpointKeys.indexOf(width);\n  }\n\n  return breakpointKeys.indexOf(breakpoint) < breakpointKeys.indexOf(width);\n}; // By default, returns true if screen width is the same or less than the given breakpoint.\n\nexport var isWidthDown = function isWidthDown(breakpoint, width) {\n  var inclusive = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  if (inclusive) {\n    return breakpointKeys.indexOf(width) <= breakpointKeys.indexOf(breakpoint);\n  }\n\n  return breakpointKeys.indexOf(width) < breakpointKeys.indexOf(breakpoint);\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n\nvar withWidth = function withWidth() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (Component) {\n    var _options$withTheme = options.withTheme,\n        withThemeOption = _options$withTheme === void 0 ? false : _options$withTheme,\n        _options$noSSR = options.noSSR,\n        noSSR = _options$noSSR === void 0 ? false : _options$noSSR,\n        initialWidthOption = options.initialWidth;\n\n    function WithWidth(props) {\n      var contextTheme = useTheme();\n      var theme = props.theme || contextTheme;\n\n      var _getThemeProps = getThemeProps({\n        theme: theme,\n        name: 'MuiWithWidth',\n        props: _extends({}, props)\n      }),\n          initialWidth = _getThemeProps.initialWidth,\n          width = _getThemeProps.width,\n          other = _objectWithoutProperties(_getThemeProps, [\"initialWidth\", \"width\"]);\n\n      var _React$useState = React.useState(false),\n          mountedState = _React$useState[0],\n          setMountedState = _React$useState[1];\n\n      useEnhancedEffect(function () {\n        setMountedState(true);\n      }, []);\n      /**\n       * innerWidth |xs      sm      md      lg      xl\n       *            |-------|-------|-------|-------|------>\n       * width      |  xs   |  sm   |  md   |  lg   |  xl\n       */\n\n      var keys = theme.breakpoints.keys.slice().reverse();\n      var widthComputed = keys.reduce(function (output, key) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        var matches = useMediaQuery(theme.breakpoints.up(key));\n        return !output && matches ? key : output;\n      }, null);\n\n      var more = _extends({\n        width: width || (mountedState || noSSR ? widthComputed : undefined) || initialWidth || initialWidthOption\n      }, withThemeOption ? {\n        theme: theme\n      } : {}, other); // When rendering the component on the server,\n      // we have no idea about the client browser screen width.\n      // In order to prevent blinks and help the reconciliation of the React tree\n      // we are not rendering the child component.\n      //\n      // An alternative is to use the `initialWidth` property.\n\n\n      if (more.width === undefined) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(Component, more);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? WithWidth.propTypes = {\n      /**\n       * As `window.innerWidth` is unavailable on the server,\n       * we default to rendering an empty component during the first mount.\n       * You might want to use an heuristic to approximate\n       * the screen width of the client browser screen width.\n       *\n       * For instance, you could be using the user-agent or the client-hints.\n       * https://caniuse.com/#search=client%20hint\n       */\n      initialWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n\n      /**\n       * @ignore\n       */\n      theme: PropTypes.object,\n\n      /**\n       * Bypass the width calculation logic.\n       */\n      width: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl'])\n    } : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithWidth.displayName = \"WithWidth(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithWidth, Component);\n    return WithWidth;\n  };\n};\n\nexport default withWidth;"]},"metadata":{},"sourceType":"module"}