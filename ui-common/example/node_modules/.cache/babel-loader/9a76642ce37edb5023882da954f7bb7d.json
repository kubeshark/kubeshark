{"ast":null,"code":"'use strict';\n\nvar refractorBash = require('./bash.js');\n\nmodule.exports = shellSession;\nshellSession.displayName = 'shellSession';\nshellSession.aliases = [];\n\nfunction shellSession(Prism) {\n  Prism.register(refractorBash);\n\n  (function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [// normal string\n    /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source, /'[^']*'/.source, /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n    // 2 capturing groups\n    /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source].join('|');\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp( // user info\n        /^/.source + '(?:' + ( // <user> \":\" ( <path> )?\n        /[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source + '|' + // <path>\n        // Since the path pattern is quite general, we will require it to start with a special character to\n        // prevent false positives.\n        /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) + ')?' + // shell symbol\n        /[$#%](?=\\s)/.source + // bash command\n        /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function () {\n          return strings;\n        }), 'm'),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    };\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] = Prism.languages['shell-session'];\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/shell-session.js"],"names":["refractorBash","require","module","exports","shellSession","displayName","aliases","Prism","register","strings","source","join","languages","command","pattern","RegExp","replace","greedy","inside","info","alias","user","punctuation","path","bash","lookbehind","output"],"mappings":"AAAA;;AACA,IAAIA,aAAa,GAAGC,OAAO,CAAC,WAAD,CAA3B;;AACAC,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AACAA,YAAY,CAACC,WAAb,GAA2B,cAA3B;AACAD,YAAY,CAACE,OAAb,GAAuB,EAAvB;;AACA,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;AAC3BA,EAAAA,KAAK,CAACC,QAAN,CAAeR,aAAf;;AACC,GAAC,UAAUO,KAAV,EAAiB;AACjB;AACA;AACA,QAAIE,OAAO,GAAG,CACZ;AACA,4DAAwDC,MAF5C,EAGZ,UAAUA,MAHE,EAIZ,2BAA2BA,MAJf,EAIuB;AACnC;AACA,8CAA0CA,MAN9B,EAOZC,IAPY,CAOP,GAPO,CAAd;AAQAJ,IAAAA,KAAK,CAACK,SAAN,CAAgB,eAAhB,IAAmC;AACjCC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEC,MAAM,EACb;AACA,YAAIL,MAAJ,GACE,KADF,KACU;AACP,0EACEA,MADF,GAEC,GAFD,GAEO;AACN;AACA;AACA,uCAA+BA,MAPnC,IAQE,IARF,GAQS;AACP,sBAAcA,MAThB,GASyB;AACvB,6FAAqFA,MAArF,CAA4FM,OAA5F,CACE,UADF,EAEE,YAAY;AACV,iBAAOP,OAAP;AACD,SAJH,CAZW,EAkBb,GAlBa,CADR;AAqBPQ,QAAAA,MAAM,EAAE,IArBD;AAsBPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE;AACJ;AACA;AACA;AACAL,YAAAA,OAAO,EAAE,UAJL;AAKJM,YAAAA,KAAK,EAAE,aALH;AAMJF,YAAAA,MAAM,EAAE;AACNG,cAAAA,IAAI,EAAE,sCADA;AAENC,cAAAA,WAAW,EAAE,GAFP;AAGNC,cAAAA,IAAI,EAAE;AAHA;AANJ,WADA;AAaNC,UAAAA,IAAI,EAAE;AACJV,YAAAA,OAAO,EAAE,sBADL;AAEJW,YAAAA,UAAU,EAAE,IAFR;AAGJL,YAAAA,KAAK,EAAE,eAHH;AAIJF,YAAAA,MAAM,EAAEX,KAAK,CAACK,SAAN,CAAgBY;AAJpB,WAbA;AAmBN,0BAAgB;AACdV,YAAAA,OAAO,EAAE,QADK;AAEdM,YAAAA,KAAK,EAAE;AAFO;AAnBV;AAtBD,OADwB;AAgDjCM,MAAAA,MAAM,EAAE;AAhDyB,KAAnC;AAkDAnB,IAAAA,KAAK,CAACK,SAAN,CAAgB,YAAhB,IAAgCL,KAAK,CAACK,SAAN,CAAgB,cAAhB,IAC9BL,KAAK,CAACK,SAAN,CAAgB,eAAhB,CADF;AAED,GA/DA,EA+DEL,KA/DF;AAgEF","sourcesContent":["'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' + // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' + // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' + // shell symbol\n            /[$#%](?=\\s)/.source + // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}