{"ast":null,"code":"import React__default, { useState, useEffect, createElement } from 'react';\nimport { Select as Select$1, MenuItem, makeStyles, Tooltip as Tooltip$1, Fade } from '@material-ui/core';\nimport { makeStyles as makeStyles$1, createStyles } from '@material-ui/core/styles';\nvar style = {\n  \"loadingOverlayContainer\": \"_LoadingOverlay-module__loadingOverlayContainer__3eijD\",\n  \"loadingOverlaySpinner\": \"_LoadingOverlay-module__loadingOverlaySpinner__bGElx\",\n  \"rotation\": \"_LoadingOverlay-module__rotation__1jTYC\"\n};\nconst SpinnerShowDelayMs = 350;\n\nconst LoadingOverlay = _ref => {\n  let {\n    delay\n  } = _ref;\n  const [isVisible, setIsVisible] = useState(false);\n  useEffect(() => {\n    let isRelevant = true;\n    setTimeout(() => {\n      if (isRelevant) setIsVisible(true);\n    }, delay || SpinnerShowDelayMs);\n    return () => isRelevant = false;\n  }, [delay]);\n  return React__default.createElement(\"div\", {\n    className: style.loadingOverlayContainer,\n    hidden: !isVisible\n  }, React__default.createElement(\"div\", {\n    className: style.loadingOverlaySpinner\n  }));\n};\n\nvar _path;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction SvgDefaultIconDown(props) {\n  return /*#__PURE__*/createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 7.237,\n    height: 7.237,\n    fill: \"#fff\"\n  }, props), _path || (_path = /*#__PURE__*/createElement(\"path\", {\n    d: \"M7.236 3.618L5.789 2.171 3.618 4.34l-2.171-2.17L0 3.618l3.618 3.618 3.618-3.618z\"\n  })));\n}\n\nvar styles = {\n  \"icon\": \"_Select-module__icon__1lwMT\",\n  \"list\": \"_Select-module__list__i01OB\"\n};\nconst ALL_KEY = 'All';\nconst menuProps = {\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"left\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"left\"\n  },\n  getContentAnchorEl: null\n};\nconst classes = {\n  icon: styles.icon,\n  selectMenu: styles.list\n};\nconst defaultProps = {\n  MenuProps: menuProps,\n  IconComponent: SvgDefaultIconDown\n};\n\nconst Select = _ref2 => {\n  let {\n    label,\n    value,\n    onChangecb,\n    transformDisplay,\n    ellipsis: _ellipsis = true,\n    multiple,\n    labelOnTop: _labelOnTop = false,\n    children,\n    className,\n    labelClassName,\n    trimItemsWhenMultiple,\n    ...props\n  } = _ref2;\n  let _value = value;\n\n  const _onChange = (_, item) => {\n    const value = item.props.value;\n    value === ALL_KEY ? onChangecb(ALL_KEY) : onChangecb(value);\n  };\n\n  if (multiple && (!_value || _value.length === 0)) _value = [ALL_KEY];\n  const transformItem = transformDisplay ? transformDisplay : i => i;\n  const renderValue = multiple ? item => React__default.createElement(\"span\", {\n    className: _ellipsis ? 'ellipsis' : ''\n  }, trimItemsWhenMultiple && item.length > 1 ? transformItem(`${item[item.length - 1]} (+${item.length - 1})`) : item === null || item === void 0 ? void 0 : item.map(transformItem).join(\",\")) : null;\n  return React__default.createElement(\"div\", {\n    className: `select ${_labelOnTop ? 'labelOnTop' : ''} ${className ? className : ''}`\n  }, label && React__default.createElement(\"div\", {\n    className: `selectLabel ${labelClassName ? labelClassName : ''}`\n  }, label), React__default.createElement(Select$1, Object.assign({}, Object.assign({}, defaultProps, props, {\n    classes,\n    value: _value,\n    renderValue,\n    multiple,\n    onChange: _onChange\n  })), multiple && React__default.createElement(MenuItem, {\n    key: ALL_KEY,\n    value: ALL_KEY\n  }, transformItem(ALL_KEY)), children));\n};\n\nconst styles$1 = {\n  default: {\n    maxWidth: 300\n  },\n  wide: {\n    maxWidth: 700\n  },\n  fit: {\n    maxWidth: '100%'\n  }\n};\nconst useStyles = makeStyles(theme => styles$1);\n\nconst Tooltip = props => {\n  const {\n    isSimple,\n    ..._props\n  } = props;\n  const classes = useStyles(props.variant);\n  const variant = props.variant || 'default';\n  const backgroundClass = isSimple ? \"\" : \"noBackground\";\n  return React__default.createElement(Tooltip$1, Object.assign({\n    classes: {\n      tooltip: `${backgroundClass} ` + classes[variant]\n    },\n    interactive: true,\n    enterDelay: 200,\n    TransitionComponent: Fade\n  }, _props), props.children || React__default.createElement(\"div\", null));\n};\n\nvar variables = {\n  \"mainBackgroundColor\": \"white\",\n  \"headerBackgroundColor\": \"#F7F9FC\",\n  \"fontColor\": \"#0C0B1A\",\n  \"secondaryFontColor\": \"rgba(0, 0, 0, 0.5)\",\n  \"blueColor\": \"#205CF5\",\n  \"lightBlueColor\": \"#BCCEFD\",\n  \"successColor\": \"#27AE60\",\n  \"failureColor\": \"#EB5757\",\n  \"blueGray\": \"#494677\",\n  \"lightGray\": \"#8F9BB2\"\n};\nconst useTabsStyles = makeStyles$1(theme => createStyles({\n  root: {\n    height: 40,\n    paddingTop: 15\n  },\n  tab: {\n    display: 'inline-block',\n    textTransform: 'uppercase',\n    color: variables.blueColor,\n    cursor: 'pointer'\n  },\n  tabsAlignLeft: {\n    textAlign: 'left'\n  },\n  active: {\n    fontWeight: 400,\n    color: variables.fontColor,\n    cursor: 'unset',\n    borderBottom: \"2px solid \" + variables.fontColor,\n    paddingBottom: 6,\n    \"&.dark\": {\n      color: theme.palette.common.black,\n      borderBottom: \"2px solid \" + theme.palette.common.black\n    }\n  },\n  disabled: {\n    color: theme.palette.primary.dark,\n    cursor: 'unset'\n  },\n  highlight: {\n    color: theme.palette.primary.light\n  },\n  separator: {\n    borderRight: \"1px solid \" + theme.palette.primary.dark,\n    height: 20,\n    verticalAlign: 'middle',\n    margin: '0 20px',\n    cursor: 'unset'\n  }\n}));\n\nconst Tabs = _ref3 => {\n  let {\n    classes: _classes2 = {},\n    tabs,\n    currentTab,\n    color,\n    onChange,\n    leftAligned,\n    dark\n  } = _ref3;\n  const _classes = { ...useTabsStyles(),\n    ..._classes2\n  };\n  return React__default.createElement(\"div\", {\n    className: `${_classes.root} ${leftAligned ? _classes.tabsAlignLeft : ''}`\n  }, tabs.map((_ref4, index) => {\n    let {\n      tab,\n      disabled,\n      disabledMessage,\n      highlight,\n      badge\n    } = _ref4;\n    const active = currentTab === tab;\n    const tabLink = React__default.createElement(\"span\", {\n      key: tab,\n      className: `${_classes.tab} ${active ? _classes.active : ''} ${disabled ? _classes.disabled : ''} ${highlight ? _classes.highlight : ''} ${dark ? 'dark' : ''}`,\n      onClick: () => !disabled && onChange(tab),\n      style: {\n        color: color\n      }\n    }, tab, React__default.isValidElement(badge) && badge);\n    return React__default.createElement(\"span\", {\n      key: tab\n    }, disabled && disabledMessage ? React__default.createElement(Tooltip, {\n      title: disabledMessage,\n      isSimple: true\n    }, tabLink) : tabLink, index < tabs.length - 1 && React__default.createElement(\"span\", {\n      className: _classes.tab + ' ' + _classes.separator,\n      key: tab + '_sepparator'\n    }));\n  }));\n};\n\nvar index = {\n  __proto__: null,\n  LoadingOverlay: LoadingOverlay,\n  Select: Select,\n  Tabs: Tabs,\n  Tooltip: Tooltip\n};\n\nconst Bla = () => React__default.createElement(\"div\", null, \"aaa\");\n\nexport default Bla;\nexport { index as UI };","map":{"version":3,"mappings":"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","names":["SpinnerShowDelayMs","LoadingOverlay","delay","isVisible","setIsVisible","useState","useEffect","isRelevant","setTimeout","React","className","style","loadingOverlayContainer","hidden","loadingOverlaySpinner","ALL_KEY","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","classes","icon","styles","selectMenu","list","defaultProps","MenuProps","IconComponent","DefaultIconDown","Select","label","value","onChangecb","transformDisplay","ellipsis","multiple","labelOnTop","children","labelClassName","trimItemsWhenMultiple","props","_value","_onChange","_","item","length","transformItem","i","renderValue","map","join","MUISelect","Object","assign","onChange","MenuItem","key","default","maxWidth","wide","fit","useStyles","makeStyles","theme","Tooltip","isSimple","_props","variant","backgroundClass","MUITooltip","tooltip","interactive","enterDelay","TransitionComponent","Fade","useTabsStyles","createStyles","root","height","paddingTop","tab","display","textTransform","color","variables","blueColor","cursor","tabsAlignLeft","textAlign","active","fontWeight","fontColor","borderBottom","paddingBottom","palette","common","black","disabled","primary","dark","highlight","light","separator","borderRight","verticalAlign","margin","Tabs","tabs","currentTab","leftAligned","_classes","index","disabledMessage","badge","tabLink","onClick","isValidElement","title","Bla"],"sources":["../src/components/UI/LoadingOverlay.tsx","../src/components/UI/Select.tsx","../src/components/UI/Tooltip.tsx","../src/components/UI/Tabs.tsx","../src/index.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport style from '../style/LoadingOverlay.module.sass';\n\nconsole.log\nconst SpinnerShowDelayMs = 350;\n\ninterface LoadingOverlayProps {\n    delay?: number\n}\n\nconst LoadingOverlay: React.FC<LoadingOverlayProps> = ({delay}) => {\n\n    const [isVisible, setIsVisible] = useState(false);\n\n    // @ts-ignore\n    useEffect(() => {\n        let isRelevant = true;\n\n        setTimeout(() => {\n            if(isRelevant)\n                setIsVisible(true);\n        }, delay || SpinnerShowDelayMs);\n\n        return () => isRelevant = false;\n    }, [delay]);\n\n    return <div className={style.loadingOverlayContainer} hidden={!isVisible}>\n        <div className={style.loadingOverlaySpinner}/>\n    </div>\n};\n\nexport default LoadingOverlay;\n","import {ReactComponent as DefaultIconDown} from './assets/default_icon_down.svg';\nimport {MenuItem, Select as MUISelect} from '@material-ui/core';\nimport React from 'react';\nimport {SelectProps as MUISelectProps} from '@material-ui/core/Select/Select';\nimport styles from './style/Select.module.sass';\n\nexport const ALL_KEY= 'All';\n\nconst menuProps: any = {\n    anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n    },\n    transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n};\n\n// icons styles are not overwritten from the Props, only as a separate object\nconst classes = {icon: styles.icon, selectMenu: styles.list};\n\nconst defaultProps = {\n    MenuProps: menuProps,\n    IconComponent: DefaultIconDown\n};\n\nexport interface SelectProps extends MUISelectProps {\n    onChangecb: (arg0: string) => void;\n    value: string | string[];\n    ellipsis?: boolean;\n    labelOnTop?: boolean;\n    className?: string;\n    labelClassName?: string;\n    trimItemsWhenMultiple?: boolean;\n    transformDisplay?: (arg0: string) => string;\n}\n\nexport const Select: React.FC<SelectProps> = ({\n                                                  label,\n                                                  value,\n                                                  onChangecb,\n                                                  transformDisplay,\n                                                  ellipsis = true,\n                                                  multiple,\n                                                  labelOnTop = false,\n                                                  children,\n                                                  className,\n                                                  labelClassName,\n                                                  trimItemsWhenMultiple,\n                                                  ...props\n                                              }) => {\n    let _value = value;\n\n    const _onChange = (_: any, item: { props: { value: any; }; }) => {\n        const value = item.props.value;\n        value === ALL_KEY ? onChangecb(ALL_KEY) : onChangecb(value);\n    }\n\n    if (multiple && (!_value || _value.length === 0)) _value = [ALL_KEY];\n\n    const transformItem: (i: string) => string = transformDisplay ? transformDisplay : i => i;\n\n    const renderValue = multiple\n        ? (item: any[]) => <span className={ellipsis ? 'ellipsis' : ''}>{\n            trimItemsWhenMultiple && item.length > 1 ?\n                transformItem(`${item[item.length-1]} (+${item.length - 1})`):\n                item?.map(transformItem).join(\",\")\n        }</span>\n        : null;\n\n    return <div className={`select ${labelOnTop ? 'labelOnTop' : ''} ${className ? className : ''}`}>\n        {label && <div className={`selectLabel ${labelClassName ? labelClassName : ''}`}>{label}</div>}\n        <MUISelect\n            {...Object.assign({}, defaultProps, props, {\n                classes,\n                value: _value,\n                renderValue,\n                multiple,\n                onChange: _onChange,\n            })}\n        >\n            {multiple && <MenuItem key={ALL_KEY} value={ALL_KEY}>{transformItem(ALL_KEY)}</MenuItem>}\n            {children}\n        </MUISelect>\n    </div>\n}\n","import {Tooltip as MUITooltip, Fade, TooltipProps as MUITooltipProps, makeStyles} from \"@material-ui/core\";\nimport React from \"react\";\n\nexport interface TooltipProps extends MUITooltipProps {\n    variant?: 'default' | 'wide' | 'fit';\n    isSimple?: boolean;\n    classes?: any;\n}\n\nexport type TooltipPlacement = 'bottom-end' | 'bottom-start' | 'bottom' | 'left-end' | 'left-start' | 'left' | 'right-end' | 'right-start' | 'right' | 'top-end' | 'top-start' | 'top';\n\nconst styles = {\n    default: {\n        maxWidth: 300\n    },\n    wide: {\n        maxWidth: 700\n    },\n    fit: {\n        maxWidth: '100%'\n    }\n};\n\nconst useStyles = makeStyles((theme) => styles);\n\nconst Tooltip: React.FC<TooltipProps> = (props) => {\n\n    const {isSimple, ..._props} = props;\n\n    const classes = useStyles(props.variant);\n\n    const variant = props.variant || 'default';\n\n    const backgroundClass = isSimple ? \"\" : \"noBackground\"\n\n    return (\n        <MUITooltip\n            classes={{tooltip: `${backgroundClass} ` + classes[variant]}}\n            interactive={true}\n            enterDelay={200}\n            TransitionComponent={Fade}\n            {..._props}\n        >\n            {props.children || <div/>}\n        </MUITooltip>\n    );\n};\n\nexport default Tooltip;","import Tooltip from \"./Tooltip\";\nimport React from \"react\";\nimport { makeStyles, Theme,createStyles } from '@material-ui/core/styles';\nimport variables from '../../variables.module.scss';\n\ninterface Tab {\n    tab: string,\n    disabled?: boolean,\n    disabledMessage?: string,\n    highlight?: boolean,\n    badge?: any,\n}\n\ninterface Props {\n    classes?: any,\n    tabs: Tab[],\n    currentTab: string,\n    color: string,\n    onChange: (string) => void,\n    leftAligned?: boolean,\n    dark?: boolean,\n}\n\nconst useTabsStyles = makeStyles((theme : Theme) => createStyles({\n    root: {\n        height: 40,\n        paddingTop: 15\n    },\n\n    tab: {\n        display: 'inline-block',\n        textTransform: 'uppercase',\n        color: variables.blueColor,\n        cursor: 'pointer',\n    },\n\n    tabsAlignLeft: {\n        textAlign: 'left'\n    },\n\n    active: {\n        fontWeight: 400,\n        color: variables.fontColor,\n        cursor: 'unset',\n        borderBottom: \"2px solid \" + variables.fontColor,\n        paddingBottom: 6,\n\n        \"&.dark\": {\n            color: theme.palette.common.black,\n            borderBottom: \"2px solid \" + theme.palette.common.black,\n        }\n    },\n\n    disabled: {\n        color: theme.palette.primary.dark,\n        cursor: 'unset'\n    },\n\n    highlight: {\n        color: theme.palette.primary.light,\n    },\n\n    separator: {\n        borderRight: \"1px solid \" + theme.palette.primary.dark,\n        height: 20,\n        verticalAlign: 'middle',\n        margin: '0 20px',\n        cursor: 'unset',\n    }\n}));\n\n\nconst Tabs: React.FC<Props> = ({classes={}, tabs, currentTab, color, onChange, leftAligned, dark}) => {\n    const _classes = {...useTabsStyles(), ...classes};\n    return <div className={`${_classes.root} ${leftAligned ? _classes.tabsAlignLeft : ''}`}>\n        {tabs.map(({tab, disabled, disabledMessage, highlight, badge}, index) => {\n            const active = currentTab === tab;\n            const tabLink = <span\n                key={tab}\n                className={`${_classes.tab} ${active ? _classes.active : ''} ${disabled ? _classes.disabled : ''} ${highlight ? _classes.highlight : ''} ${dark ? 'dark' : ''}`}\n                onClick={() => !disabled && onChange(tab)}\n                style={{color: color}}\n            >\n                {tab}\n\n                {React.isValidElement(badge) && badge}\n            </span>;\n\n            return <span key={tab}>\n                {disabled && disabledMessage ? <Tooltip title={disabledMessage} isSimple>{tabLink}</Tooltip> : tabLink}\n                {index < tabs.length - 1 && <span className={_classes.tab + ' ' + _classes.separator} key={tab + '_sepparator'}></span>}\n            </span>;\n        })}\n    </div>;\n}\n\nexport default Tabs;\n","import React from 'react';\n// import TrafficViewer from './components/TrafficViewer/TrafficViewer';\nimport * as UI from \"./components/UI\"\n\nexport {UI}\n// export default TrafficViewer;\n\nconst Bla = () => <div>aaa</div>;\nexport default Bla;"]},"metadata":{},"sourceType":"module"}