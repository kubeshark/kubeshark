{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","ButtonBase","styles","theme","root","display","textAlign","width","opacity","palette","action","hoverOpacity","focusVisible","focusHighlight","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","CardActionArea","forwardRef","props","ref","children","classes","className","focusVisibleClassName","other","createElement","process","env","NODE_ENV","propTypes","node","object","string","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,OADL;AAEJC,MAAAA,SAAS,EAAE,SAFP;AAGJC,MAAAA,KAAK,EAAE,MAHH;AAIJ,iCAA2B;AACzBC,QAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC;AADL,OAJvB;AAOJ,wCAAkC;AAChCH,QAAAA,OAAO,EAAE;AADuB;AAP9B,KAFD;;AAcL;AACAI,IAAAA,YAAY,EAAE,EAfT;;AAiBL;AACAC,IAAAA,cAAc,EAAE;AACdC,MAAAA,QAAQ,EAAE,QADI;AAEdC,MAAAA,aAAa,EAAE,MAFD;AAGdC,MAAAA,QAAQ,EAAE,UAHI;AAIdC,MAAAA,GAAG,EAAE,CAJS;AAKdC,MAAAA,KAAK,EAAE,CALO;AAMdC,MAAAA,MAAM,EAAE,CANM;AAOdC,MAAAA,IAAI,EAAE,CAPQ;AAQdC,MAAAA,YAAY,EAAE,SARA;AASdb,MAAAA,OAAO,EAAE,CATK;AAUdc,MAAAA,eAAe,EAAE,cAVH;AAWdC,MAAAA,UAAU,EAAEpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB,EAAoC;AAC9CC,QAAAA,QAAQ,EAAEvB,KAAK,CAACqB,WAAN,CAAkBE,QAAlB,CAA2BC;AADS,OAApC;AAXE;AAlBX,GAAP;AAkCD,CAnCM;AAoCP,IAAIC,cAAc,GAAG,aAAa/B,KAAK,CAACgC,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AACrF,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIC,SAAS,GAAGJ,KAAK,CAACI,SAFtB;AAAA,MAGIC,qBAAqB,GAAGL,KAAK,CAACK,qBAHlC;AAAA,MAIIC,KAAK,GAAGxC,wBAAwB,CAACkC,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,uBAArC,CAAR,CAJpC;;AAMA,SAAO,aAAajC,KAAK,CAACwC,aAAN,CAAoBpC,UAApB,EAAgCN,QAAQ,CAAC;AAC3DuC,IAAAA,SAAS,EAAEnC,IAAI,CAACkC,OAAO,CAAC7B,IAAT,EAAe8B,SAAf,CAD4C;AAE3DC,IAAAA,qBAAqB,EAAEpC,IAAI,CAACoC,qBAAD,EAAwBF,OAAO,CAACrB,YAAhC,CAFgC;AAG3DmB,IAAAA,GAAG,EAAEA;AAHsD,GAAD,EAIzDK,KAJyD,CAAxC,EAITJ,QAJS,EAIC,aAAanC,KAAK,CAACwC,aAAN,CAAoB,MAApB,EAA4B;AAC5DH,IAAAA,SAAS,EAAED,OAAO,CAACpB;AADyC,GAA5B,CAJd,CAApB;AAOD,CAdiC,CAAlC;AAeAyB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,cAAc,CAACa,SAAf,GAA2B;AACjE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACET,EAAAA,QAAQ,EAAElC,SAAS,CAAC4C,IAT6C;;AAWjE;AACF;AACA;AACA;AACET,EAAAA,OAAO,EAAEnC,SAAS,CAAC6C,MAf8C;;AAiBjE;AACF;AACA;AACET,EAAAA,SAAS,EAAEpC,SAAS,CAAC8C,MApB4C;;AAsBjE;AACF;AACA;AACET,EAAAA,qBAAqB,EAAErC,SAAS,CAAC8C;AAzBgC,CAAnE,GA0BI,KAAK,CA1BT;AA2BA,eAAe5C,UAAU,CAACE,MAAD,EAAS;AAChC2C,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZjB,cAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);"]},"metadata":{},"sourceType":"module"}