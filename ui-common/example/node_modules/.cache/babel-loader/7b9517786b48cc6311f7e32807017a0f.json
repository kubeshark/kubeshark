{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { ForwardRef, Memo } from 'react-is'; // Simplified polyfill for IE 11 support\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\n\nvar fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\nexport function getFunctionName(fn) {\n  var match = \"\".concat(fn).match(fnNameMatchRegex);\n  var name = match && match[1];\n  return name || '';\n}\n/**\n * @param {function} Component\n * @param {string} fallback\n * @returns {string | undefined}\n */\n\nfunction getFunctionComponentName(Component) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? \"\".concat(wrapperName, \"(\").concat(functionName, \")\") : wrapperName);\n}\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName with added IE 11 support\n *\n * @param {React.ReactType} Component\n * @returns {string | undefined}\n */\n\n\nexport default function getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  if (_typeof(Component) === 'object') {\n    switch (Component.$$typeof) {\n      case ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n\n      case Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n\n      default:\n        return undefined;\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/utils/esm/getDisplayName.js"],"names":["_typeof","ForwardRef","Memo","fnNameMatchRegex","getFunctionName","fn","match","concat","name","getFunctionComponentName","Component","fallback","arguments","length","undefined","displayName","getWrappedName","outerType","innerType","wrapperName","functionName","getDisplayName","$$typeof","render","type"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mCAApB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,UAAjC,C,CAA6C;AAC7C;;AAEA,IAAIC,gBAAgB,GAAG,mDAAvB;AACA,OAAO,SAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAClC,MAAIC,KAAK,GAAG,GAAGC,MAAH,CAAUF,EAAV,EAAcC,KAAd,CAAoBH,gBAApB,CAAZ;AACA,MAAIK,IAAI,GAAGF,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAzB;AACA,SAAOE,IAAI,IAAI,EAAf;AACD;AACD;AACA;AACA;AACA;AACA;;AAEA,SAASC,wBAAT,CAAkCC,SAAlC,EAA6C;AAC3C,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAnF;AACA,SAAOF,SAAS,CAACK,WAAV,IAAyBL,SAAS,CAACF,IAAnC,IAA2CJ,eAAe,CAACM,SAAD,CAA1D,IAAyEC,QAAhF;AACD;;AAED,SAASK,cAAT,CAAwBC,SAAxB,EAAmCC,SAAnC,EAA8CC,WAA9C,EAA2D;AACzD,MAAIC,YAAY,GAAGX,wBAAwB,CAACS,SAAD,CAA3C;AACA,SAAOD,SAAS,CAACF,WAAV,KAA0BK,YAAY,KAAK,EAAjB,GAAsB,GAAGb,MAAH,CAAUY,WAAV,EAAuB,GAAvB,EAA4BZ,MAA5B,CAAmCa,YAAnC,EAAiD,GAAjD,CAAtB,GAA8ED,WAAxG,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAe,SAASE,cAAT,CAAwBX,SAAxB,EAAmC;AAChD,MAAIA,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAOI,SAAP;AACD;;AAED,MAAI,OAAOJ,SAAP,KAAqB,QAAzB,EAAmC;AACjC,WAAOA,SAAP;AACD;;AAED,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnC,WAAOD,wBAAwB,CAACC,SAAD,EAAY,WAAZ,CAA/B;AACD;;AAED,MAAIV,OAAO,CAACU,SAAD,CAAP,KAAuB,QAA3B,EAAqC;AACnC,YAAQA,SAAS,CAACY,QAAlB;AACE,WAAKrB,UAAL;AACE,eAAOe,cAAc,CAACN,SAAD,EAAYA,SAAS,CAACa,MAAtB,EAA8B,YAA9B,CAArB;;AAEF,WAAKrB,IAAL;AACE,eAAOc,cAAc,CAACN,SAAD,EAAYA,SAAS,CAACc,IAAtB,EAA4B,MAA5B,CAArB;;AAEF;AACE,eAAOV,SAAP;AARJ;AAUD;;AAED,SAAOA,SAAP;AACD","sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { ForwardRef, Memo } from 'react-is'; // Simplified polyfill for IE 11 support\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\n\nvar fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\nexport function getFunctionName(fn) {\n  var match = \"\".concat(fn).match(fnNameMatchRegex);\n  var name = match && match[1];\n  return name || '';\n}\n/**\n * @param {function} Component\n * @param {string} fallback\n * @returns {string | undefined}\n */\n\nfunction getFunctionComponentName(Component) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? \"\".concat(wrapperName, \"(\").concat(functionName, \")\") : wrapperName);\n}\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName with added IE 11 support\n *\n * @param {React.ReactType} Component\n * @returns {string | undefined}\n */\n\n\nexport default function getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  if (_typeof(Component) === 'object') {\n    switch (Component.$$typeof) {\n      case ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n\n      case Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n\n      default:\n        return undefined;\n    }\n  }\n\n  return undefined;\n}"]},"metadata":{},"sourceType":"module"}