{"ast":null,"code":"'use strict';\n\nmodule.exports = log;\nlog.displayName = 'log';\nlog.aliases = [];\n\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern: /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [{\n      pattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n      alias: ['error', 'important']\n    }, {\n      pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n      alias: ['warning', 'important']\n    }, {\n      pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n      alias: ['info', 'keyword']\n    }, {\n      pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n      alias: ['debug', 'keyword']\n    }, {\n      pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n      alias: ['trace', 'comment']\n    }],\n    property: {\n      pattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(/\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source + '|' + /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/.source + '|' + /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/.source, 'i'),\n      alias: 'number'\n    },\n    time: {\n      pattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/log.js"],"names":["module","exports","log","displayName","aliases","Prism","languages","string","pattern","greedy","exception","lookbehind","alias","inside","keyword","function","punctuation","level","property","separator","url","email","domain","uuid","hash","date","RegExp","source","time","boolean","number","operator"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}