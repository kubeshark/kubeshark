{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js"],"names":["_extends","_toConsumableArray","_objectWithoutProperties","React","isFragment","PropTypes","clsx","withStyles","Typography","BreadcrumbCollapsed","styles","root","ol","display","flexWrap","alignItems","padding","margin","listStyle","li","separator","userSelect","marginLeft","marginRight","insertSeparators","items","className","reduce","acc","current","index","length","concat","createElement","key","push","Breadcrumbs","forwardRef","props","ref","children","classes","_props$component","component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","other","_React$useState","useState","expanded","setExpanded","renderItemsBeforeAndAfter","allItems","handleClickExpand","event","focusable","currentTarget","parentNode","querySelector","focus","process","env","NODE_ENV","console","error","join","slice","onClick","Children","toArray","filter","child","isValidElement","map","color","propTypes","node","object","string","elementType","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);"]},"metadata":{},"sourceType":"module"}