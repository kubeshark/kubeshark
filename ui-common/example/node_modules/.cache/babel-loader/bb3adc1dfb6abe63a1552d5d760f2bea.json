{"ast":null,"code":"'use strict';\n\nvar refractorC = require('./c.js');\n\nmodule.exports = bison;\nbison.displayName = 'bison';\nbison.aliases = [];\n\nfunction bison(Prism) {\n  Prism.register(refractorC);\n  Prism.languages.bison = Prism.languages.extend('c', {});\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  });\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/bison.js"],"names":["refractorC","require","module","exports","bison","displayName","aliases","Prism","register","languages","extend","insertBefore","pattern","inside","c","delimiter","alias","punctuation","rest","comment","string","property","keyword","number","lookbehind"],"mappings":"AAAA;;AACA,IAAIA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAAxB;;AACAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,UAAf;AACAO,EAAAA,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,GAAvB,EAA4B,EAA5B,CAAxB;AACAH,EAAAA,KAAK,CAACE,SAAN,CAAgBE,YAAhB,CAA6B,OAA7B,EAAsC,SAAtC,EAAiD;AAC/CP,IAAAA,KAAK,EAAE;AACL;AACA;AACA;AACAQ,MAAAA,OAAO,EAAE,+BAJJ;AAKLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAE;AACD;AACAF,UAAAA,OAAO,EAAE,yCAFR;AAGDC,UAAAA,MAAM,EAAE;AACNE,YAAAA,SAAS,EAAE;AACTH,cAAAA,OAAO,EAAE,aADA;AAETI,cAAAA,KAAK,EAAE;AAFE,aADL;AAKN,8BAAkB;AAChBJ,cAAAA,OAAO,EAAE,0BADO;AAEhBI,cAAAA,KAAK,EAAE,UAFS;AAGhBH,cAAAA,MAAM,EAAE;AACNI,gBAAAA,WAAW,EAAE;AADP;AAHQ,aALZ;AAYNC,YAAAA,IAAI,EAAEX,KAAK,CAACE,SAAN,CAAgBK;AAZhB;AAHP,SADG;AAmBNK,QAAAA,OAAO,EAAEZ,KAAK,CAACE,SAAN,CAAgBK,CAAhB,CAAkBK,OAnBrB;AAoBNC,QAAAA,MAAM,EAAEb,KAAK,CAACE,SAAN,CAAgBK,CAAhB,CAAkBM,MApBpB;AAqBNC,QAAAA,QAAQ,EAAE,UArBJ;AAsBNC,QAAAA,OAAO,EAAE,MAtBH;AAuBNC,QAAAA,MAAM,EAAE;AACNX,UAAAA,OAAO,EAAE,+BADH;AAENY,UAAAA,UAAU,EAAE;AAFN,SAvBF;AA2BNP,QAAAA,WAAW,EAAE;AA3BP;AALH;AADwC,GAAjD;AAqCD","sourcesContent":["'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}