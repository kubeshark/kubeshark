{"ast":null,"code":"/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\nimport { whitespace } from 'hast-util-whitespace';\nexport const siblingAfter = siblings(1);\nexport const siblingBefore = siblings(-1);\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\n\nfunction siblings(increment) {\n  return sibling;\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children;\n    let offset = index + increment;\n    let next = siblings && siblings[offset];\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment;\n        next = siblings[offset];\n      }\n    }\n\n    return next;\n  }\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/hast-util-to-html/lib/omission/util/siblings.js"],"names":["whitespace","siblingAfter","siblings","siblingBefore","increment","sibling","parent","index","includeWhitespace","children","offset","next"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAQA,UAAR,QAAyB,sBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAGC,QAAQ,CAAC,CAAD,CAA7B;AACP,OAAO,MAAMC,aAAa,GAAGD,QAAQ,CAAC,CAAC,CAAF,CAA9B;AAEP;AACA;AACA;AACA;AACA;;AACA,SAASA,QAAT,CAAkBE,SAAlB,EAA6B;AAC3B,SAAOC,OAAP;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,WAASA,OAAT,CAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,iBAAhC,EAAmD;AACjD,UAAMN,QAAQ,GAAGI,MAAM,IAAIA,MAAM,CAACG,QAAlC;AACA,QAAIC,MAAM,GAAGH,KAAK,GAAGH,SAArB;AACA,QAAIO,IAAI,GAAGT,QAAQ,IAAIA,QAAQ,CAACQ,MAAD,CAA/B;;AAEA,QAAI,CAACF,iBAAL,EAAwB;AACtB,aAAOG,IAAI,IAAIX,UAAU,CAACW,IAAD,CAAzB,EAAiC;AAC/BD,QAAAA,MAAM,IAAIN,SAAV;AACAO,QAAAA,IAAI,GAAGT,QAAQ,CAACQ,MAAD,CAAf;AACD;AACF;;AAED,WAAOC,IAAP;AACD;AACF","sourcesContent":["/**\n * @typedef {import('../../types.js').Parent} Parent\n * @typedef {import('../../types.js').Child} Child\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @param {Parent} parent\n   * @param {number} index\n   * @param {boolean} [includeWhitespace=false]\n   * @returns {Child}\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent && parent.children\n    let offset = index + increment\n    let next = siblings && siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    return next\n  }\n}\n"]},"metadata":{},"sourceType":"module"}