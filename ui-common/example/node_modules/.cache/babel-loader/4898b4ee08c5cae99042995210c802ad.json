{"ast":null,"code":"'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\n\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\n\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n  constructor(preprocessor, opts) {\n    super(preprocessor, opts);\n    this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n    this.lastErrOffset = -1;\n  }\n\n  _reportError(code) {\n    //NOTE: avoid reporting error twice on advance/retreat\n    if (this.lastErrOffset !== this.posTracker.offset) {\n      this.lastErrOffset = this.posTracker.offset;\n\n      super._reportError(code);\n    }\n  }\n\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js"],"names":["ErrorReportingMixinBase","require","PositionTrackingPreprocessorMixin","Mixin","ErrorReportingPreprocessorMixin","constructor","preprocessor","opts","posTracker","install","lastErrOffset","_reportError","code","offset","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,uBAAuB,GAAGC,OAAO,CAAC,cAAD,CAAvC;;AACA,MAAMC,iCAAiC,GAAGD,OAAO,CAAC,yCAAD,CAAjD;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,mBAAD,CAArB;;AAEA,MAAMG,+BAAN,SAA8CJ,uBAA9C,CAAsE;AAClEK,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqB;AAC5B,UAAMD,YAAN,EAAoBC,IAApB;AAEA,SAAKC,UAAL,GAAkBL,KAAK,CAACM,OAAN,CAAcH,YAAd,EAA4BJ,iCAA5B,CAAlB;AACA,SAAKQ,aAAL,GAAqB,CAAC,CAAtB;AACH;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf;AACA,QAAI,KAAKF,aAAL,KAAuB,KAAKF,UAAL,CAAgBK,MAA3C,EAAmD;AAC/C,WAAKH,aAAL,GAAqB,KAAKF,UAAL,CAAgBK,MAArC;;AACA,YAAMF,YAAN,CAAmBC,IAAnB;AACH;AACJ;;AAdiE;;AAiBtEE,MAAM,CAACC,OAAP,GAAiBX,+BAAjB","sourcesContent":["'use strict';\n\nconst ErrorReportingMixinBase = require('./mixin-base');\nconst PositionTrackingPreprocessorMixin = require('../position-tracking/preprocessor-mixin');\nconst Mixin = require('../../utils/mixin');\n\nclass ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {\n    constructor(preprocessor, opts) {\n        super(preprocessor, opts);\n\n        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);\n        this.lastErrOffset = -1;\n    }\n\n    _reportError(code) {\n        //NOTE: avoid reporting error twice on advance/retreat\n        if (this.lastErrOffset !== this.posTracker.offset) {\n            this.lastErrOffset = this.posTracker.offset;\n            super._reportError(code);\n        }\n    }\n}\n\nmodule.exports = ErrorReportingPreprocessorMixin;\n"]},"metadata":{},"sourceType":"script"}