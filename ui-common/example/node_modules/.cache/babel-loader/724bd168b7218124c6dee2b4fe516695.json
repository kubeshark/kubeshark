{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanel component was renamed to Accordion to use a more common naming convention.\n *\n * You should use `import { Accordion } from '@material-ui/core'`\n * or `import Accordion from '@material-ui/core/Accordion'`.\n */\n\nvar ExpansionPanel = /*#__PURE__*/React.forwardRef(function ExpansionPanel(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanel component was renamed to Accordion to use a more common naming convention.', '', \"You should use `import { Accordion } from '@material-ui/core'`\", \"or `import Accordion from '@material-ui/core/Accordion'`\"].join('\\n'));\n    }\n  }\n\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js"],"names":["_extends","_toArray","_slicedToArray","_objectWithoutProperties","React","isFragment","PropTypes","clsx","chainPropTypes","Collapse","Paper","withStyles","ExpansionPanelContext","useControlled","styles","theme","transition","duration","transitions","shortest","root","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","rounded","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","expanded","disabled","warnedOnce","ExpansionPanel","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","expandedProp","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","TransitionProps","other","_useControlled","controlled","default","name","state","_useControlled2","setExpandedState","handleChange","useCallback","event","_React$Children$toArr","Children","toArray","_React$Children$toArr2","summary","slice","contextValue","useMemo","toggle","createElement","Provider","value","in","timeout","id","role","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","elementType"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanel component was renamed to Accordion to use a more common naming convention.\n *\n * You should use `import { Accordion } from '@material-ui/core'`\n * or `import Accordion from '@material-ui/core/Accordion'`.\n */\n\nvar ExpansionPanel = /*#__PURE__*/React.forwardRef(function ExpansionPanel(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanel component was renamed to Accordion to use a more common naming convention.', '', \"You should use `import { Accordion } from '@material-ui/core'`\", \"or `import Accordion from '@material-ui/core/Accordion'`\"].join('\\n'));\n    }\n  }\n\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);"]},"metadata":{},"sourceType":"module"}