{"ast":null,"code":"'use strict';\n\nmodule.exports = gedcom;\ngedcom.displayName = 'gedcom';\ngedcom.aliases = [];\n\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/gedcom.js"],"names":["module","exports","gedcom","displayName","aliases","Prism","languages","pattern","lookbehind","inside","pointer","alias","tag","level"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvB,kBAAc;AACZ;AACAK,MAAAA,OAAO,EACL,kFAHU;AAIZC,MAAAA,UAAU,EAAE,IAJA;AAKZC,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAE;AACPH,UAAAA,OAAO,EAAE,wDADF;AAEPI,UAAAA,KAAK,EAAE;AAFA;AADH;AALI,KADS;AAavBC,IAAAA,GAAG,EAAE;AACH;AACAL,MAAAA,OAAO,EACL,+EAHC;AAIHC,MAAAA,UAAU,EAAE,IAJT;AAKHG,MAAAA,KAAK,EAAE;AALJ,KAbkB;AAoBvBE,IAAAA,KAAK,EAAE;AACLN,MAAAA,OAAO,EAAE,eADJ;AAELC,MAAAA,UAAU,EAAE,IAFP;AAGLG,MAAAA,KAAK,EAAE;AAHF,KApBgB;AAyBvBD,IAAAA,OAAO,EAAE;AACPH,MAAAA,OAAO,EAAE,sDADF;AAEPI,MAAAA,KAAK,EAAE;AAFA;AAzBc,GAAzB;AA8BD","sourcesContent":["'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}