{"ast":null,"code":"'use strict';\n\nvar refractorJavadoclike = require('./javadoclike.js');\n\nvar refractorTypescript = require('./typescript.js');\n\nmodule.exports = jsdoc;\njsdoc.displayName = 'jsdoc';\njsdoc.aliases = [];\n\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike);\n  Prism.register(refractorTypescript);\n\n  (function (Prism) {\n    var javascript = Prism.languages.javascript;\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source;\n    var parameterPrefix = '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)';\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    });\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(parameterPrefix + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [{\n        pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function () {\n          return type;\n        })),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }, {\n        pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n        lookbehind: true,\n        inside: {\n          string: javascript.string,\n          number: javascript.number,\n          boolean: javascript.boolean,\n          keyword: Prism.languages.typescript.keyword,\n          operator: /=>|\\.\\.\\.|[&|?:*]/,\n          punctuation: /[.,;=<>{}()[\\]]/\n        }\n      }],\n      example: {\n        pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    });\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/jsdoc.js"],"names":["refractorJavadoclike","require","refractorTypescript","module","exports","jsdoc","displayName","aliases","Prism","register","javascript","languages","type","source","parameterPrefix","extend","parameter","pattern","RegExp","lookbehind","inside","punctuation","insertBefore","code","alias","replace","string","number","boolean","keyword","typescript","operator","example","javadoclike","addSupport"],"mappings":"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","sourcesContent":["'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}