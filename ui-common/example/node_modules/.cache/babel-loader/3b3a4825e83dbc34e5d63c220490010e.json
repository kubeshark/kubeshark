{"ast":null,"code":"/*\nLanguage: Protocol Buffers\nAuthor: Dan Tao <daniel.tao@gmail.com>\nDescription: Protocol buffer message definition format\nWebsite: https://developers.google.com/protocol-buffers/docs/proto3\nCategory: protocols\n*/\nfunction protobuf(hljs) {\n  const KEYWORDS = [\"package\", \"import\", \"option\", \"optional\", \"required\", \"repeated\", \"group\", \"oneof\"];\n  const TYPES = [\"double\", \"float\", \"int32\", \"int64\", \"uint32\", \"uint64\", \"sint32\", \"sint64\", \"fixed32\", \"fixed64\", \"sfixed32\", \"sfixed64\", \"bool\", \"string\", \"bytes\"];\n  const CLASS_DEFINITION = {\n    match: [/(message|enum|service)\\s+/, hljs.IDENT_RE],\n    scope: {\n      1: \"keyword\",\n      2: \"title.class\"\n    }\n  };\n  return {\n    name: 'Protocol Buffers',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: ['true', 'false']\n    },\n    contains: [hljs.QUOTE_STRING_MODE, hljs.NUMBER_MODE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, CLASS_DEFINITION, {\n      className: 'function',\n      beginKeywords: 'rpc',\n      end: /[{;]/,\n      excludeEnd: true,\n      keywords: 'rpc returns'\n    }, {\n      // match enum items (relevance)\n      // BLAH = ...;\n      begin: /^\\s*[A-Z_]+(?=\\s*=[^\\n]+;$)/\n    }]\n  };\n}\n\nmodule.exports = protobuf;","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/highlight.js/lib/languages/protobuf.js"],"names":["protobuf","hljs","KEYWORDS","TYPES","CLASS_DEFINITION","match","IDENT_RE","scope","name","keywords","keyword","type","literal","contains","QUOTE_STRING_MODE","NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","beginKeywords","end","excludeEnd","begin","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,QAAMC,QAAQ,GAAG,CACf,SADe,EAEf,QAFe,EAGf,QAHe,EAIf,UAJe,EAKf,UALe,EAMf,UANe,EAOf,OAPe,EAQf,OARe,CAAjB;AAUA,QAAMC,KAAK,GAAG,CACZ,QADY,EAEZ,OAFY,EAGZ,OAHY,EAIZ,OAJY,EAKZ,QALY,EAMZ,QANY,EAOZ,QAPY,EAQZ,QARY,EASZ,SATY,EAUZ,SAVY,EAWZ,UAXY,EAYZ,UAZY,EAaZ,MAbY,EAcZ,QAdY,EAeZ,OAfY,CAAd;AAiBA,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,CACL,2BADK,EAELJ,IAAI,CAACK,QAFA,CADgB;AAKvBC,IAAAA,KAAK,EAAE;AACL,SAAG,SADE;AAEL,SAAG;AAFE;AALgB,GAAzB;AAWA,SAAO;AACLC,IAAAA,IAAI,EAAE,kBADD;AAELC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAER,QADD;AAERS,MAAAA,IAAI,EAAER,KAFE;AAGRS,MAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,OAAT;AAHD,KAFL;AAOLC,IAAAA,QAAQ,EAAE,CACRZ,IAAI,CAACa,iBADG,EAERb,IAAI,CAACc,WAFG,EAGRd,IAAI,CAACe,mBAHG,EAIRf,IAAI,CAACgB,oBAJG,EAKRb,gBALQ,EAMR;AACEc,MAAAA,SAAS,EAAE,UADb;AAEEC,MAAAA,aAAa,EAAE,KAFjB;AAGEC,MAAAA,GAAG,EAAE,MAHP;AAGeC,MAAAA,UAAU,EAAE,IAH3B;AAIEZ,MAAAA,QAAQ,EAAE;AAJZ,KANQ,EAYR;AAAE;AACA;AACAa,MAAAA,KAAK,EAAE;AAFT,KAZQ;AAPL,GAAP;AAyBD;;AAEDC,MAAM,CAACC,OAAP,GAAiBxB,QAAjB","sourcesContent":["/*\nLanguage: Protocol Buffers\nAuthor: Dan Tao <daniel.tao@gmail.com>\nDescription: Protocol buffer message definition format\nWebsite: https://developers.google.com/protocol-buffers/docs/proto3\nCategory: protocols\n*/\n\nfunction protobuf(hljs) {\n  const KEYWORDS = [\n    \"package\",\n    \"import\",\n    \"option\",\n    \"optional\",\n    \"required\",\n    \"repeated\",\n    \"group\",\n    \"oneof\"\n  ];\n  const TYPES = [\n    \"double\",\n    \"float\",\n    \"int32\",\n    \"int64\",\n    \"uint32\",\n    \"uint64\",\n    \"sint32\",\n    \"sint64\",\n    \"fixed32\",\n    \"fixed64\",\n    \"sfixed32\",\n    \"sfixed64\",\n    \"bool\",\n    \"string\",\n    \"bytes\"\n  ];\n  const CLASS_DEFINITION = {\n    match: [\n      /(message|enum|service)\\s+/,\n      hljs.IDENT_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      2: \"title.class\"\n    }\n  };\n\n  return {\n    name: 'Protocol Buffers',\n    keywords: {\n      keyword: KEYWORDS,\n      type: TYPES,\n      literal: ['true', 'false']\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      CLASS_DEFINITION,\n      {\n        className: 'function',\n        beginKeywords: 'rpc',\n        end: /[{;]/, excludeEnd: true,\n        keywords: 'rpc returns'\n      },\n      { // match enum items (relevance)\n        // BLAH = ...;\n        begin: /^\\s*[A-Z_]+(?=\\s*=[^\\n]+;$)/\n      }\n    ]\n  };\n}\n\nmodule.exports = protobuf;\n"]},"metadata":{},"sourceType":"script"}