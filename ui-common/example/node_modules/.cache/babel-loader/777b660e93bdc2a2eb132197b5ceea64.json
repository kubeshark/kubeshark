{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).\n    // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.\n    if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","chainPropTypes","ButtonBase","IconButton","withStyles","AccordionContext","styles","theme","transition","duration","transitions","shortest","root","display","minHeight","create","padding","spacing","cursor","backgroundColor","palette","action","focus","opacity","disabledOpacity","expanded","focused","focusVisible","disabled","content","flexGrow","margin","expandIcon","transform","AccordionSummary","forwardRef","props","ref","children","classes","className","focusVisibleClassName","_props$IconButtonProp","IconButtonProps","onClick","other","_React$useContext","useContext","_React$useContext$dis","toggle","handleChange","event","createElement","focusRipple","disableRipple","component","edge","tabIndex","role","process","env","NODE_ENV","propTypes","node","object","undefined","indexOf","Error","join","string","func","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,MAAIC,UAAU,GAAG;AACfC,IAAAA,QAAQ,EAAEF,KAAK,CAACG,WAAN,CAAkBD,QAAlB,CAA2BE;AADtB,GAAjB;AAGA,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,SAAS,EAAE,IAAI,CAFX;AAGJN,MAAAA,UAAU,EAAED,KAAK,CAACG,WAAN,CAAkBK,MAAlB,CAAyB,CAAC,YAAD,EAAe,kBAAf,CAAzB,EAA6DP,UAA7D,CAHR;AAIJQ,MAAAA,OAAO,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAJL;AAKJ,gCAA0B;AACxBC,QAAAA,MAAM,EAAE;AADgB,OALtB;AAQJ,oBAAc;AACZJ,QAAAA,SAAS,EAAE;AADC,OARV;AAWJ,mCAA6B;AAC3BK,QAAAA,eAAe,EAAEZ,KAAK,CAACa,OAAN,CAAcC,MAAd,CAAqBC;AADX,OAXzB;AAcJ,oBAAc;AACZC,QAAAA,OAAO,EAAEhB,KAAK,CAACa,OAAN,CAAcC,MAAd,CAAqBG;AADlB;AAdV,KAFD;;AAqBL;AACAC,IAAAA,QAAQ,EAAE,EAtBL;;AAwBL;AACAC,IAAAA,OAAO,EAAE,EAzBJ;;AA2BL;AACAC,IAAAA,YAAY,EAAE,EA5BT;;AA8BL;AACAC,IAAAA,QAAQ,EAAE,EA/BL;;AAiCL;AACAC,IAAAA,OAAO,EAAE;AACPhB,MAAAA,OAAO,EAAE,MADF;AAEPiB,MAAAA,QAAQ,EAAE,CAFH;AAGPtB,MAAAA,UAAU,EAAED,KAAK,CAACG,WAAN,CAAkBK,MAAlB,CAAyB,CAAC,QAAD,CAAzB,EAAqCP,UAArC,CAHL;AAIPuB,MAAAA,MAAM,EAAE,QAJD;AAKP,oBAAc;AACZA,QAAAA,MAAM,EAAE;AADI;AALP,KAlCJ;;AA4CL;AACAC,IAAAA,UAAU,EAAE;AACVC,MAAAA,SAAS,EAAE,cADD;AAEVzB,MAAAA,UAAU,EAAED,KAAK,CAACG,WAAN,CAAkBK,MAAlB,CAAyB,WAAzB,EAAsCP,UAAtC,CAFF;AAGV,iBAAW;AACT;AACA;AACA;AACAW,QAAAA,eAAe,EAAE;AAJR,OAHD;AASV,oBAAc;AACZc,QAAAA,SAAS,EAAE;AADC;AATJ;AA7CP,GAAP;AA2DD,CA/DM;AAgEP,IAAIC,gBAAgB,GAAG,aAAapC,KAAK,CAACqC,UAAN,CAAiB,SAASD,gBAAT,CAA0BE,KAA1B,EAAiCC,GAAjC,EAAsC;AACzF,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIC,SAAS,GAAGJ,KAAK,CAACI,SAFtB;AAAA,MAGIR,UAAU,GAAGI,KAAK,CAACJ,UAHvB;AAAA,MAIIS,qBAAqB,GAAGL,KAAK,CAACK,qBAJlC;AAAA,MAKIC,qBAAqB,GAAGN,KAAK,CAACO,eALlC;AAAA,MAMIA,eAAe,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAN9D;AAAA,MAOIE,OAAO,GAAGR,KAAK,CAACQ,OAPpB;AAAA,MAQIC,KAAK,GAAGhD,wBAAwB,CAACuC,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,YAArC,EAAmD,uBAAnD,EAA4E,iBAA5E,EAA+F,SAA/F,CAAR,CARpC;;AAUA,MAAIU,iBAAiB,GAAGhD,KAAK,CAACiD,UAAN,CAAiB1C,gBAAjB,CAAxB;AAAA,MACI2C,qBAAqB,GAAGF,iBAAiB,CAAClB,QAD9C;AAAA,MAEIA,QAAQ,GAAGoB,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAF1D;AAAA,MAGIvB,QAAQ,GAAGqB,iBAAiB,CAACrB,QAHjC;AAAA,MAIIwB,MAAM,GAAGH,iBAAiB,CAACG,MAJ/B;;AAMA,MAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AAC9C,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,KAAD,CAAN;AACD;;AAED,QAAIP,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACO,KAAD,CAAP;AACD;AACF,GARD;;AAUA,SAAO,aAAarD,KAAK,CAACsD,aAAN,CAAoBlD,UAApB,EAAgCN,QAAQ,CAAC;AAC3DyD,IAAAA,WAAW,EAAE,KAD8C;AAE3DC,IAAAA,aAAa,EAAE,IAF4C;AAG3D1B,IAAAA,QAAQ,EAAEA,QAHiD;AAI3D2B,IAAAA,SAAS,EAAE,KAJgD;AAK3D,qBAAiB9B,QAL0C;AAM3De,IAAAA,SAAS,EAAExC,IAAI,CAACuC,OAAO,CAAC3B,IAAT,EAAe4B,SAAf,EAA0BZ,QAAQ,IAAIW,OAAO,CAACX,QAA9C,EAAwDH,QAAQ,IAAIc,OAAO,CAACd,QAA5E,CAN4C;AAO3DgB,IAAAA,qBAAqB,EAAEzC,IAAI,CAACuC,OAAO,CAACZ,YAAT,EAAuBY,OAAO,CAACb,OAA/B,EAAwCe,qBAAxC,CAPgC;AAQ3DG,IAAAA,OAAO,EAAEM,YARkD;AAS3Db,IAAAA,GAAG,EAAEA;AATsD,GAAD,EAUzDQ,KAVyD,CAAxC,EAUT,aAAa/C,KAAK,CAACsD,aAAN,CAAoB,KAApB,EAA2B;AACjDZ,IAAAA,SAAS,EAAExC,IAAI,CAACuC,OAAO,CAACV,OAAT,EAAkBJ,QAAQ,IAAIc,OAAO,CAACd,QAAtC;AADkC,GAA3B,EAErBa,QAFqB,CAVJ,EAYNN,UAAU,IAAI,aAAalC,KAAK,CAACsD,aAAN,CAAoBjD,UAApB,EAAgCP,QAAQ,CAAC;AAChF4C,IAAAA,SAAS,EAAExC,IAAI,CAACuC,OAAO,CAACP,UAAT,EAAqBP,QAAQ,IAAIc,OAAO,CAACd,QAAzC,CADiE;AAEhF+B,IAAAA,IAAI,EAAE,KAF0E;AAGhFD,IAAAA,SAAS,EAAE,KAHqE;AAIhFE,IAAAA,QAAQ,EAAE,IAJsE;AAKhFC,IAAAA,IAAI,EAAE,IAL0E;AAMhF,mBAAe;AANiE,GAAD,EAO9Ef,eAP8E,CAAxC,EAOpBX,UAPoB,CAZrB,CAApB;AAoBD,CA/CmC,CAApC;AAgDA2B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC3B,gBAAgB,CAAC4B,SAAjB,GAA6B;AACnE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACExB,EAAAA,QAAQ,EAAEvC,SAAS,CAACgE,IAT+C;;AAWnE;AACF;AACA;AACA;AACExB,EAAAA,OAAO,EAAEtC,cAAc,CAACF,SAAS,CAACiE,MAAX,EAAmB,UAAU5B,KAAV,EAAiB;AACzD;AACA;AACA,QAAIA,KAAK,CAACG,OAAN,CAAcb,OAAd,KAA0BuC,SAA1B,IAAuC7B,KAAK,CAACG,OAAN,CAAcb,OAAd,CAAsBwC,OAAtB,CAA8B,GAA9B,MAAuC,CAAC,CAAnF,EAAsF;AACpF,aAAO,IAAIC,KAAJ,CAAU,CAAC,uDAAD,EAA0D,qCAA1D,EAAiG,2DAAjG,EAA8JC,IAA9J,CAAmK,IAAnK,CAAV,CAAP;AACD;;AAED,WAAO,IAAP;AACD,GARsB,CAf4C;;AAyBnE;AACF;AACA;AACE5B,EAAAA,SAAS,EAAEzC,SAAS,CAACsE,MA5B8C;;AA8BnE;AACF;AACA;AACErC,EAAAA,UAAU,EAAEjC,SAAS,CAACgE,IAjC6C;;AAmCnE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEtB,EAAAA,qBAAqB,EAAE1C,SAAS,CAACsE,MA3CkC;;AA6CnE;AACF;AACA;AACE1B,EAAAA,eAAe,EAAE5C,SAAS,CAACiE,MAhDwC;;AAkDnE;AACF;AACA;AACEpB,EAAAA,OAAO,EAAE7C,SAAS,CAACuE;AArDgD,CAArE,GAsDI,KAAK,CAtDT;AAuDA,eAAelE,UAAU,CAACE,MAAD,EAAS;AAChCiE,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZrC,gBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    // Guard against when generation of classes is disabled in the stylesheets (`disableGeneration`).\n    // For `disableGeneration` we don't have an accurate warning but `disableGeneration` is an advanced use case anyway.\n    if (props.classes.focused !== undefined && props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);"]},"metadata":{},"sourceType":"module"}