{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/Container/Container.js"],"names":["_extends","_objectWithoutProperties","_defineProperty","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","disableGutters","fixed","Object","keys","values","reduce","acc","breakpoint","value","maxWidth","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","Container","forwardRef","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","_props$fixed","_props$maxWidth","other","createElement","concat","String","process","env","NODE_ENV","propTypes","children","node","isRequired","object","string","elementType","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"]},"metadata":{},"sourceType":"module"}