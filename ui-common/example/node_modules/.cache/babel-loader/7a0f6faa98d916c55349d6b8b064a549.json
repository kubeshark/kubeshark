{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js"],"names":["_extends","getDisplayName","mergeClasses","options","arguments","length","undefined","baseClasses","newClasses","Component","nextClasses","process","env","NODE_ENV","console","error","concat","join","Object","keys","forEach","key"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,eAAe,SAASC,YAAT,GAAwB;AACrC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIG,WAAW,GAAGJ,OAAO,CAACI,WAA1B;AAAA,MACIC,UAAU,GAAGL,OAAO,CAACK,UADzB;AAAA,MAEIC,SAAS,GAAGN,OAAO,CAACM,SAFxB;;AAIA,MAAI,CAACD,UAAL,EAAiB;AACf,WAAOD,WAAP;AACD;;AAED,MAAIG,WAAW,GAAGV,QAAQ,CAAC,EAAD,EAAKO,WAAL,CAA1B;;AAEA,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,OAAOL,UAAP,KAAsB,QAA1B,EAAoC;AAClCM,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,2BAA2BC,MAA3B,CAAkCR,UAAlC,EAA8C,IAA9C,IAAsD,mCAAmCQ,MAAnC,CAA0Cf,cAAc,CAACQ,SAAD,CAAxD,EAAqE,gBAArE,CAAvD,EAA+I,mDAA/I,EAAoMQ,IAApM,CAAyM,IAAzM,CAAd;AACA,aAAOV,WAAP;AACD;AACF;;AAEDW,EAAAA,MAAM,CAACC,IAAP,CAAYX,UAAZ,EAAwBY,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAC7C,QAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,CAACN,WAAW,CAACc,GAAD,CAAZ,IAAqBb,UAAU,CAACa,GAAD,CAAnC,EAA0C;AACxCP,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,yBAAyBC,MAAzB,CAAgCK,GAAhC,EAAqC,IAArC,IAA6C,sDAAsDL,MAAtD,CAA6Df,cAAc,CAACQ,SAAD,CAA3E,EAAwF,GAAxF,CAA9C,EAA4I,+CAA+CO,MAA/C,CAAsDE,MAAM,CAACC,IAAP,CAAYZ,WAAZ,EAAyBU,IAAzB,CAA8B,GAA9B,CAAtD,EAA0F,GAA1F,CAA5I,EAA4OA,IAA5O,CAAiP,IAAjP,CAAd;AACD;;AAED,UAAIT,UAAU,CAACa,GAAD,CAAV,IAAmB,OAAOb,UAAU,CAACa,GAAD,CAAjB,KAA2B,QAAlD,EAA4D;AAC1DP,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,yBAAyBC,MAAzB,CAAgCK,GAAhC,EAAqC,IAArC,IAA6C,iDAAiDL,MAAjD,CAAwDf,cAAc,CAACQ,SAAD,CAAtE,EAAmF,GAAnF,CAA9C,EAAuI,sDAAsDO,MAAtD,CAA6DR,UAAU,CAACa,GAAD,CAAvE,EAA8E,GAA9E,CAAvI,EAA2NJ,IAA3N,CAAgO,IAAhO,CAAd;AACD;AACF;;AAED,QAAIT,UAAU,CAACa,GAAD,CAAd,EAAqB;AACnBX,MAAAA,WAAW,CAACW,GAAD,CAAX,GAAmB,GAAGL,MAAH,CAAUT,WAAW,CAACc,GAAD,CAArB,EAA4B,GAA5B,EAAiCL,MAAjC,CAAwCR,UAAU,CAACa,GAAD,CAAlD,CAAnB;AACD;AACF,GAdD;AAeA,SAAOX,WAAP;AACD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { getDisplayName } from '@material-ui/utils';\nexport default function mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof newClasses === 'string') {\n      console.error([\"Material-UI: The value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n'));\n      return baseClasses;\n    }\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!baseClasses[key] && newClasses[key]) {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n'));\n      }\n\n      if (newClasses[key] && typeof newClasses[key] !== 'string') {\n        console.error([\"Material-UI: The key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n'));\n      }\n    }\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}"]},"metadata":{},"sourceType":"module"}