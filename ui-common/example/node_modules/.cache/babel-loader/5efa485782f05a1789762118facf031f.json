{"ast":null,"code":"'use strict';\n\nmodule.exports = gap;\ngap.displayName = 'gap';\ngap.aliases = [];\n\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword: /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  };\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/gap.js"],"names":["module","exports","gap","displayName","aliases","Prism","languages","shell","pattern","greedy","inside","lookbehind","punctuation","comment","string","continuation","alias","keyword","boolean","function","number","operator"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClB;AACA;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,qCADJ;AAELC,MAAAA,MAAM,EAAE,IAFH;AAGLC,MAAAA,MAAM,EAAE;AACNR,QAAAA,GAAG,EAAE;AACHM,UAAAA,OAAO,EAAE,yCADN;AAEHG,UAAAA,UAAU,EAAE,IAFT;AAGHD,UAAAA,MAAM,EAAE,IAHL,CAGU;;AAHV,SADC;AAMNE,QAAAA,WAAW,EAAE;AANP;AAHH,KADa;AAapBC,IAAAA,OAAO,EAAE;AACPL,MAAAA,OAAO,EAAE,KADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAbW;AAiBpBK,IAAAA,MAAM,EAAE;AACNN,MAAAA,OAAO,EACL,qFAFI;AAGNG,MAAAA,UAAU,EAAE,IAHN;AAINF,MAAAA,MAAM,EAAE,IAJF;AAKNC,MAAAA,MAAM,EAAE;AACNK,QAAAA,YAAY,EAAE;AACZP,UAAAA,OAAO,EAAE,WADG;AAEZG,UAAAA,UAAU,EAAE,IAFA;AAGZK,UAAAA,KAAK,EAAE;AAHK;AADR;AALF,KAjBY;AA8BpBC,IAAAA,OAAO,EACL,uMA/BkB;AAgCpBC,IAAAA,OAAO,EAAE,oBAhCW;AAiCpBC,IAAAA,QAAQ,EAAE,uBAjCU;AAkCpBC,IAAAA,MAAM,EAAE;AACNZ,MAAAA,OAAO,EACL,sFAFI;AAGNG,MAAAA,UAAU,EAAE;AAHN,KAlCY;AAuCpBI,IAAAA,YAAY,EAAE;AACZP,MAAAA,OAAO,EAAE,WADG;AAEZG,MAAAA,UAAU,EAAE,IAFA;AAGZK,MAAAA,KAAK,EAAE;AAHK,KAvCM;AA4CpBK,IAAAA,QAAQ,EAAE,iCA5CU;AA6CpBT,IAAAA,WAAW,EAAE;AA7CO,GAAtB;AA+CAP,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,CAAoBK,KAApB,CAA0BG,MAA1B,CAAiCR,GAAjC,CAAqCQ,MAArC,GAA8CL,KAAK,CAACC,SAAN,CAAgBJ,GAA9D;AACD","sourcesContent":["'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n"]},"metadata":{},"sourceType":"script"}