{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule = /*#__PURE__*/function () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (rule) this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Replace rule, run plugins.\n   */\n  ;\n\n  _proto.replaceRule = function replaceRule(name, style, options) {\n    var newRule = this.rules.replace(name, style, options);\n    if (newRule) this.options.jss.plugins.onProcessRule(newRule);\n    return newRule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    return this.rules.toString(options);\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule = /*#__PURE__*/function () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (!options.selector && options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return;\n    handleNestedGlobalContainerRule(rule, sheet);\n    handlePrefixedGlobalRule(rule, sheet);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/jss-plugin-global/dist/jss-plugin-global.esm.js"],"names":["_extends","RuleList","at","atPrefix","GlobalContainerRule","key","styles","options","type","isProcessed","rules","parent","selector","add","process","_proto","prototype","getRule","name","get","addRule","style","rule","jss","plugins","onProcessRule","replaceRule","newRule","replace","indexOf","toString","GlobalPrefixedRule","substr","length","createRule","_proto2","separatorRegExp","addScope","scope","parts","split","scoped","i","trim","handleNestedGlobalContainerRule","sheet","handlePrefixedGlobalRule","prop","jssGlobal","onCreateRule"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { RuleList } from 'jss';\n\nvar at = '@global';\nvar atPrefix = '@global ';\n\nvar GlobalContainerRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalContainerRule(key, styles, options) {\n    this.type = 'global';\n    this.at = at;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    this.rules = new RuleList(_extends({}, options, {\n      parent: this\n    }));\n\n    for (var selector in styles) {\n      this.rules.add(selector, styles[selector]);\n    }\n\n    this.rules.process();\n  }\n  /**\n   * Get a rule.\n   */\n\n\n  var _proto = GlobalContainerRule.prototype;\n\n  _proto.getRule = function getRule(name) {\n    return this.rules.get(name);\n  }\n  /**\n   * Create and register rule, run plugins.\n   */\n  ;\n\n  _proto.addRule = function addRule(name, style, options) {\n    var rule = this.rules.add(name, style, options);\n    if (rule) this.options.jss.plugins.onProcessRule(rule);\n    return rule;\n  }\n  /**\n   * Replace rule, run plugins.\n   */\n  ;\n\n  _proto.replaceRule = function replaceRule(name, style, options) {\n    var newRule = this.rules.replace(name, style, options);\n    if (newRule) this.options.jss.plugins.onProcessRule(newRule);\n    return newRule;\n  }\n  /**\n   * Get index of a rule.\n   */\n  ;\n\n  _proto.indexOf = function indexOf(rule) {\n    return this.rules.indexOf(rule);\n  }\n  /**\n   * Generates a CSS string.\n   */\n  ;\n\n  _proto.toString = function toString(options) {\n    return this.rules.toString(options);\n  };\n\n  return GlobalContainerRule;\n}();\n\nvar GlobalPrefixedRule =\n/*#__PURE__*/\nfunction () {\n  function GlobalPrefixedRule(key, style, options) {\n    this.type = 'global';\n    this.at = at;\n    this.isProcessed = false;\n    this.key = key;\n    this.options = options;\n    var selector = key.substr(atPrefix.length);\n    this.rule = options.jss.createRule(selector, style, _extends({}, options, {\n      parent: this\n    }));\n  }\n\n  var _proto2 = GlobalPrefixedRule.prototype;\n\n  _proto2.toString = function toString(options) {\n    return this.rule ? this.rule.toString(options) : '';\n  };\n\n  return GlobalPrefixedRule;\n}();\n\nvar separatorRegExp = /\\s*,\\s*/g;\n\nfunction addScope(selector, scope) {\n  var parts = selector.split(separatorRegExp);\n  var scoped = '';\n\n  for (var i = 0; i < parts.length; i++) {\n    scoped += scope + \" \" + parts[i].trim();\n    if (parts[i + 1]) scoped += ', ';\n  }\n\n  return scoped;\n}\n\nfunction handleNestedGlobalContainerRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n  var rules = style ? style[at] : null;\n  if (!rules) return;\n\n  for (var name in rules) {\n    sheet.addRule(name, rules[name], _extends({}, options, {\n      selector: addScope(name, rule.selector)\n    }));\n  }\n\n  delete style[at];\n}\n\nfunction handlePrefixedGlobalRule(rule, sheet) {\n  var options = rule.options,\n      style = rule.style;\n\n  for (var prop in style) {\n    if (prop[0] !== '@' || prop.substr(0, at.length) !== at) continue;\n    var selector = addScope(prop.substr(at.length), rule.selector);\n    sheet.addRule(selector, style[prop], _extends({}, options, {\n      selector: selector\n    }));\n    delete style[prop];\n  }\n}\n/**\n * Convert nested rules to separate, remove them from original styles.\n */\n\n\nfunction jssGlobal() {\n  function onCreateRule(name, styles, options) {\n    if (!name) return null;\n\n    if (name === at) {\n      return new GlobalContainerRule(name, styles, options);\n    }\n\n    if (name[0] === '@' && name.substr(0, atPrefix.length) === atPrefix) {\n      return new GlobalPrefixedRule(name, styles, options);\n    }\n\n    var parent = options.parent;\n\n    if (parent) {\n      if (parent.type === 'global' || parent.options.parent && parent.options.parent.type === 'global') {\n        options.scoped = false;\n      }\n    }\n\n    if (!options.selector && options.scoped === false) {\n      options.selector = name;\n    }\n\n    return null;\n  }\n\n  function onProcessRule(rule, sheet) {\n    if (rule.type !== 'style' || !sheet) return;\n    handleNestedGlobalContainerRule(rule, sheet);\n    handlePrefixedGlobalRule(rule, sheet);\n  }\n\n  return {\n    onCreateRule: onCreateRule,\n    onProcessRule: onProcessRule\n  };\n}\n\nexport default jssGlobal;\n"]},"metadata":{},"sourceType":"module"}