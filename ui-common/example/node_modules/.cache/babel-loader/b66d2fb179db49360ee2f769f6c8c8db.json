{"ast":null,"code":"'use strict';\n\nvar refractorRuby = require('./ruby.js');\n\nmodule.exports = crystal;\ncrystal.displayName = 'crystal';\ncrystal.aliases = [];\n\nfunction crystal(Prism) {\n  Prism.register(refractorRuby);\n\n  (function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [/\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/, {\n        pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n        lookbehind: true\n      }],\n      number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    });\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern: /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/crystal.js"],"names":["refractorRuby","require","module","exports","crystal","displayName","aliases","Prism","register","languages","extend","keyword","pattern","lookbehind","number","operator","ruby","punctuation","insertBefore","attribute","inside","delimiter","alias","args","expansion","content","char","greedy"],"mappings":"AAAA;;AACA,IAAIA,aAAa,GAAGC,OAAO,CAAC,WAAD,CAA3B;;AACAC,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AACAA,OAAO,CAACC,WAAR,GAAsB,SAAtB;AACAD,OAAO,CAACE,OAAR,GAAkB,EAAlB;;AACA,SAASF,OAAT,CAAiBG,KAAjB,EAAwB;AACtBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,aAAf;;AACC,GAAC,UAAUO,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACE,SAAN,CAAgBL,OAAhB,GAA0BG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB,EAA+B;AACvDC,MAAAA,OAAO,EAAE,CACP,2XADO,EAEP;AACEC,QAAAA,OAAO,EAAE,+BADX;AAEEC,QAAAA,UAAU,EAAE;AAFd,OAFO,CAD8C;AAQvDC,MAAAA,MAAM,EACJ,qJATqD;AAUvDC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAOR,KAAK,CAACE,SAAN,CAAgBO,IAAhB,CAAqBD,QAA5B,CAV6C;AAWvDE,MAAAA,WAAW,EAAE;AAX0C,KAA/B,CAA1B;AAaAV,IAAAA,KAAK,CAACE,SAAN,CAAgBS,YAAhB,CAA6B,SAA7B,EAAwC,gBAAxC,EAA0D;AACxDC,MAAAA,SAAS,EAAE;AACTP,QAAAA,OAAO,EAAE,UADA;AAETQ,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE;AACTT,YAAAA,OAAO,EAAE,UADA;AAETU,YAAAA,KAAK,EAAE;AAFE,WADL;AAKNH,UAAAA,SAAS,EAAE;AACTP,YAAAA,OAAO,EAAE,WADA;AAETC,YAAAA,UAAU,EAAE,IAFH;AAGTS,YAAAA,KAAK,EAAE;AAHE,WALL;AAUNC,UAAAA,IAAI,EAAE;AACJX,YAAAA,OAAO,EAAE,kBADL;AAEJQ,YAAAA,MAAM,EAAEb,KAAK,CAACE,SAAN,CAAgBL;AAFpB;AAVA;AAFC,OAD6C;AAmBxDoB,MAAAA,SAAS,EAAE;AACTZ,QAAAA,OAAO,EAAE,uBADA;AAETQ,QAAAA,MAAM,EAAE;AACNK,UAAAA,OAAO,EAAE;AACPb,YAAAA,OAAO,EAAE,uBADF;AAEPC,YAAAA,UAAU,EAAE,IAFL;AAGPO,YAAAA,MAAM,EAAEb,KAAK,CAACE,SAAN,CAAgBL;AAHjB,WADH;AAMNiB,UAAAA,SAAS,EAAE;AACTT,YAAAA,OAAO,EAAE,mBADA;AAETU,YAAAA,KAAK,EAAE;AAFE;AANL;AAFC,OAnB6C;AAiCxDI,MAAAA,IAAI,EAAE;AACJd,QAAAA,OAAO,EACL,yEAFE;AAGJe,QAAAA,MAAM,EAAE;AAHJ;AAjCkD,KAA1D;AAuCD,GArDA,EAqDEpB,KArDF;AAsDF","sourcesContent":["'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}