{"ast":null,"code":"'use strict';\n\nmodule.exports = csp;\ncsp.displayName = 'csp';\ncsp.aliases = [];\n\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n  ;\n\n  (function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(/([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source, 'i');\n    }\n\n    Prism.languages.csp = {\n      directive: {\n        pattern: /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(/[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source + '|' + /\\*[^\\s;,']*/.source + '|' + /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [{\n        pattern: value(/'unsafe-[a-z-]+'/.source),\n        lookbehind: true,\n        alias: 'unsafe'\n      }, {\n        pattern: value(/'[a-z-]+'/.source),\n        lookbehind: true,\n        alias: 'safe'\n      }],\n      punctuation: /;/\n    };\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/csp.js"],"names":["module","exports","csp","displayName","aliases","Prism","value","source","RegExp","languages","directive","pattern","lookbehind","alias","scheme","none","nonce","hash","host","inside","important","keyword","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB;AACJ;AACA;AACA;AACI,aAASC,KAAT,CAAeC,MAAf,EAAuB;AACrB,aAAOC,MAAM,CACX,UAAUD,MAAV,GAAmB,KAAnB,GAA2BA,MAA3B,GAAoC,GAApC,GAA0C,cAAcA,MAD7C,EAEX,GAFW,CAAb;AAID;;AACDF,IAAAA,KAAK,CAACI,SAAN,CAAgBP,GAAhB,GAAsB;AACpBQ,MAAAA,SAAS,EAAE;AACTC,QAAAA,OAAO,EACL,4ZAFO;AAGTC,QAAAA,UAAU,EAAE,IAHH;AAITC,QAAAA,KAAK,EAAE;AAJE,OADS;AAOpBC,MAAAA,MAAM,EAAE;AACNH,QAAAA,OAAO,EAAEL,KAAK,CAAC,qBAAqBC,MAAtB,CADR;AAENK,QAAAA,UAAU,EAAE;AAFN,OAPY;AAWpBG,MAAAA,IAAI,EAAE;AACJJ,QAAAA,OAAO,EAAEL,KAAK,CAAC,SAASC,MAAV,CADV;AAEJK,QAAAA,UAAU,EAAE,IAFR;AAGJC,QAAAA,KAAK,EAAE;AAHH,OAXc;AAgBpBG,MAAAA,KAAK,EAAE;AACLL,QAAAA,OAAO,EAAEL,KAAK,CAAC,oBAAoBC,MAArB,CADT;AAELK,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAhBa;AAqBpBI,MAAAA,IAAI,EAAE;AACJN,QAAAA,OAAO,EAAEL,KAAK,CAAC,iCAAiCC,MAAlC,CADV;AAEJK,QAAAA,UAAU,EAAE,IAFR;AAGJC,QAAAA,KAAK,EAAE;AAHH,OArBc;AA0BpBK,MAAAA,IAAI,EAAE;AACJP,QAAAA,OAAO,EAAEL,KAAK,CACZ,kCAAkCC,MAAlC,GACE,GADF,GAEE,cAAcA,MAFhB,GAGE,GAHF,GAIE,0DAA0DA,MALhD,CADV;AAQJK,QAAAA,UAAU,EAAE,IARR;AASJC,QAAAA,KAAK,EAAE,KATH;AAUJM,QAAAA,MAAM,EAAE;AACNC,UAAAA,SAAS,EAAE;AADL;AAVJ,OA1Bc;AAwCpBC,MAAAA,OAAO,EAAE,CACP;AACEV,QAAAA,OAAO,EAAEL,KAAK,CAAC,mBAAmBC,MAApB,CADhB;AAEEK,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADO,EAMP;AACEF,QAAAA,OAAO,EAAEL,KAAK,CAAC,YAAYC,MAAb,CADhB;AAEEK,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANO,CAxCW;AAoDpBS,MAAAA,WAAW,EAAE;AApDO,KAAtB;AAsDD,GAjEA,EAiEEjB,KAjEF;AAkEF","sourcesContent":["'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}