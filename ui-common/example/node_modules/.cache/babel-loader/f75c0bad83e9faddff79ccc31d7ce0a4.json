{"ast":null,"code":"/**\n * @typedef {import('../../types.js').Node} Node\n * @typedef {import('../../types.js').Text} Text\n */\nimport { convert } from 'unist-util-is';\nimport { whitespace } from 'hast-util-whitespace';\n/** @type {import('unist-util-is').AssertPredicate<Text>} */\n// @ts-ignore\n\nconst isText = convert('text');\n/**\n * Check if `node` starts with whitespace.\n *\n * @param {Node} node\n * @returns {boolean}\n */\n\nexport function whitespaceStart(node) {\n  return isText(node) && whitespace(node.value.charAt(0));\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/hast-util-to-html/lib/omission/util/whitespace-start.js"],"names":["convert","whitespace","isText","whitespaceStart","node","value","charAt"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAQA,OAAR,QAAsB,eAAtB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA;AACA;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAAC,MAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASG,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,SAAOF,MAAM,CAACE,IAAD,CAAN,IAAgBH,UAAU,CAACG,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAkB,CAAlB,CAAD,CAAjC;AACD","sourcesContent":["/**\n * @typedef {import('../../types.js').Node} Node\n * @typedef {import('../../types.js').Text} Text\n */\n\nimport {convert} from 'unist-util-is'\nimport {whitespace} from 'hast-util-whitespace'\n\n/** @type {import('unist-util-is').AssertPredicate<Text>} */\n// @ts-ignore\nconst isText = convert('text')\n\n/**\n * Check if `node` starts with whitespace.\n *\n * @param {Node} node\n * @returns {boolean}\n */\nexport function whitespaceStart(node) {\n  return isText(node) && whitespace(node.value.charAt(0))\n}\n"]},"metadata":{},"sourceType":"module"}