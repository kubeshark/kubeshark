{"ast":null,"code":"'use strict';\n\nmodule.exports = tremor;\ntremor.displayName = 'tremor';\ntremor.aliases = [];\n\nfunction tremor(Prism) {\n  ;\n\n  (function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword: /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number: /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator: /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    };\n    var interpolationPattern = /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(/(^|[^\\\\])/.source + '(?:' + '\"\"\"(?:' + /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"\"\"' + '|' + '\"(?:' + /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source + '|' + interpolationPattern + ')*\"' + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    };\n    Prism.languages.troy = Prism.languages['tremor'];\n    Prism.languages.trickle = Prism.languages['tremor'];\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/tremor.js"],"names":["module","exports","tremor","displayName","aliases","Prism","languages","comment","pattern","lookbehind","extractor","greedy","inside","regex","function","value","identifier","keyword","boolean","number","alias","operator","punctuation","interpolationPattern","source","RegExp","interpolation","expression","string","troy","trickle"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjBA,IAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,+CADF;AAEPC,QAAAA,UAAU,EAAE;AAFL,OADc;AAKvB,6BAAuB,IALA;AAMvB;AACAC,MAAAA,SAAS,EAAE;AACTF,QAAAA,OAAO,EAAE,mDADA;AAETG,QAAAA,MAAM,EAAE,IAFC;AAGTC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE;AACLL,YAAAA,OAAO,EAAE,gBADJ;AAELC,YAAAA,UAAU,EAAE;AAFP,WADD;AAKNK,UAAAA,QAAQ,EAAE,MALJ;AAMNC,UAAAA,KAAK,EAAE;AAND;AAHC,OAPY;AAmBvBC,MAAAA,UAAU,EAAE;AACVR,QAAAA,OAAO,EAAE,SADC;AAEVG,QAAAA,MAAM,EAAE;AAFE,OAnBW;AAuBvBG,MAAAA,QAAQ,EAAE,mCAvBa;AAwBvBG,MAAAA,OAAO,EACL,kUAzBqB;AA0BvBC,MAAAA,OAAO,EAAE,0BA1Bc;AA2BvBC,MAAAA,MAAM,EACJ,8EA5BqB;AA6BvB,6BAAuB;AACrBX,QAAAA,OAAO,EAAE,YADY;AAErBY,QAAAA,KAAK,EAAE;AAFc,OA7BA;AAiCvBC,MAAAA,QAAQ,EACN,uFAlCqB;AAmCvBC,MAAAA,WAAW,EAAE;AAnCU,KAAzB;AAqCA,QAAIC,oBAAoB,GACtB,kEAAkEC,MADpE;AAEAnB,IAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,qBAAvB,IAAgD;AAC9CM,MAAAA,OAAO,EAAEiB,MAAM,CACb,YAAYD,MAAZ,GACE,KADF,GAEE,QAFF,GAGE,mCAAmCA,MAHrC,GAIE,GAJF,GAKED,oBALF,GAME,OANF,GAOE,GAPF,GAQE,MARF,GASE,wCAAwCC,MAT1C,GAUE,GAVF,GAWED,oBAXF,GAYE,KAZF,GAaE,GAdW,CAD+B;AAiB9Cd,MAAAA,UAAU,EAAE,IAjBkC;AAkB9CE,MAAAA,MAAM,EAAE,IAlBsC;AAmB9CC,MAAAA,MAAM,EAAE;AACNc,QAAAA,aAAa,EAAE;AACblB,UAAAA,OAAO,EAAEiB,MAAM,CAACF,oBAAD,CADF;AAEbX,UAAAA,MAAM,EAAE;AACNU,YAAAA,WAAW,EAAE,UADP;AAENK,YAAAA,UAAU,EAAE;AACVnB,cAAAA,OAAO,EAAE,SADC;AAEVI,cAAAA,MAAM,EAAEP,KAAK,CAACC,SAAN,CAAgBJ;AAFd;AAFN;AAFK,SADT;AAWN0B,QAAAA,MAAM,EAAE;AAXF;AAnBsC,KAAhD;AAiCAvB,IAAAA,KAAK,CAACC,SAAN,CAAgBuB,IAAhB,GAAuBxB,KAAK,CAACC,SAAN,CAAgB,QAAhB,CAAvB;AACAD,IAAAA,KAAK,CAACC,SAAN,CAAgBwB,OAAhB,GAA0BzB,KAAK,CAACC,SAAN,CAAgB,QAAhB,CAA1B;AACD,GA3EA,EA2EED,KA3EF;AA4EF","sourcesContent":["'use strict'\n\nmodule.exports = tremor\ntremor.displayName = 'tremor'\ntremor.aliases = []\nfunction tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}