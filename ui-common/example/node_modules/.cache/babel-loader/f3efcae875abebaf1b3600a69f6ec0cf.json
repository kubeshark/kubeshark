{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nvar styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n/**\n * @ignore - internal component.\n * The component originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nexport default function ScrollbarSize(props) {\n  var onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"onChange\"]);\n\n  var scrollbarHeight = React.useRef();\n  var nodeRef = React.useRef(null);\n\n  var setMeasurements = function setMeasurements() {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      var prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(function () {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    style: styles,\n    ref: nodeRef\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/Tabs/ScrollbarSize.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","debounce","styles","width","height","position","top","overflow","ScrollbarSize","props","onChange","other","scrollbarHeight","useRef","nodeRef","setMeasurements","current","offsetHeight","clientHeight","useEffect","handleResize","prevHeight","window","addEventListener","clear","removeEventListener","createElement","style","ref","process","env","NODE_ENV","propTypes","func","isRequired"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,IAAIC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,EADI;AAEXC,EAAAA,MAAM,EAAE,EAFG;AAGXC,EAAAA,QAAQ,EAAE,UAHC;AAIXC,EAAAA,GAAG,EAAE,CAAC,IAJK;AAKXC,EAAAA,QAAQ,EAAE;AALC,CAAb;AAOA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,KAAK,GAAGb,wBAAwB,CAACW,KAAD,EAAQ,CAAC,UAAD,CAAR,CADpC;;AAGA,MAAIG,eAAe,GAAGb,KAAK,CAACc,MAAN,EAAtB;AACA,MAAIC,OAAO,GAAGf,KAAK,CAACc,MAAN,CAAa,IAAb,CAAd;;AAEA,MAAIE,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/CH,IAAAA,eAAe,CAACI,OAAhB,GAA0BF,OAAO,CAACE,OAAR,CAAgBC,YAAhB,GAA+BH,OAAO,CAACE,OAAR,CAAgBE,YAAzE;AACD,GAFD;;AAIAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAY;AAC1B,QAAIC,YAAY,GAAGnB,QAAQ,CAAC,YAAY;AACtC,UAAIoB,UAAU,GAAGT,eAAe,CAACI,OAAjC;AACAD,MAAAA,eAAe;;AAEf,UAAIM,UAAU,KAAKT,eAAe,CAACI,OAAnC,EAA4C;AAC1CN,QAAAA,QAAQ,CAACE,eAAe,CAACI,OAAjB,CAAR;AACD;AACF,KAP0B,CAA3B;AAQAM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCH,YAAlC;AACA,WAAO,YAAY;AACjBA,MAAAA,YAAY,CAACI,KAAb;AACAF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC;AACD,KAHD;AAID,GAdD,EAcG,CAACV,QAAD,CAdH;AAeAX,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAY;AAC1BJ,IAAAA,eAAe;AACfL,IAAAA,QAAQ,CAACE,eAAe,CAACI,OAAjB,CAAR;AACD,GAHD,EAGG,CAACN,QAAD,CAHH;AAIA,SAAO,aAAaX,KAAK,CAAC2B,aAAN,CAAoB,KAApB,EAA2B7B,QAAQ,CAAC;AACtD8B,IAAAA,KAAK,EAAEzB,MAD+C;AAEtD0B,IAAAA,GAAG,EAAEd;AAFiD,GAAD,EAGpDH,KAHoD,CAAnC,CAApB;AAID;AACDkB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,aAAa,CAACwB,SAAd,GAA0B;AAChEtB,EAAAA,QAAQ,EAAEV,SAAS,CAACiC,IAAV,CAAeC;AADuC,CAAlE,GAEI,KAAK,CAFT","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nvar styles = {\n  width: 99,\n  height: 99,\n  position: 'absolute',\n  top: -9999,\n  overflow: 'scroll'\n};\n/**\n * @ignore - internal component.\n * The component originates from https://github.com/STORIS/react-scrollbar-size.\n * It has been moved into the core in order to minimize the bundle size.\n */\n\nexport default function ScrollbarSize(props) {\n  var onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"onChange\"]);\n\n  var scrollbarHeight = React.useRef();\n  var nodeRef = React.useRef(null);\n\n  var setMeasurements = function setMeasurements() {\n    scrollbarHeight.current = nodeRef.current.offsetHeight - nodeRef.current.clientHeight;\n  };\n\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      var prevHeight = scrollbarHeight.current;\n      setMeasurements();\n\n      if (prevHeight !== scrollbarHeight.current) {\n        onChange(scrollbarHeight.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [onChange]);\n  React.useEffect(function () {\n    setMeasurements();\n    onChange(scrollbarHeight.current);\n  }, [onChange]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    style: styles,\n    ref: nodeRef\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? ScrollbarSize.propTypes = {\n  onChange: PropTypes.func.isRequired\n} : void 0;"]},"metadata":{},"sourceType":"module"}