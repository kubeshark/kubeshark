{"ast":null,"code":"/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code);\n  return omit && next && !/\\d/.test(String.fromCharCode(next)) ? value : value + ';';\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/stringify-entities/lib/util/to-decimal.js"],"names":["toDecimal","code","next","omit","value","String","test","fromCharCode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqC;AAC1C,QAAMC,KAAK,GAAG,OAAOC,MAAM,CAACJ,IAAD,CAA3B;AACA,SAAOE,IAAI,IAAID,IAAR,IAAgB,CAAC,KAAKI,IAAL,CAAUD,MAAM,CAACE,YAAP,CAAoBL,IAApB,CAAV,CAAjB,GACHE,KADG,GAEHA,KAAK,GAAG,GAFZ;AAGD","sourcesContent":["/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !/\\d/.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n"]},"metadata":{},"sourceType":"module"}