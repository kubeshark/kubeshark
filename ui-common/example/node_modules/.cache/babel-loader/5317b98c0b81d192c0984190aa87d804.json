{"ast":null,"code":"'use strict';\n\nmodule.exports = cfscript;\ncfscript.displayName = 'cfscript';\ncfscript.aliases = [];\n\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [{\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n      inside: {\n        annotation: {\n          pattern: /(?:^|[^.])@[\\w\\.]+/,\n          alias: 'punctuation'\n        }\n      }\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    keyword: /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [/\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/, /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/],\n    scope: {\n      pattern: /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern: /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  });\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern: /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  });\n  delete Prism.languages.cfscript['class-name'];\n  Prism.languages.cfc = Prism.languages['cfscript'];\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/cfscript.js"],"names":["module","exports","cfscript","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","inside","annotation","alias","greedy","keyword","operator","scope","type","insertBefore","cfc"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,EAAnB;;AACA,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AACvB;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2BG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACzDC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,OAAO,EAAE,iCADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,UAAU,EAAE;AACVH,UAAAA,OAAO,EAAE,oBADC;AAEVI,UAAAA,KAAK,EAAE;AAFG;AADN;AAHV,KADO,EAWP;AACEJ,MAAAA,OAAO,EAAE,kBADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEI,MAAAA,MAAM,EAAE;AAHV,KAXO,CADgD;AAkBzDC,IAAAA,OAAO,EACL,+NAnBuD;AAoBzDC,IAAAA,QAAQ,EAAE,CACR,wEADQ,EAER,uEAFQ,CApB+C;AAwBzDC,IAAAA,KAAK,EAAE;AACLR,MAAAA,OAAO,EACL,oFAFG;AAGLI,MAAAA,KAAK,EAAE;AAHF,KAxBkD;AA6BzDK,IAAAA,IAAI,EAAE;AACJT,MAAAA,OAAO,EACL,sFAFE;AAGJI,MAAAA,KAAK,EAAE;AAHH;AA7BmD,GAAhC,CAA3B;AAmCAR,EAAAA,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,UAA7B,EAAyC,SAAzC,EAAoD;AAClD;AACA,yBAAqB;AACnBV,MAAAA,OAAO,EACL,0KAFiB;AAGnBI,MAAAA,KAAK,EAAE;AAHY;AAF6B,GAApD;AAQA,SAAOR,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,CAAyB,YAAzB,CAAP;AACAG,EAAAA,KAAK,CAACC,SAAN,CAAgBc,GAAhB,GAAsBf,KAAK,CAACC,SAAN,CAAgB,UAAhB,CAAtB;AACD","sourcesContent":["'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n"]},"metadata":{},"sourceType":"script"}