{"ast":null,"code":"'use strict';\n\nvar Info = require('./info');\n\nvar types = require('./types');\n\nmodule.exports = DefinedInfo;\nDefinedInfo.prototype = new Info();\nDefinedInfo.prototype.defined = true;\nvar checks = ['boolean', 'booleanish', 'overloadedBoolean', 'number', 'commaSeparated', 'spaceSeparated', 'commaOrSpaceSeparated'];\nvar checksLength = checks.length;\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1;\n  var check;\n  mark(this, 'space', space);\n  Info.call(this, property, attribute);\n\n  while (++index < checksLength) {\n    check = checks[index];\n    mark(this, check, (mask & types[check]) === types[check]);\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value;\n  }\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/property-information/lib/util/defined-info.js"],"names":["Info","require","types","module","exports","DefinedInfo","prototype","defined","checks","checksLength","length","property","attribute","mask","space","index","check","mark","call","values","key","value"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,WAAjB;AAEAA,WAAW,CAACC,SAAZ,GAAwB,IAAIN,IAAJ,EAAxB;AACAK,WAAW,CAACC,SAAZ,CAAsBC,OAAtB,GAAgC,IAAhC;AAEA,IAAIC,MAAM,GAAG,CACX,SADW,EAEX,YAFW,EAGX,mBAHW,EAIX,QAJW,EAKX,gBALW,EAMX,gBANW,EAOX,uBAPW,CAAb;AASA,IAAIC,YAAY,GAAGD,MAAM,CAACE,MAA1B;;AAEA,SAASL,WAAT,CAAqBM,QAArB,EAA+BC,SAA/B,EAA0CC,IAA1C,EAAgDC,KAAhD,EAAuD;AACrD,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,KAAJ;AAEAC,EAAAA,IAAI,CAAC,IAAD,EAAO,OAAP,EAAgBH,KAAhB,CAAJ;AAEAd,EAAAA,IAAI,CAACkB,IAAL,CAAU,IAAV,EAAgBP,QAAhB,EAA0BC,SAA1B;;AAEA,SAAO,EAAEG,KAAF,GAAUN,YAAjB,EAA+B;AAC7BO,IAAAA,KAAK,GAAGR,MAAM,CAACO,KAAD,CAAd;AACAE,IAAAA,IAAI,CAAC,IAAD,EAAOD,KAAP,EAAc,CAACH,IAAI,GAAGX,KAAK,CAACc,KAAD,CAAb,MAA0Bd,KAAK,CAACc,KAAD,CAA7C,CAAJ;AACD;AACF;;AAED,SAASC,IAAT,CAAcE,MAAd,EAAsBC,GAAtB,EAA2BC,KAA3B,EAAkC;AAChC,MAAIA,KAAJ,EAAW;AACTF,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAcC,KAAd;AACD;AACF","sourcesContent":["'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n"]},"metadata":{},"sourceType":"script"}