{"ast":null,"code":"'use strict';\n\nmodule.exports = cssExtras;\ncssExtras.displayName = 'cssExtras';\ncssExtras.aliases = [];\n\nfunction cssExtras(Prism) {\n  ;\n\n  (function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n    var selectorInside;\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: selectorInside = {\n        'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [string, {\n              pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n              lookbehind: true\n            }],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [{\n          pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n          lookbehind: true,\n          inside: {\n            number: /[\\dn]+/,\n            operator: /[+-]/\n          }\n        }, {\n          pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n          lookbehind: true\n        }],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      }\n    };\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    });\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    }; // 123 -123 .123 -.123 12.3 -12.3\n\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    };\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [{\n        pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n        lookbehind: true\n      }, {\n        pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n        inside: {\n          unit: unit,\n          number: number,\n          function: /[\\w-]+(?=\\()/,\n          punctuation: /[(),]/\n        }\n      }],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/css-extras.js"],"names":["module","exports","cssExtras","displayName","aliases","Prism","string","selectorInside","languages","css","selector","pattern","lookbehind","inside","class","id","attribute","RegExp","source","greedy","punctuation","alias","namespace","operator","number","combinator","insertBefore","variable","unit","hexcode","color","function","entity"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}