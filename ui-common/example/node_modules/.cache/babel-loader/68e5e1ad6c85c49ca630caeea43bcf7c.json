{"ast":null,"code":"'use strict';\n\nmodule.exports = python;\npython.displayName = 'python';\npython.aliases = ['py'];\n\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n  Prism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\n  Prism.languages.py = Prism.languages.python;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/python.js"],"names":["module","exports","python","displayName","aliases","Prism","languages","comment","pattern","lookbehind","greedy","inside","interpolation","alias","rest","string","function","decorator","punctuation","keyword","builtin","boolean","number","operator","py"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,CAAC,IAAD,CAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,cADF;AAEPC,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,MAAM,EAAE;AAHD,KADc;AAMvB,4BAAwB;AACtBF,MAAAA,OAAO,EACL,qEAFoB;AAGtBE,MAAAA,MAAM,EAAE,IAHc;AAItBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,EAAE;AACb;AACAJ,UAAAA,OAAO,EACL,qFAHW;AAIbC,UAAAA,UAAU,EAAE,IAJC;AAKbE,UAAAA,MAAM,EAAE;AACN,2BAAe;AACbH,cAAAA,OAAO,EAAE,qBADI;AAEbC,cAAAA,UAAU,EAAE;AAFC,aADT;AAKN,iCAAqB;AACnBD,cAAAA,OAAO,EAAE,iBADU;AAEnBK,cAAAA,KAAK,EAAE;AAFY,aALf;AASNC,YAAAA,IAAI,EAAE;AATA;AALK,SADT;AAkBNC,QAAAA,MAAM,EAAE;AAlBF;AAJc,KAND;AA+BvB,4BAAwB;AACtBP,MAAAA,OAAO,EAAE,sCADa;AAEtBE,MAAAA,MAAM,EAAE,IAFc;AAGtBG,MAAAA,KAAK,EAAE;AAHe,KA/BD;AAoCvBE,IAAAA,MAAM,EAAE;AACNP,MAAAA,OAAO,EAAE,kDADH;AAENE,MAAAA,MAAM,EAAE;AAFF,KApCe;AAwCvBM,IAAAA,QAAQ,EAAE;AACRR,MAAAA,OAAO,EAAE,2CADD;AAERC,MAAAA,UAAU,EAAE;AAFJ,KAxCa;AA4CvB,kBAAc;AACZD,MAAAA,OAAO,EAAE,kBADG;AAEZC,MAAAA,UAAU,EAAE;AAFA,KA5CS;AAgDvBQ,IAAAA,SAAS,EAAE;AACTT,MAAAA,OAAO,EAAE,0BADA;AAETC,MAAAA,UAAU,EAAE,IAFH;AAGTI,MAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,aAAf,CAHE;AAITF,MAAAA,MAAM,EAAE;AACNO,QAAAA,WAAW,EAAE;AADP;AAJC,KAhDY;AAwDvBC,IAAAA,OAAO,EACL,uNAzDqB;AA0DvBC,IAAAA,OAAO,EACL,qhBA3DqB;AA4DvBC,IAAAA,OAAO,EAAE,yBA5Dc;AA6DvBC,IAAAA,MAAM,EACJ,kJA9DqB;AA+DvBC,IAAAA,QAAQ,EAAE,sDA/Da;AAgEvBL,IAAAA,WAAW,EAAE;AAhEU,GAAzB;AAkEAb,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,sBAAvB,EAA+CS,MAA/C,CACE,eADF,EAEEA,MAFF,CAESG,IAFT,GAEgBT,KAAK,CAACC,SAAN,CAAgBJ,MAFhC;AAGAG,EAAAA,KAAK,CAACC,SAAN,CAAgBkB,EAAhB,GAAqBnB,KAAK,CAACC,SAAN,CAAgBJ,MAArC;AACD","sourcesContent":["'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = ['py']\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n"]},"metadata":{},"sourceType":"script"}