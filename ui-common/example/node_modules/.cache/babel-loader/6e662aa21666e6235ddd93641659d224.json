{"ast":null,"code":"/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex; // Element names can contain letters, digits, hyphens, underscores, and periods\n\n  const TAG_NAME_RE = regex.concat(/[A-Z_]/, regex.optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [{\n      className: 'keyword',\n      begin: /#?[a-z_][a-z1-9_-]+/,\n      illegal: /\\n/\n    }]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [{\n      className: 'attr',\n      begin: XML_IDENT_RE,\n      relevance: 0\n    }, {\n      begin: /=\\s*/,\n      relevance: 0,\n      contains: [{\n        className: 'string',\n        endsParent: true,\n        variants: [{\n          begin: /\"/,\n          end: /\"/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /'/,\n          end: /'/,\n          contains: [XML_ENTITIES]\n        }, {\n          begin: /[^\\s\"'=<>`]+/\n        }]\n      }]\n    }]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [{\n      className: 'meta',\n      begin: /<![a-z]/,\n      end: />/,\n      relevance: 10,\n      contains: [XML_META_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE, XML_META_PAR_KEYWORDS, {\n        begin: /\\[/,\n        end: /\\]/,\n        contains: [{\n          className: 'meta',\n          begin: /<![a-z]/,\n          end: />/,\n          contains: [XML_META_KEYWORDS, XML_META_PAR_KEYWORDS, QUOTE_META_STRING_MODE, APOS_META_STRING_MODE]\n        }]\n      }]\n    }, hljs.COMMENT(/<!--/, /-->/, {\n      relevance: 10\n    }), {\n      begin: /<!\\[CDATA\\[/,\n      end: /\\]\\]>/,\n      relevance: 10\n    }, XML_ENTITIES, {\n      className: 'meta',\n      begin: /<\\?xml/,\n      end: /\\?>/,\n      relevance: 10\n    }, {\n      className: 'tag',\n\n      /*\n      The lookahead pattern (?=...) ensures that 'begin' only matches\n      '<style' as a single word, followed by a whitespace or an\n      ending bracket.\n      */\n      begin: /<style(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'style'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/style>/,\n        returnEnd: true,\n        subLanguage: ['css', 'xml']\n      }\n    }, {\n      className: 'tag',\n      // See the comment in the <style tag about the lookahead pattern\n      begin: /<script(?=\\s|>)/,\n      end: />/,\n      keywords: {\n        name: 'script'\n      },\n      contains: [TAG_INTERNALS],\n      starts: {\n        end: /<\\/script>/,\n        returnEnd: true,\n        subLanguage: ['javascript', 'handlebars', 'xml']\n      }\n    }, // we need this for now for jSX\n    {\n      className: 'tag',\n      begin: /<>|<\\/>/\n    }, // open tag\n    {\n      className: 'tag',\n      begin: regex.concat(/</, regex.lookahead(regex.concat(TAG_NAME_RE, // <tag/>\n      // <tag>\n      // <tag ...\n      regex.either(/\\/>/, />/, /\\s/)))),\n      end: /\\/?>/,\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0,\n        starts: TAG_INTERNALS\n      }]\n    }, // close tag\n    {\n      className: 'tag',\n      begin: regex.concat(/<\\//, regex.lookahead(regex.concat(TAG_NAME_RE, />/))),\n      contains: [{\n        className: 'name',\n        begin: TAG_NAME_RE,\n        relevance: 0\n      }, {\n        begin: />/,\n        relevance: 0,\n        endsParent: true\n      }]\n    }]\n  };\n}\n\nmodule.exports = xml;","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/highlight.js/lib/languages/xml.js"],"names":["xml","hljs","regex","TAG_NAME_RE","concat","optional","XML_IDENT_RE","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","lookahead","either","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common, web\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction xml(hljs) {\n  const regex = hljs.regex;\n  // Element names can contain letters, digits, hyphens, underscores, and periods\n  const TAG_NAME_RE = regex.concat(/[A-Z_]/, regex.optional(/[A-Z0-9_.-]*:/), /[A-Z0-9_.-]*/);\n  const XML_IDENT_RE = /[A-Za-z0-9._:-]+/;\n  const XML_ENTITIES = {\n    className: 'symbol',\n    begin: /&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/\n  };\n  const XML_META_KEYWORDS = {\n    begin: /\\s/,\n    contains: [\n      {\n        className: 'keyword',\n        begin: /#?[a-z_][a-z1-9_-]+/,\n        illegal: /\\n/\n      }\n    ]\n  };\n  const XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {\n    begin: /\\(/,\n    end: /\\)/\n  });\n  const APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {\n    className: 'string'\n  });\n  const QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {\n    className: 'string'\n  });\n  const TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /'/,\n                end: /'/,\n                contains: [ XML_ENTITIES ]\n              },\n              {\n                begin: /[^\\s\"'=<>`]+/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: [\n      'html',\n      'xhtml',\n      'rss',\n      'atom',\n      'xjb',\n      'xsd',\n      'xsl',\n      'plist',\n      'wsf',\n      'svg'\n    ],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: /<![a-z]/,\n        end: />/,\n        relevance: 10,\n        contains: [\n          XML_META_KEYWORDS,\n          QUOTE_META_STRING_MODE,\n          APOS_META_STRING_MODE,\n          XML_META_PAR_KEYWORDS,\n          {\n            begin: /\\[/,\n            end: /\\]/,\n            contains: [\n              {\n                className: 'meta',\n                begin: /<![a-z]/,\n                end: />/,\n                contains: [\n                  XML_META_KEYWORDS,\n                  XML_META_PAR_KEYWORDS,\n                  QUOTE_META_STRING_MODE,\n                  APOS_META_STRING_MODE\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      hljs.COMMENT(\n        /<!--/,\n        /-->/,\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: /<!\\[CDATA\\[/,\n        end: /\\]\\]>/,\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/,\n        end: /\\?>/,\n        relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending bracket.\n        */\n        begin: /<style(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'style'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/style>/,\n          returnEnd: true,\n          subLanguage: [\n            'css',\n            'xml'\n          ]\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: /<script(?=\\s|>)/,\n        end: />/,\n        keywords: {\n          name: 'script'\n        },\n        contains: [ TAG_INTERNALS ],\n        starts: {\n          end: /<\\/script>/,\n          returnEnd: true,\n          subLanguage: [\n            'javascript',\n            'handlebars',\n            'xml'\n          ]\n        }\n      },\n      // we need this for now for jSX\n      {\n        className: 'tag',\n        begin: /<>|<\\/>/\n      },\n      // open tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /</,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE,\n            // <tag/>\n            // <tag>\n            // <tag ...\n            regex.either(/\\/>/, />/, /\\s/)\n          ))\n        ),\n        end: /\\/?>/,\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0,\n            starts: TAG_INTERNALS\n          }\n        ]\n      },\n      // close tag\n      {\n        className: 'tag',\n        begin: regex.concat(\n          /<\\//,\n          regex.lookahead(regex.concat(\n            TAG_NAME_RE, />/\n          ))\n        ),\n        contains: [\n          {\n            className: 'name',\n            begin: TAG_NAME_RE,\n            relevance: 0\n          },\n          {\n            begin: />/,\n            relevance: 0,\n            endsParent: true\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n"]},"metadata":{},"sourceType":"script"}