{"ast":null,"code":"import { rehype } from 'rehype'; // @ts-ignore\n\nimport rehypePrism from '@mapbox/rehype-prism';\nexport var processHtml = html => {\n  return rehype().data('settings', {\n    fragment: true\n  }).use(rehypePrism, {\n    ignoreMissing: true\n  }).processSync(\"\" + html).toString();\n}; // function htmlEncode(html: string) {\n//   const temp = document.createElement ('div');\n//   (temp.textContent !== undefined) ? (temp.textContent = html) : (temp.innerText = html);\n//   const output = temp.innerHTML;\n//   return output;\n// }\n\nexport function htmlEncode(sHtml) {\n  return sHtml.replace(/[<>&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,OAAO,IAAMC,WAAW,GAAIC,IAAD,IAAkB;AAC3C,SAAOH,MAAM,GACVI,IADIJ,CACC,UADDA,EACa;AAAEK,YAAQ,EAAE;AAAZ,GADbL,EAEJM,GAFIN,CAEAC,WAFAD,EAEa;AAAEO,iBAAa,EAAE;AAAjB,GAFbP,EAGJQ,WAHIR,MAGWG,IAHXH,EAIJS,QAJIT,EAAP;AADK,E,CAQP;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASU,UAAT,CAAoBC,KAApB,EAAmC;AACxC,SAAOA,KAAK,CAACC,OAAND,CACL,SADKA,EAEJE,CAAD,IAAgB,CAAC;AAAE,SAAK,MAAP;AAAe,SAAK,MAApB;AAA4B,SAAK,OAAjC;AAA0C,SAAK;AAA/C,GAAD,EAAsFA,CAAtF,CAFXF,CAAP;AAID;AAED,OAAO,SAASG,eAAT,CAAyBC,CAAzB,EAAsE;AAC3EA,GAAC,CAACD,eAAFC;AACAA,GAAC,CAACC,cAAFD;AACD","names":["rehype","rehypePrism","processHtml","html","data","fragment","use","ignoreMissing","processSync","toString","htmlEncode","sHtml","replace","c","stopPropagation","e","preventDefault"],"sources":["../src/utils.ts"],"sourcesContent":["import { rehype } from 'rehype';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\n\nexport const processHtml = (html: string) => {\n  return rehype()\n    .data('settings', { fragment: true })\n    .use(rehypePrism, { ignoreMissing: true })\n    .processSync(`${html}`)\n    .toString();\n};\n\n// function htmlEncode(html: string) {\n//   const temp = document.createElement ('div');\n//   (temp.textContent !== undefined) ? (temp.textContent = html) : (temp.innerText = html);\n//   const output = temp.innerHTML;\n//   return output;\n// }\n\nexport function htmlEncode(sHtml: string) {\n  return sHtml.replace(\n    /[<>&\"]/g,\n    (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  );\n}\n\nexport function stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n"]},"metadata":{},"sourceType":"module"}