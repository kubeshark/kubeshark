{"ast":null,"code":"'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      var cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n\n      if (secure === true) {\n        cookie.push('secure');\n      }\n\n      document.cookie = cookie.join('; ');\n    },\n    read: function read(name) {\n      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() : // Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/axios/lib/helpers/cookies.js"],"names":["utils","require","module","exports","isStandardBrowserEnv","standardBrowserEnv","write","name","value","expires","path","domain","secure","cookie","push","encodeURIComponent","isNumber","Date","toGMTString","isString","document","join","read","match","RegExp","decodeURIComponent","remove","now","nonStandardBrowserEnv"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GACEH,KAAK,CAACI,oBAAN,KAEA;AACG,SAASC,kBAAT,GAA8B;AAC7B,SAAO;AACLC,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,MAAnD,EAA2D;AAChE,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACC,IAAP,CAAYP,IAAI,GAAG,GAAP,GAAaQ,kBAAkB,CAACP,KAAD,CAA3C;;AAEA,UAAIR,KAAK,CAACgB,QAAN,CAAeP,OAAf,CAAJ,EAA6B;AAC3BI,QAAAA,MAAM,CAACC,IAAP,CAAY,aAAa,IAAIG,IAAJ,CAASR,OAAT,EAAkBS,WAAlB,EAAzB;AACD;;AAED,UAAIlB,KAAK,CAACmB,QAAN,CAAeT,IAAf,CAAJ,EAA0B;AACxBG,QAAAA,MAAM,CAACC,IAAP,CAAY,UAAUJ,IAAtB;AACD;;AAED,UAAIV,KAAK,CAACmB,QAAN,CAAeR,MAAf,CAAJ,EAA4B;AAC1BE,QAAAA,MAAM,CAACC,IAAP,CAAY,YAAYH,MAAxB;AACD;;AAED,UAAIC,MAAM,KAAK,IAAf,EAAqB;AACnBC,QAAAA,MAAM,CAACC,IAAP,CAAY,QAAZ;AACD;;AAEDM,MAAAA,QAAQ,CAACP,MAAT,GAAkBA,MAAM,CAACQ,IAAP,CAAY,IAAZ,CAAlB;AACD,KAtBI;AAwBLC,IAAAA,IAAI,EAAE,SAASA,IAAT,CAAcf,IAAd,EAAoB;AACxB,UAAIgB,KAAK,GAAGH,QAAQ,CAACP,MAAT,CAAgBU,KAAhB,CAAsB,IAAIC,MAAJ,CAAW,eAAejB,IAAf,GAAsB,WAAjC,CAAtB,CAAZ;AACA,aAAQgB,KAAK,GAAGE,kBAAkB,CAACF,KAAK,CAAC,CAAD,CAAN,CAArB,GAAkC,IAA/C;AACD,KA3BI;AA6BLG,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBnB,IAAhB,EAAsB;AAC5B,WAAKD,KAAL,CAAWC,IAAX,EAAiB,EAAjB,EAAqBU,IAAI,CAACU,GAAL,KAAa,QAAlC;AACD;AA/BI,GAAP;AAiCD,CAlCD,EAHF,GAuCA;AACG,SAASC,qBAAT,GAAiC;AAChC,SAAO;AACLtB,IAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB,CAAE,CADrB;AAELgB,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AAAE,aAAO,IAAP;AAAc,KAFjC;AAGLI,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB,CAAE;AAHvB,GAAP;AAKD,CAND,EAzCJ","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n"]},"metadata":{},"sourceType":"script"}