{"ast":null,"code":"'use strict';\n\nmodule.exports = $false;\n$false.displayName = '$false';\n$false.aliases = [];\n\nfunction $false(Prism) {\n  ;\n\n  (function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    };\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/false.js"],"names":["module","exports","$false","displayName","aliases","Prism","languages","comment","pattern","string","greedy","alias","number","operator","punctuation","variable"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB;AACJ;AACA;AACA;AACA;AACIA,IAAAA,KAAK,CAACC,SAAN,CAAgB,OAAhB,IAA2B;AACzBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE;AADF,OADgB;AAIzBC,MAAAA,MAAM,EAAE;AACND,QAAAA,OAAO,EAAE,SADH;AAENE,QAAAA,MAAM,EAAE;AAFF,OAJiB;AAQzB,wBAAkB;AAChBF,QAAAA,OAAO,EAAE,kBADO;AAEhBG,QAAAA,KAAK,EAAE;AAFS,OARO;AAYzB,wBAAkB;AAChBH,QAAAA,OAAO,EAAE,MADO;AAEhBG,QAAAA,KAAK,EAAE;AAFS,OAZO;AAgBzBC,MAAAA,MAAM,EAAE,KAhBiB;AAiBzBC,MAAAA,QAAQ,EAAE,+BAjBe;AAkBzBC,MAAAA,WAAW,EAAE,OAlBY;AAmBzBC,MAAAA,QAAQ,EAAE,OAnBe;AAoBzB,sBAAgB;AACdP,QAAAA,OAAO,EAAE,WADK;AAEdG,QAAAA,KAAK,EAAE;AAFO;AApBS,KAA3B;AAyBD,GA/BA,EA+BEN,KA/BF;AAgCF","sourcesContent":["'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}