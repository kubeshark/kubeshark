{"ast":null,"code":"'use strict';\n\nmodule.exports = hcl;\nhcl.displayName = 'hcl';\nhcl.aliases = [];\n\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [{\n      pattern: /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n      inside: {\n        type: {\n          pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n          lookbehind: true,\n          alias: 'variable'\n        }\n      }\n    }, {\n      pattern: /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n      inside: {\n        type: {\n          pattern: /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n          lookbehind: true,\n          alias: 'variable'\n        }\n      }\n    }, /[\\w-]+(?=\\s+\\{)/],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern: /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/hcl.js"],"names":["module","exports","hcl","displayName","aliases","Prism","languages","comment","heredoc","pattern","greedy","alias","keyword","inside","type","lookbehind","property","string","interpolation","function","number","punctuation","boolean"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,IAAAA,OAAO,EAAE,qCADW;AAEpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,+BADF;AAEPC,MAAAA,MAAM,EAAE,IAFD;AAGPC,MAAAA,KAAK,EAAE;AAHA,KAFW;AAOpBC,IAAAA,OAAO,EAAE,CACP;AACEH,MAAAA,OAAO,EACL,qEAFJ;AAGEI,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AACJL,UAAAA,OAAO,EAAE,gDADL;AAEJM,UAAAA,UAAU,EAAE,IAFR;AAGJJ,UAAAA,KAAK,EAAE;AAHH;AADA;AAHV,KADO,EAYP;AACEF,MAAAA,OAAO,EACL,uGAFJ;AAGEI,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AACJL,UAAAA,OAAO,EACL,+FAFE;AAGJM,UAAAA,UAAU,EAAE,IAHR;AAIJJ,UAAAA,KAAK,EAAE;AAJH;AADA;AAHV,KAZO,EAwBP,iBAxBO,CAPW;AAiCpBK,IAAAA,QAAQ,EAAE,CAAC,uBAAD,EAA0B,mCAA1B,CAjCU;AAkCpBC,IAAAA,MAAM,EAAE;AACNR,MAAAA,OAAO,EACL,+FAFI;AAGNC,MAAAA,MAAM,EAAE,IAHF;AAING,MAAAA,MAAM,EAAE;AACNK,QAAAA,aAAa,EAAE;AACbT,UAAAA,OAAO,EAAE,kDADI;AAEbM,UAAAA,UAAU,EAAE,IAFC;AAGbF,UAAAA,MAAM,EAAE;AACNC,YAAAA,IAAI,EAAE;AACJL,cAAAA,OAAO,EACL,qEAFE;AAGJM,cAAAA,UAAU,EAAE,IAHR;AAIJJ,cAAAA,KAAK,EAAE;AAJH,aADA;AAONC,YAAAA,OAAO,EAAE,0DAPH;AAQNO,YAAAA,QAAQ,EAAE,WARJ;AASNF,YAAAA,MAAM,EAAE;AACNR,cAAAA,OAAO,EAAE,wBADH;AAENC,cAAAA,MAAM,EAAE;AAFF,aATF;AAaNU,YAAAA,MAAM,EAAE,+CAbF;AAcNC,YAAAA,WAAW,EAAE;AAdP;AAHK;AADT;AAJF,KAlCY;AA6DpBD,IAAAA,MAAM,EAAE,+CA7DY;AA8DpBE,IAAAA,OAAO,EAAE,qBA9DW;AA+DpBD,IAAAA,WAAW,EAAE;AA/DO,GAAtB;AAiED","sourcesContent":["'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}