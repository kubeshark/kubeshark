{"ast":null,"code":"'use strict';\n\nmodule.exports = yang;\nyang.displayName = 'yang';\nyang.aliases = [];\n\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/yang.js"],"names":["module","exports","yang","displayName","aliases","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","namespace","boolean","operator","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuB;AACrB;AACA;AACAK,IAAAA,OAAO,EAAE,yBAHY;AAIrBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,2BADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAJa;AAQrBC,IAAAA,OAAO,EAAE;AACPF,MAAAA,OAAO,EAAE,mCADF;AAEPG,MAAAA,UAAU,EAAE;AAFL,KARY;AAYrBC,IAAAA,SAAS,EAAE;AACTJ,MAAAA,OAAO,EAAE,yBADA;AAETG,MAAAA,UAAU,EAAE;AAFH,KAZU;AAgBrBE,IAAAA,OAAO,EAAE,oBAhBY;AAiBrBC,IAAAA,QAAQ,EAAE,IAjBW;AAkBrBC,IAAAA,WAAW,EAAE;AAlBQ,GAAvB;AAoBD","sourcesContent":["'use strict'\n\nmodule.exports = yang\nyang.displayName = 'yang'\nyang.aliases = []\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}