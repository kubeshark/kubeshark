{"ast":null,"code":"import { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\nexport default function shortcuts(e) {\n  var api = new SelectionText(e.target);\n\n  if (e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n\n    if (api.start === api.end) {\n      api.insertText('  ').position(api.start + 2, api.end + 2);\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n\n    api.notifyChange();\n  } else if (e.code && e.code.toLowerCase() === 'enter') {\n    stopPropagation(e);\n    var indent = \"\\n\" + api.getIndentText();\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (e.code && /^(quote|backquote|bracketleft|digit9|comma)$/.test(e.code.toLowerCase()) && api.getSelectedValue()) {\n    stopPropagation(e);\n    var val = api.getSelectedValue();\n    var txt = '';\n\n    switch (e.code.toLowerCase()) {\n      case 'quote':\n        txt = \"'\" + val + \"'\";\n\n        if (e.shiftKey) {\n          txt = \"\\\"\" + val + \"\\\"\";\n        }\n\n        break;\n\n      case 'backquote':\n        txt = \"`\" + val + \"`\";\n        break;\n\n      case 'bracketleft':\n        txt = \"[\" + val + \"]\";\n\n        if (e.shiftKey) {\n          txt = \"{\" + val + \"}\";\n        }\n\n        break;\n\n      case 'digit9':\n        txt = \"(\" + val + \")\";\n        break;\n\n      case 'comma':\n        txt = \"<\" + val + \">\";\n        break;\n    }\n\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAT,QAAgC,SAAhC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,eAAe,SAASC,SAAT,CAAmBC,CAAnB,EAAgE;AAC7E,MAAMC,GAAG,GAAG,IAAIH,aAAJ,CAAkBE,CAAC,CAACE,MAApB,CAAZ;;AACA,MAAIF,CAAC,CAACG,IAAFH,IAAUA,CAAC,CAACG,IAAFH,CAAOI,WAAPJ,OAAyB,KAAvC,EAA8C;AAC5CH,mBAAe,CAACG,CAAD,CAAfH;;AACA,QAAII,GAAG,CAACI,KAAJJ,KAAcA,GAAG,CAACK,GAAtB,EAA2B;AACzBL,SAAG,CAACM,UAAJN,CAAe,IAAfA,EAAqBO,QAArBP,CAA8BA,GAAG,CAACI,KAAJJ,GAAY,CAA1CA,EAA6CA,GAAG,CAACK,GAAJL,GAAU,CAAvDA;AADF,WAEO,IAAIA,GAAG,CAACQ,gBAAJR,GAAuBS,OAAvBT,CAA+B,IAA/BA,IAAuC,CAAC,CAAxCA,IAA6CD,CAAC,CAACW,QAAnD,EAA6D;AAClEV,SAAG,CAACW,cAAJX,CAAmB,IAAnBA;AADK,WAEA,IAAIA,GAAG,CAACQ,gBAAJR,GAAuBS,OAAvBT,CAA+B,IAA/BA,IAAuC,CAAC,CAA5C,EAA+C;AACpDA,SAAG,CAACY,eAAJZ,CAAoB,IAApBA;AADK,WAEA;AACLA,SAAG,CAACM,UAAJN,CAAe,IAAfA,EAAqBO,QAArBP,CAA8BA,GAAG,CAACI,KAAJJ,GAAY,CAA1CA,EAA6CA,GAAG,CAACK,GAAjDL;AACD;;AACDA,OAAG,CAACa,YAAJb;AAXF,SAYO,IAAID,CAAC,CAACG,IAAFH,IAAUA,CAAC,CAACG,IAAFH,CAAOI,WAAPJ,OAAyB,OAAvC,EAAgD;AACrDH,mBAAe,CAACG,CAAD,CAAfH;AACA,QAAMkB,MAAM,UAAQd,GAAG,CAACe,aAAJf,EAApB;AACAA,OAAG,CAACM,UAAJN,CAAec,MAAfd,EAAuBO,QAAvBP,CAAgCA,GAAG,CAACI,KAAJJ,GAAYc,MAAM,CAACE,MAAnDhB,EAA2DA,GAAG,CAACI,KAAJJ,GAAYc,MAAM,CAACE,MAA9EhB;AACAA,OAAG,CAACa,YAAJb;AAJK,SAKA,IACLD,CAAC,CAACG,IAAFH,IACA,+CAA+CkB,IAA/C,CAAoDlB,CAAC,CAACG,IAAFH,CAAOI,WAAPJ,EAApD,CADAA,IAEAC,GAAG,CAACQ,gBAAJR,EAHK,EAIL;AACAJ,mBAAe,CAACG,CAAD,CAAfH;AACA,QAAMsB,GAAG,GAAGlB,GAAG,CAACQ,gBAAJR,EAAZ;AACA,QAAImB,GAAG,GAAG,EAAV;;AACA,YAAQpB,CAAC,CAACG,IAAFH,CAAOI,WAAPJ,EAAR;AACE,WAAK,OAAL;AACEoB,WAAG,SAAOD,GAAP,MAAHC;;AACA,YAAIpB,CAAC,CAACW,QAAN,EAAgB;AACdS,aAAG,UAAOD,GAAP,OAAHC;AACD;;AACD;;AACF,WAAK,WAAL;AACEA,WAAG,SAAQD,GAAR,MAAHC;AACA;;AACF,WAAK,aAAL;AACEA,WAAG,SAAOD,GAAP,MAAHC;;AACA,YAAIpB,CAAC,CAACW,QAAN,EAAgB;AACdS,aAAG,SAAOD,GAAP,MAAHC;AACD;;AACD;;AACF,WAAK,QAAL;AACEA,WAAG,SAAOD,GAAP,MAAHC;AACA;;AACF,WAAK,OAAL;AACEA,WAAG,SAAOD,GAAP,MAAHC;AACA;AArBJ;;AAuBAnB,OAAG,CAACM,UAAJN,CAAemB,GAAfnB;AACAA,OAAG,CAACa,YAAJb;AACD;AACF","names":["stopPropagation","SelectionText","shortcuts","e","api","target","code","toLowerCase","start","end","insertText","position","getSelectedValue","indexOf","shiftKey","lineStarRemove","lineStarInstert","notifyChange","indent","getIndentText","length","test","val","txt"],"sources":["../src/shortcuts.ts"],"sourcesContent":["import React from 'react';\nimport { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\n\nexport default function shortcuts(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  const api = new SelectionText(e.target as HTMLTextAreaElement);\n  if (e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    if (api.start === api.end) {\n      api.insertText('  ').position(api.start + 2, api.end + 2);\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n    api.notifyChange();\n  } else if (e.code && e.code.toLowerCase() === 'enter') {\n    stopPropagation(e);\n    const indent = `\\n${api.getIndentText()}`;\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (\n    e.code &&\n    /^(quote|backquote|bracketleft|digit9|comma)$/.test(e.code.toLowerCase()) &&\n    api.getSelectedValue()\n  ) {\n    stopPropagation(e);\n    const val = api.getSelectedValue();\n    let txt = '';\n    switch (e.code.toLowerCase()) {\n      case 'quote':\n        txt = `'${val}'`;\n        if (e.shiftKey) {\n          txt = `\"${val}\"`;\n        }\n        break;\n      case 'backquote':\n        txt = `\\`${val}\\``;\n        break;\n      case 'bracketleft':\n        txt = `[${val}]`;\n        if (e.shiftKey) {\n          txt = `{${val}}`;\n        }\n        break;\n      case 'digit9':\n        txt = `(${val})`;\n        break;\n      case 'comma':\n        txt = `<${val}>`;\n        break;\n    }\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}