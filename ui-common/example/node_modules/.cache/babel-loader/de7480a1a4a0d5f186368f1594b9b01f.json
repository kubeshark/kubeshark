{"ast":null,"code":"'use strict';\n\nmodule.exports = typoscript;\ntyposcript.displayName = 'typoscript';\ntyposcript.aliases = ['tsconfig'];\n\nfunction typoscript(Prism) {\n  ;\n\n  (function (Prism) {\n    var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n    Prism.languages.typoscript = {\n      comment: [{\n        // multiline comments /* */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      }, {\n        // double-slash comments - ignored when backslashes or colon is found in front\n        // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n        pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, {\n        // hash comments - ignored when leading quote is found for hex colors in strings\n        pattern: /(^|[^\"'])#.*/,\n        lookbehind: true,\n        greedy: true\n      }],\n      function: [{\n        // old include style\n        pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n        inside: {\n          string: {\n            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n            inside: {\n              keyword: keywords\n            }\n          },\n          keyword: {\n            pattern: /INCLUDE_TYPOSCRIPT/\n          }\n        }\n      }, {\n        // new include style\n        pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n        inside: {\n          string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n        }\n      }],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    };\n    Prism.languages.tsconfig = Prism.languages.typoscript;\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/typoscript.js"],"names":["module","exports","typoscript","displayName","aliases","Prism","keywords","languages","comment","pattern","lookbehind","greedy","function","inside","string","keyword","number","punctuation","operator","tag","tsconfig"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AACAA,UAAU,CAACC,WAAX,GAAyB,YAAzB;AACAD,UAAU,CAACE,OAAX,GAAqB,CAAC,UAAD,CAArB;;AACA,SAASF,UAAT,CAAoBG,KAApB,EAA2B;AACzB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB,QAAIC,QAAQ,GACV,+bADF;AAEAD,IAAAA,KAAK,CAACE,SAAN,CAAgBL,UAAhB,GAA6B;AAC3BM,MAAAA,OAAO,EAAE,CACP;AACE;AACAC,QAAAA,OAAO,EAAE,iCAFX;AAGEC,QAAAA,UAAU,EAAE;AAHd,OADO,EAMP;AACE;AACA;AACAD,QAAAA,OAAO,EAAE,0CAHX;AAIEC,QAAAA,UAAU,EAAE,IAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OANO,EAaP;AACE;AACAF,QAAAA,OAAO,EAAE,cAFX;AAGEC,QAAAA,UAAU,EAAE,IAHd;AAIEC,QAAAA,MAAM,EAAE;AAJV,OAbO,CADkB;AAqB3BC,MAAAA,QAAQ,EAAE,CACR;AACE;AACAH,QAAAA,OAAO,EACL,qEAHJ;AAIEI,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE;AACNL,YAAAA,OAAO,EAAE,yBADH;AAENI,YAAAA,MAAM,EAAE;AACNE,cAAAA,OAAO,EAAET;AADH;AAFF,WADF;AAONS,UAAAA,OAAO,EAAE;AACPN,YAAAA,OAAO,EAAE;AADF;AAPH;AAJV,OADQ,EAiBR;AACE;AACAA,QAAAA,OAAO,EAAE,uCAFX;AAGEI,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE;AADF;AAHV,OAjBQ,CArBiB;AA8C3BA,MAAAA,MAAM,EAAE;AACNL,QAAAA,OAAO,EAAE,8BADH;AAENC,QAAAA,UAAU,EAAE,IAFN;AAGNG,QAAAA,MAAM,EAAE;AACND,UAAAA,QAAQ,EAAE,UADJ;AAEN;AACAG,UAAAA,OAAO,EAAET,QAHH;AAINU,UAAAA,MAAM,EAAE,OAJF;AAKNC,UAAAA,WAAW,EAAE;AALP;AAHF,OA9CmB;AAyD3BF,MAAAA,OAAO,EAAET,QAzDkB;AA0D3BU,MAAAA,MAAM,EAAE;AACN;AACAP,QAAAA,OAAO,EAAE,eAFH;AAGNI,QAAAA,MAAM,EAAE;AACNK,UAAAA,QAAQ,EAAE;AADJ;AAHF,OA1DmB;AAiE3BC,MAAAA,GAAG,EAAE;AACHV,QAAAA,OAAO,EAAE,gBADN;AAEHI,QAAAA,MAAM,EAAE;AACNI,UAAAA,WAAW,EAAE;AADP;AAFL,OAjEsB;AAuE3BA,MAAAA,WAAW,EAAE,gBAvEc;AAwE3BC,MAAAA,QAAQ,EAAE;AAxEiB,KAA7B;AA0EAb,IAAAA,KAAK,CAACE,SAAN,CAAgBa,QAAhB,GAA2Bf,KAAK,CAACE,SAAN,CAAgBL,UAA3C;AACD,GA9EA,EA8EEG,KA9EF;AA+EF","sourcesContent":["'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}