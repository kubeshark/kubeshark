{"ast":null,"code":"/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Text} Text\n */\nimport { stringifyEntities } from 'stringify-entities';\n/**\n * @type {Handle}\n * @param {Text} node\n */\n\nexport function text(ctx, node, _, parent) {\n  // Check if content of `node` should be escaped.\n  return parent && parent.type === 'element' && ( // @ts-expect-error: hush.\n  parent.tagName === 'script' || parent.tagName === 'style') ? node.value : stringifyEntities(node.value, Object.assign({}, ctx.entities, {\n    subset: ['<', '&']\n  }));\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/hast-util-to-html/lib/text.js"],"names":["stringifyEntities","text","ctx","node","_","parent","type","tagName","value","Object","assign","entities","subset"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAAQA,iBAAR,QAAgC,oBAAhC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,CAAzB,EAA4BC,MAA5B,EAAoC;AACzC;AACA,SAAOA,MAAM,IACXA,MAAM,CAACC,IAAP,KAAgB,SADX,MAEL;AACCD,EAAAA,MAAM,CAACE,OAAP,KAAmB,QAAnB,IAA+BF,MAAM,CAACE,OAAP,KAAmB,OAH9C,IAIHJ,IAAI,CAACK,KAJF,GAKHR,iBAAiB,CACfG,IAAI,CAACK,KADU,EAEfC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBR,GAAG,CAACS,QAAtB,EAAgC;AAACC,IAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN;AAAT,GAAhC,CAFe,CALrB;AASD","sourcesContent":["/**\n * @typedef {import('./types.js').Handle} Handle\n * @typedef {import('./types.js').Text} Text\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n/**\n * @type {Handle}\n * @param {Text} node\n */\nexport function text(ctx, node, _, parent) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    // @ts-expect-error: hush.\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, ctx.entities, {subset: ['<', '&']})\n      )\n}\n"]},"metadata":{},"sourceType":"module"}