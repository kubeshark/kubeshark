{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.\n *\n * You should use `import { AccordionActions } from '@material-ui/core'`\n * or `import AccordionActions from '@material-ui/core/AccordionActions'`.\n */\n\nvar ExpansionPanelActions = /*#__PURE__*/React.forwardRef(function ExpansionPanelActions(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.', '', \"You should use `import { AccordionActions } from '@material-ui/core'`\", \"or `import AccordionActions from '@material-ui/core/AccordionActions'`\"].join('\\n'));\n    }\n  }\n\n  var classes = props.classes,\n      className = props.className,\n      _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/ExpansionPanelActions/ExpansionPanelActions.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","root","display","alignItems","padding","justifyContent","spacing","marginLeft","warnedOnce","ExpansionPanelActions","forwardRef","props","ref","process","env","NODE_ENV","console","error","join","classes","className","_props$disableSpacing","disableSpacing","other","createElement","propTypes","children","node","object","string","bool","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAIC,MAAM,GAAG;AAClB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,OAAO,EAAE,CAHL;AAIJC,IAAAA,cAAc,EAAE;AAJZ,GAFY;;AASlB;AACAC,EAAAA,OAAO,EAAE;AACP,8BAA0B;AACxBC,MAAAA,UAAU,EAAE;AADY;AADnB;AAVS,CAAb;AAgBP,IAAIC,UAAU,GAAG,KAAjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,qBAAqB,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,SAASD,qBAAT,CAA+BE,KAA/B,EAAsCC,GAAtC,EAA2C;AACnG,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAACP,UAAL,EAAiB;AACfA,MAAAA,UAAU,GAAG,IAAb;AACAQ,MAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,0HAAD,EAA6H,EAA7H,EAAiI,uEAAjI,EAA0M,wEAA1M,EAAoRC,IAApR,CAAyR,IAAzR,CAAd;AACD;AACF;;AAED,MAAIC,OAAO,GAAGR,KAAK,CAACQ,OAApB;AAAA,MACIC,SAAS,GAAGT,KAAK,CAACS,SADtB;AAAA,MAEIC,qBAAqB,GAAGV,KAAK,CAACW,cAFlC;AAAA,MAGIA,cAAc,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,KAAnC,GAA2CA,qBAHhE;AAAA,MAIIE,KAAK,GAAG5B,wBAAwB,CAACgB,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,gBAAzB,CAAR,CAJpC;;AAMA,SAAO,aAAaf,KAAK,CAAC4B,aAAN,CAAoB,KAApB,EAA2B9B,QAAQ,CAAC;AACtD0B,IAAAA,SAAS,EAAEtB,IAAI,CAACqB,OAAO,CAAClB,IAAT,EAAemB,SAAf,EAA0B,CAACE,cAAD,IAAmBH,OAAO,CAACb,OAArD,CADuC;AAEtDM,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDW,KAHoD,CAAnC,CAApB;AAID,CAlBwC,CAAzC;AAmBAV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,qBAAqB,CAACgB,SAAtB,GAAkC;AACxE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEC,EAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,IAToD;;AAWxE;AACF;AACA;AACA;AACER,EAAAA,OAAO,EAAEtB,SAAS,CAAC+B,MAfqD;;AAiBxE;AACF;AACA;AACER,EAAAA,SAAS,EAAEvB,SAAS,CAACgC,MApBmD;;AAsBxE;AACF;AACA;AACEP,EAAAA,cAAc,EAAEzB,SAAS,CAACiC;AAzB8C,CAA1E,GA0BI,KAAK,CA1BT;AA2BA,eAAe/B,UAAU,CAACC,MAAD,EAAS;AAChC+B,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZtB,qBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar warnedOnce = false;\n/**\n * ⚠️ The ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.\n *\n * You should use `import { AccordionActions } from '@material-ui/core'`\n * or `import AccordionActions from '@material-ui/core/AccordionActions'`.\n */\n\nvar ExpansionPanelActions = /*#__PURE__*/React.forwardRef(function ExpansionPanelActions(props, ref) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce) {\n      warnedOnce = true;\n      console.error(['Material-UI: the ExpansionPanelActions component was renamed to AccordionActions to use a more common naming convention.', '', \"You should use `import { AccordionActions } from '@material-ui/core'`\", \"or `import AccordionActions from '@material-ui/core/AccordionActions'`\"].join('\\n'));\n    }\n  }\n\n  var classes = props.classes,\n      className = props.className,\n      _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableSpacing\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelActions'\n})(ExpansionPanelActions);"]},"metadata":{},"sourceType":"module"}