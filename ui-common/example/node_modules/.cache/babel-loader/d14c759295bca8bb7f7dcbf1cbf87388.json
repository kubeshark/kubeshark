{"ast":null,"code":"export default function isPlainObject(value) {\n  if (Object.prototype.toString.call(value) !== '[object Object]') {\n    return false;\n  }\n\n  const prototype = Object.getPrototypeOf(value);\n  return prototype === null || prototype === Object.prototype;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/unified/node_modules/is-plain-obj/index.js"],"names":["isPlainObject","value","Object","prototype","toString","call","getPrototypeOf"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAC5C,MAAIC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,KAA/B,MAA0C,iBAA9C,EAAiE;AAChE,WAAO,KAAP;AACA;;AAED,QAAME,SAAS,GAAGD,MAAM,CAACI,cAAP,CAAsBL,KAAtB,CAAlB;AACA,SAAOE,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAKD,MAAM,CAACC,SAAlD;AACA","sourcesContent":["export default function isPlainObject(value) {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n}\n"]},"metadata":{},"sourceType":"module"}