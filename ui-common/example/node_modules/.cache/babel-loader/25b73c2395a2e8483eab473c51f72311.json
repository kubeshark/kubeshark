{"ast":null,"code":"'use strict';\n\nvar refractorMarkupTemplating = require('./markup-templating.js');\n\nmodule.exports = twig;\ntwig.displayName = 'twig';\ntwig.aliases = [];\n\nfunction twig(Prism) {\n  Prism.register(refractorMarkupTemplating);\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [{\n      pattern: /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n      lookbehind: true\n    }, /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],\n    punctuation: /[()\\[\\]{}:.,]/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return;\n    }\n\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig');\n  });\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/twig.js"],"names":["refractorMarkupTemplating","require","module","exports","twig","displayName","aliases","Prism","register","languages","comment","pattern","lookbehind","alias","delimiter","string","inside","punctuation","keyword","boolean","number","operator","hooks","add","env","language","buildPlaceholders","tokenizePlaceholders"],"mappings":"AAAA;;AACA,IAAIA,yBAAyB,GAAGC,OAAO,CAAC,wBAAD,CAAvC;;AACAC,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,yBAAf;AACAO,EAAAA,KAAK,CAACE,SAAN,CAAgBL,IAAhB,GAAuB;AACrBM,IAAAA,OAAO,EAAE,kBADY;AAErB,gBAAY;AACVC,MAAAA,OAAO,EAAE,gBADC;AAEVC,MAAAA,UAAU,EAAE,IAFF;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAFS;AAOrBC,IAAAA,SAAS,EAAE;AACTH,MAAAA,OAAO,EAAE,qBADA;AAETE,MAAAA,KAAK,EAAE;AAFE,KAPU;AAWrBE,IAAAA,MAAM,EAAE;AACNJ,MAAAA,OAAO,EAAE,iCADH;AAENK,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP;AAFF,KAXa;AAiBrBC,IAAAA,OAAO,EAAE,qBAjBY;AAkBrBC,IAAAA,OAAO,EAAE,yBAlBY;AAmBrBC,IAAAA,MAAM,EAAE,8DAnBa;AAoBrBC,IAAAA,QAAQ,EAAE,CACR;AACEV,MAAAA,OAAO,EACL,uFAFJ;AAGEC,MAAAA,UAAU,EAAE;AAHd,KADQ,EAMR,qCANQ,CApBW;AA4BrBK,IAAAA,WAAW,EAAE;AA5BQ,GAAvB;AA8BAV,EAAAA,KAAK,CAACe,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,EAAmC,UAAUC,GAAV,EAAe;AAChD,QAAIA,GAAG,CAACC,QAAJ,KAAiB,MAArB,EAA6B;AAC3B;AACD;;AACD,QAAId,OAAO,GAAG,6CAAd;AACAJ,IAAAA,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCiB,iBAArC,CAAuDF,GAAvD,EAA4D,MAA5D,EAAoEb,OAApE;AACD,GAND;AAOAJ,EAAAA,KAAK,CAACe,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkC,UAAUC,GAAV,EAAe;AAC/CjB,IAAAA,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCkB,oBAArC,CAA0DH,GAA1D,EAA+D,MAA/D;AACD,GAFD;AAGD","sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n"]},"metadata":{},"sourceType":"script"}