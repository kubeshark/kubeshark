{"ast":null,"code":"/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\nimport { isElement } from 'hast-util-is-element';\nimport { comment } from './util/comment.js';\nimport { siblingAfter } from './util/siblings.js';\nimport { whitespaceStart } from './util/whitespace-start.js';\nimport { omission } from './omission.js';\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n});\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @type {OmitHandle}\n */\n\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true);\n  return !next || !comment(next) && !whitespaceStart(next);\n}\n/**\n * Whether to omit `</html>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || !comment(next);\n}\n/**\n * Whether to omit `</body>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || !comment(next);\n}\n/**\n * Whether to omit `</p>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next ? isElement(next, ['address', 'article', 'aside', 'blockquote', 'details', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'main', 'menu', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul']) : !parent || // Confusing parent.\n  !isElement(parent, ['a', 'audio', 'del', 'ins', 'map', 'noscript', 'video']);\n}\n/**\n * Whether to omit `</li>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, 'li');\n}\n/**\n * Whether to omit `</dt>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next && isElement(next, ['dt', 'dd']);\n}\n/**\n * Whether to omit `</dd>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, ['dt', 'dd']);\n}\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, ['rp', 'rt']);\n}\n/**\n * Whether to omit `</optgroup>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, 'optgroup');\n}\n/**\n * Whether to omit `</option>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, ['option', 'optgroup']);\n}\n/**\n * Whether to omit `</menuitem>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, ['menuitem', 'hr', 'menu']);\n}\n/**\n * Whether to omit `</thead>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return next && isElement(next, ['tbody', 'tfoot']);\n}\n/**\n * Whether to omit `</tbody>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, ['tbody', 'tfoot']);\n}\n/**\n * Whether to omit `</tfoot>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index);\n}\n/**\n * Whether to omit `</tr>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, 'tr');\n}\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @type {OmitHandle}\n */\n\n\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index);\n  return !next || isElement(next, ['td', 'th']);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/hast-util-to-html/lib/omission/closing.js"],"names":["isElement","comment","siblingAfter","whitespaceStart","omission","closing","html","head","headOrColgroupOrCaption","body","p","li","dt","dd","rt","rubyElement","rp","optgroup","option","menuitem","colgroup","caption","thead","tbody","tfoot","tr","td","cells","th","_","index","parent","next"],"mappings":"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","sourcesContent":["/**\n * @typedef {import('../types.js').OmitHandle} OmitHandle\n */\n\nimport {isElement} from 'hast-util-is-element'\nimport {comment} from './util/comment.js'\nimport {siblingAfter} from './util/siblings.js'\nimport {whitespaceStart} from './util/whitespace-start.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  html,\n  head: headOrColgroupOrCaption,\n  body,\n  p,\n  li,\n  dt,\n  dd,\n  rt: rubyElement,\n  rp: rubyElement,\n  optgroup,\n  option,\n  menuitem,\n  colgroup: headOrColgroupOrCaption,\n  caption: headOrColgroupOrCaption,\n  thead,\n  tbody,\n  tfoot,\n  tr,\n  td: cells,\n  th: cells\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @type {OmitHandle}\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return !next || (!comment(next) && !whitespaceStart(next))\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @type {OmitHandle}\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @type {OmitHandle}\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || !comment(next)\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @type {OmitHandle}\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? isElement(next, [\n        'address',\n        'article',\n        'aside',\n        'blockquote',\n        'details',\n        'div',\n        'dl',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'footer',\n        'form',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'header',\n        'hgroup',\n        'hr',\n        'main',\n        'menu',\n        'nav',\n        'ol',\n        'p',\n        'pre',\n        'section',\n        'table',\n        'ul'\n      ])\n    : !parent ||\n        // Confusing parent.\n        !isElement(parent, [\n          'a',\n          'audio',\n          'del',\n          'ins',\n          'map',\n          'noscript',\n          'video'\n        ])\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @type {OmitHandle}\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @type {OmitHandle}\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @type {OmitHandle}\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['dt', 'dd'])\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @type {OmitHandle}\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['rp', 'rt'])\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @type {OmitHandle}\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @type {OmitHandle}\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['option', 'optgroup'])\n}\n\n/**\n * Whether to omit `</menuitem>`.\n *\n * @type {OmitHandle}\n */\nfunction menuitem(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['menuitem', 'hr', 'menu'])\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @type {OmitHandle}\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next && isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @type {OmitHandle}\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['tbody', 'tfoot'])\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @type {OmitHandle}\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @type {OmitHandle}\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @type {OmitHandle}\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || isElement(next, ['td', 'th'])\n}\n"]},"metadata":{},"sourceType":"module"}