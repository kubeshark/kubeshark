{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: 56,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\nvar BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      onChange = props.onChange,\n      _props$showLabels = props.showLabels,\n      showLabels = _props$showLabels === void 0 ? false : _props$showLabels,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.Children.map(children, function (child, childIndex) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange: onChange\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value We default to the index of the child.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, all `BottomNavigationAction`s will show their labels.\n   * By default, only the selected `BottomNavigationAction` will show its label.\n   */\n  showLabels: PropTypes.bool,\n\n  /**\n   * The value of the currently selected `BottomNavigationAction`.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigation'\n})(BottomNavigation);","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/@material-ui/core/esm/BottomNavigation/BottomNavigation.js"],"names":["_extends","_objectWithoutProperties","React","isFragment","PropTypes","clsx","withStyles","styles","theme","root","display","justifyContent","height","backgroundColor","palette","background","paper","BottomNavigation","forwardRef","props","ref","children","classes","className","_props$component","component","Component","onChange","_props$showLabels","showLabels","value","other","createElement","Children","map","child","childIndex","isValidElement","process","env","NODE_ENV","console","error","join","childValue","undefined","cloneElement","selected","showLabel","propTypes","node","object","string","elementType","func","bool","any","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACzC,SAAO;AACL;AACAC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,MADL;AAEJC,MAAAA,cAAc,EAAE,QAFZ;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC;AAJtC;AAFD,GAAP;AASD,CAVM;AAWP,IAAIC,gBAAgB,GAAG,aAAaf,KAAK,CAACgB,UAAN,CAAiB,SAASD,gBAAT,CAA0BE,KAA1B,EAAiCC,GAAjC,EAAsC;AACzF,MAAIC,QAAQ,GAAGF,KAAK,CAACE,QAArB;AAAA,MACIC,OAAO,GAAGH,KAAK,CAACG,OADpB;AAAA,MAEIC,SAAS,GAAGJ,KAAK,CAACI,SAFtB;AAAA,MAGIC,gBAAgB,GAAGL,KAAK,CAACM,SAH7B;AAAA,MAIIC,SAAS,GAAGF,gBAAgB,KAAK,KAAK,CAA1B,GAA8B,KAA9B,GAAsCA,gBAJtD;AAAA,MAKIG,QAAQ,GAAGR,KAAK,CAACQ,QALrB;AAAA,MAMIC,iBAAiB,GAAGT,KAAK,CAACU,UAN9B;AAAA,MAOIA,UAAU,GAAGD,iBAAiB,KAAK,KAAK,CAA3B,GAA+B,KAA/B,GAAuCA,iBAPxD;AAAA,MAQIE,KAAK,GAAGX,KAAK,CAACW,KARlB;AAAA,MASIC,KAAK,GAAG9B,wBAAwB,CAACkB,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,WAArC,EAAkD,UAAlD,EAA8D,YAA9D,EAA4E,OAA5E,CAAR,CATpC;;AAWA,SAAO,aAAajB,KAAK,CAAC8B,aAAN,CAAoBN,SAApB,EAA+B1B,QAAQ,CAAC;AAC1DuB,IAAAA,SAAS,EAAElB,IAAI,CAACiB,OAAO,CAACb,IAAT,EAAec,SAAf,CAD2C;AAE1DH,IAAAA,GAAG,EAAEA;AAFqD,GAAD,EAGxDW,KAHwD,CAAvC,EAGT7B,KAAK,CAAC+B,QAAN,CAAeC,GAAf,CAAmBb,QAAnB,EAA6B,UAAUc,KAAV,EAAiBC,UAAjB,EAA6B;AACnE,QAAI,EAAE,aAAalC,KAAK,CAACmC,cAAN,CAAqBF,KAArB,CAAnB,EAAgD;AAC9C,aAAO,IAAP;AACD;;AAED,QAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIrC,UAAU,CAACgC,KAAD,CAAd,EAAuB;AACrBM,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,mFAAD,EAAsF,sCAAtF,EAA8HC,IAA9H,CAAmI,IAAnI,CAAd;AACD;AACF;;AAED,QAAIC,UAAU,GAAGT,KAAK,CAAChB,KAAN,CAAYW,KAAZ,KAAsBe,SAAtB,GAAkCT,UAAlC,GAA+CD,KAAK,CAAChB,KAAN,CAAYW,KAA5E;AACA,WAAO,aAAa5B,KAAK,CAAC4C,YAAN,CAAmBX,KAAnB,EAA0B;AAC5CY,MAAAA,QAAQ,EAAEH,UAAU,KAAKd,KADmB;AAE5CkB,MAAAA,SAAS,EAAEb,KAAK,CAAChB,KAAN,CAAY6B,SAAZ,KAA0BH,SAA1B,GAAsCV,KAAK,CAAChB,KAAN,CAAY6B,SAAlD,GAA8DnB,UAF7B;AAG5CC,MAAAA,KAAK,EAAEc,UAHqC;AAI5CjB,MAAAA,QAAQ,EAAEA;AAJkC,KAA1B,CAApB;AAMD,GAlBU,CAHS,CAApB;AAsBD,CAlCmC,CAApC;AAmCAW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCvB,gBAAgB,CAACgC,SAAjB,GAA6B;AACnE;AACA;AACA;AACA;;AAEA;AACF;AACA;AACE5B,EAAAA,QAAQ,EAAEjB,SAAS,CAAC8C,IAT+C;;AAWnE;AACF;AACA;AACA;AACE5B,EAAAA,OAAO,EAAElB,SAAS,CAAC+C,MAfgD;;AAiBnE;AACF;AACA;AACE5B,EAAAA,SAAS,EAAEnB,SAAS,CAACgD,MApB8C;;AAsBnE;AACF;AACA;AACA;AACE3B,EAAAA,SAAS,EAAErB;AACX;AADoB,GAEnBiD,WA5BkE;;AA8BnE;AACF;AACA;AACA;AACA;AACA;AACE1B,EAAAA,QAAQ,EAAEvB,SAAS,CAACkD,IApC+C;;AAsCnE;AACF;AACA;AACA;AACEzB,EAAAA,UAAU,EAAEzB,SAAS,CAACmD,IA1C6C;;AA4CnE;AACF;AACA;AACEzB,EAAAA,KAAK,EAAE1B,SAAS,CAACoD;AA/CkD,CAArE,GAgDI,KAAK,CAhDT;AAiDA,eAAelD,UAAU,CAACC,MAAD,EAAS;AAChCkD,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZxC,gBAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      justifyContent: 'center',\n      height: 56,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n};\nvar BottomNavigation = /*#__PURE__*/React.forwardRef(function BottomNavigation(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      onChange = props.onChange,\n      _props$showLabels = props.showLabels,\n      showLabels = _props$showLabels === void 0 ? false : _props$showLabels,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"onChange\", \"showLabels\", \"value\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), React.Children.map(children, function (child, childIndex) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The BottomNavigation component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    return /*#__PURE__*/React.cloneElement(child, {\n      selected: childValue === value,\n      showLabel: child.props.showLabel !== undefined ? child.props.showLabel : showLabels,\n      value: childValue,\n      onChange: onChange\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BottomNavigation.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value We default to the index of the child.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, all `BottomNavigationAction`s will show their labels.\n   * By default, only the selected `BottomNavigationAction` will show its label.\n   */\n  showLabels: PropTypes.bool,\n\n  /**\n   * The value of the currently selected `BottomNavigationAction`.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBottomNavigation'\n})(BottomNavigation);"]},"metadata":{},"sourceType":"module"}