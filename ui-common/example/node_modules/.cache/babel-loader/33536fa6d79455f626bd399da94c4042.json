{"ast":null,"code":"'use strict';\n\nconst {\n  DOCUMENT_MODE\n} = require('../common/html'); //Node construction\n\n\nexports.createDocument = function () {\n  return {\n    nodeName: '#document',\n    mode: DOCUMENT_MODE.NO_QUIRKS,\n    childNodes: []\n  };\n};\n\nexports.createDocumentFragment = function () {\n  return {\n    nodeName: '#document-fragment',\n    childNodes: []\n  };\n};\n\nexports.createElement = function (tagName, namespaceURI, attrs) {\n  return {\n    nodeName: tagName,\n    tagName: tagName,\n    attrs: attrs,\n    namespaceURI: namespaceURI,\n    childNodes: [],\n    parentNode: null\n  };\n};\n\nexports.createCommentNode = function (data) {\n  return {\n    nodeName: '#comment',\n    data: data,\n    parentNode: null\n  };\n};\n\nconst createTextNode = function (value) {\n  return {\n    nodeName: '#text',\n    value: value,\n    parentNode: null\n  };\n}; //Tree mutation\n\n\nconst appendChild = exports.appendChild = function (parentNode, newNode) {\n  parentNode.childNodes.push(newNode);\n  newNode.parentNode = parentNode;\n};\n\nconst insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {\n  const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n  parentNode.childNodes.splice(insertionIdx, 0, newNode);\n  newNode.parentNode = parentNode;\n};\n\nexports.setTemplateContent = function (templateElement, contentElement) {\n  templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function (templateElement) {\n  return templateElement.content;\n};\n\nexports.setDocumentType = function (document, name, publicId, systemId) {\n  let doctypeNode = null;\n\n  for (let i = 0; i < document.childNodes.length; i++) {\n    if (document.childNodes[i].nodeName === '#documentType') {\n      doctypeNode = document.childNodes[i];\n      break;\n    }\n  }\n\n  if (doctypeNode) {\n    doctypeNode.name = name;\n    doctypeNode.publicId = publicId;\n    doctypeNode.systemId = systemId;\n  } else {\n    appendChild(document, {\n      nodeName: '#documentType',\n      name: name,\n      publicId: publicId,\n      systemId: systemId\n    });\n  }\n};\n\nexports.setDocumentMode = function (document, mode) {\n  document.mode = mode;\n};\n\nexports.getDocumentMode = function (document) {\n  return document.mode;\n};\n\nexports.detachNode = function (node) {\n  if (node.parentNode) {\n    const idx = node.parentNode.childNodes.indexOf(node);\n    node.parentNode.childNodes.splice(idx, 1);\n    node.parentNode = null;\n  }\n};\n\nexports.insertText = function (parentNode, text) {\n  if (parentNode.childNodes.length) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n    if (prevNode.nodeName === '#text') {\n      prevNode.value += text;\n      return;\n    }\n  }\n\n  appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function (parentNode, text, referenceNode) {\n  const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n  if (prevNode && prevNode.nodeName === '#text') {\n    prevNode.value += text;\n  } else {\n    insertBefore(parentNode, createTextNode(text), referenceNode);\n  }\n};\n\nexports.adoptAttributes = function (recipient, attrs) {\n  const recipientAttrsMap = [];\n\n  for (let i = 0; i < recipient.attrs.length; i++) {\n    recipientAttrsMap.push(recipient.attrs[i].name);\n  }\n\n  for (let j = 0; j < attrs.length; j++) {\n    if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n      recipient.attrs.push(attrs[j]);\n    }\n  }\n}; //Tree traversing\n\n\nexports.getFirstChild = function (node) {\n  return node.childNodes[0];\n};\n\nexports.getChildNodes = function (node) {\n  return node.childNodes;\n};\n\nexports.getParentNode = function (node) {\n  return node.parentNode;\n};\n\nexports.getAttrList = function (element) {\n  return element.attrs;\n}; //Node data\n\n\nexports.getTagName = function (element) {\n  return element.tagName;\n};\n\nexports.getNamespaceURI = function (element) {\n  return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function (textNode) {\n  return textNode.value;\n};\n\nexports.getCommentNodeContent = function (commentNode) {\n  return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function (doctypeNode) {\n  return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function (doctypeNode) {\n  return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function (doctypeNode) {\n  return doctypeNode.systemId;\n}; //Node types\n\n\nexports.isTextNode = function (node) {\n  return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function (node) {\n  return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function (node) {\n  return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function (node) {\n  return !!node.tagName;\n}; // Source code location\n\n\nexports.setNodeSourceCodeLocation = function (node, location) {\n  node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function (node) {\n  return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function (node, endLocation) {\n  node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/parse5/lib/tree-adapters/default.js"],"names":["DOCUMENT_MODE","require","exports","createDocument","nodeName","mode","NO_QUIRKS","childNodes","createDocumentFragment","createElement","tagName","namespaceURI","attrs","parentNode","createCommentNode","data","createTextNode","value","appendChild","newNode","push","insertBefore","referenceNode","insertionIdx","indexOf","splice","setTemplateContent","templateElement","contentElement","content","getTemplateContent","setDocumentType","document","name","publicId","systemId","doctypeNode","i","length","setDocumentMode","getDocumentMode","detachNode","node","idx","insertText","text","prevNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","j","getFirstChild","getChildNodes","getParentNode","getAttrList","element","getTagName","getNamespaceURI","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isTextNode","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","Object","assign"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { DOCUMENT_MODE } = require('../common/html');\n\n//Node construction\nexports.createDocument = function() {\n    return {\n        nodeName: '#document',\n        mode: DOCUMENT_MODE.NO_QUIRKS,\n        childNodes: []\n    };\n};\n\nexports.createDocumentFragment = function() {\n    return {\n        nodeName: '#document-fragment',\n        childNodes: []\n    };\n};\n\nexports.createElement = function(tagName, namespaceURI, attrs) {\n    return {\n        nodeName: tagName,\n        tagName: tagName,\n        attrs: attrs,\n        namespaceURI: namespaceURI,\n        childNodes: [],\n        parentNode: null\n    };\n};\n\nexports.createCommentNode = function(data) {\n    return {\n        nodeName: '#comment',\n        data: data,\n        parentNode: null\n    };\n};\n\nconst createTextNode = function(value) {\n    return {\n        nodeName: '#text',\n        value: value,\n        parentNode: null\n    };\n};\n\n//Tree mutation\nconst appendChild = (exports.appendChild = function(parentNode, newNode) {\n    parentNode.childNodes.push(newNode);\n    newNode.parentNode = parentNode;\n});\n\nconst insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {\n    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n\n    parentNode.childNodes.splice(insertionIdx, 0, newNode);\n    newNode.parentNode = parentNode;\n});\n\nexports.setTemplateContent = function(templateElement, contentElement) {\n    templateElement.content = contentElement;\n};\n\nexports.getTemplateContent = function(templateElement) {\n    return templateElement.content;\n};\n\nexports.setDocumentType = function(document, name, publicId, systemId) {\n    let doctypeNode = null;\n\n    for (let i = 0; i < document.childNodes.length; i++) {\n        if (document.childNodes[i].nodeName === '#documentType') {\n            doctypeNode = document.childNodes[i];\n            break;\n        }\n    }\n\n    if (doctypeNode) {\n        doctypeNode.name = name;\n        doctypeNode.publicId = publicId;\n        doctypeNode.systemId = systemId;\n    } else {\n        appendChild(document, {\n            nodeName: '#documentType',\n            name: name,\n            publicId: publicId,\n            systemId: systemId\n        });\n    }\n};\n\nexports.setDocumentMode = function(document, mode) {\n    document.mode = mode;\n};\n\nexports.getDocumentMode = function(document) {\n    return document.mode;\n};\n\nexports.detachNode = function(node) {\n    if (node.parentNode) {\n        const idx = node.parentNode.childNodes.indexOf(node);\n\n        node.parentNode.childNodes.splice(idx, 1);\n        node.parentNode = null;\n    }\n};\n\nexports.insertText = function(parentNode, text) {\n    if (parentNode.childNodes.length) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n\n        if (prevNode.nodeName === '#text') {\n            prevNode.value += text;\n            return;\n        }\n    }\n\n    appendChild(parentNode, createTextNode(text));\n};\n\nexports.insertTextBefore = function(parentNode, text, referenceNode) {\n    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n\n    if (prevNode && prevNode.nodeName === '#text') {\n        prevNode.value += text;\n    } else {\n        insertBefore(parentNode, createTextNode(text), referenceNode);\n    }\n};\n\nexports.adoptAttributes = function(recipient, attrs) {\n    const recipientAttrsMap = [];\n\n    for (let i = 0; i < recipient.attrs.length; i++) {\n        recipientAttrsMap.push(recipient.attrs[i].name);\n    }\n\n    for (let j = 0; j < attrs.length; j++) {\n        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {\n            recipient.attrs.push(attrs[j]);\n        }\n    }\n};\n\n//Tree traversing\nexports.getFirstChild = function(node) {\n    return node.childNodes[0];\n};\n\nexports.getChildNodes = function(node) {\n    return node.childNodes;\n};\n\nexports.getParentNode = function(node) {\n    return node.parentNode;\n};\n\nexports.getAttrList = function(element) {\n    return element.attrs;\n};\n\n//Node data\nexports.getTagName = function(element) {\n    return element.tagName;\n};\n\nexports.getNamespaceURI = function(element) {\n    return element.namespaceURI;\n};\n\nexports.getTextNodeContent = function(textNode) {\n    return textNode.value;\n};\n\nexports.getCommentNodeContent = function(commentNode) {\n    return commentNode.data;\n};\n\nexports.getDocumentTypeNodeName = function(doctypeNode) {\n    return doctypeNode.name;\n};\n\nexports.getDocumentTypeNodePublicId = function(doctypeNode) {\n    return doctypeNode.publicId;\n};\n\nexports.getDocumentTypeNodeSystemId = function(doctypeNode) {\n    return doctypeNode.systemId;\n};\n\n//Node types\nexports.isTextNode = function(node) {\n    return node.nodeName === '#text';\n};\n\nexports.isCommentNode = function(node) {\n    return node.nodeName === '#comment';\n};\n\nexports.isDocumentTypeNode = function(node) {\n    return node.nodeName === '#documentType';\n};\n\nexports.isElementNode = function(node) {\n    return !!node.tagName;\n};\n\n// Source code location\nexports.setNodeSourceCodeLocation = function(node, location) {\n    node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = function(node) {\n    return node.sourceCodeLocation;\n};\n\nexports.updateNodeSourceCodeLocation = function(node, endLocation) {\n    node.sourceCodeLocation = Object.assign(node.sourceCodeLocation, endLocation);\n};\n"]},"metadata":{},"sourceType":"script"}