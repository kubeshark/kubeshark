{"ast":null,"code":"'use strict';\n\nmodule.exports = bicep;\nbicep.displayName = 'bicep';\nbicep.aliases = [];\n\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [{\n      // multiline comments eg /* ASDF */\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // singleline comments eg // ASDF\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    property: [{\n      pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n      lookbehind: true\n    }, {\n      pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: [{\n      pattern: /'''[^'][\\s\\S]*?'''/,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  };\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside['expression'].inside = Prism.languages.bicep;\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/bicep.js"],"names":["module","exports","bicep","displayName","aliases","Prism","languages","comment","pattern","lookbehind","greedy","property","string","inside","interpolation","expression","punctuation","datatype","alias","boolean","keyword","decorator","function","number","operator"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpB;AACAA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,KAAhB,GAAwB;AACtBK,IAAAA,OAAO,EAAE,CACP;AACE;AACAC,MAAAA,OAAO,EAAE,iCAFX;AAGEC,MAAAA,UAAU,EAAE,IAHd;AAIEC,MAAAA,MAAM,EAAE;AAJV,KADO,EAOP;AACE;AACAF,MAAAA,OAAO,EAAE,kBAFX;AAGEC,MAAAA,UAAU,EAAE,IAHd;AAIEC,MAAAA,MAAM,EAAE;AAJV,KAPO,CADa;AAetBC,IAAAA,QAAQ,EAAE,CACR;AACEH,MAAAA,OAAO,EAAE,qCADX;AAEEC,MAAAA,UAAU,EAAE;AAFd,KADQ,EAKR;AACED,MAAAA,OAAO,EAAE,0DADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KALQ,CAfY;AA0BtBE,IAAAA,MAAM,EAAE,CACN;AACEJ,MAAAA,OAAO,EAAE,oBADX;AAEEE,MAAAA,MAAM,EAAE;AAFV,KADM,EAKN;AACEF,MAAAA,OAAO,EAAE,2CADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KALM,CA1Bc;AAqCtB,2BAAuB;AACrBF,MAAAA,OAAO,EAAE,8DADY;AAErBC,MAAAA,UAAU,EAAE,IAFS;AAGrBC,MAAAA,MAAM,EAAE,IAHa;AAIrBG,MAAAA,MAAM,EAAE;AACNC,QAAAA,aAAa,EAAE;AACbN,UAAAA,OAAO,EAAE,kBADI;AAEbK,UAAAA,MAAM,EAAE;AACNE,YAAAA,UAAU,EAAE;AACVP,cAAAA,OAAO,EAAE,uBADC;AAEVC,cAAAA,UAAU,EAAE;AAFF,aADN;AAKNO,YAAAA,WAAW,EAAE;AALP;AAFK,SADT;AAWNJ,QAAAA,MAAM,EAAE;AAXF;AAJa,KArCD;AAuDtBK,IAAAA,QAAQ,EAAE;AACRT,MAAAA,OAAO,EAAE,4CADD;AAERC,MAAAA,UAAU,EAAE,IAFJ;AAGRS,MAAAA,KAAK,EAAE;AAHC,KAvDY;AA4DtBC,IAAAA,OAAO,EAAE,oBA5Da;AA6DtB;AACAC,IAAAA,OAAO,EACL,8EA/DoB;AAgEtBC,IAAAA,SAAS,EAAE,QAhEW;AAiEtBC,IAAAA,QAAQ,EAAE,0BAjEY;AAkEtBC,IAAAA,MAAM,EAAE,4CAlEc;AAmEtBC,IAAAA,QAAQ,EACN,2FApEoB;AAqEtBR,IAAAA,WAAW,EAAE;AArES,GAAxB;AAuEAX,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,KAAhB,CAAsB,qBAAtB,EAA6CW,MAA7C,CAAoD,eAApD,EAAqEA,MAArE,CACE,YADF,EAEEA,MAFF,GAEWR,KAAK,CAACC,SAAN,CAAgBJ,KAF3B;AAGD","sourcesContent":["'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n"]},"metadata":{},"sourceType":"script"}