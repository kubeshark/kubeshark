{"ast":null,"code":"'use strict';\n\nmodule.exports = t4Templating;\nt4Templating.displayName = 't4Templating';\nt4Templating.aliases = [];\n\nfunction t4Templating(Prism) {\n  ;\n\n  (function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      };\n    }\n\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang];\n      var className = 'language-' + insideLang;\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      };\n    }\n\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    });\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/t4-templating.js"],"names":["module","exports","t4Templating","displayName","aliases","Prism","createBlock","prefix","inside","contentAlias","pattern","RegExp","alias","delimiter","content","createT4","insideLang","grammar","languages","className","block","directive","punctuation","keyword","expression","standard","Object","defineProperty","value"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;AACAA,YAAY,CAACC,WAAb,GAA2B,cAA3B;AACAD,YAAY,CAACE,OAAb,GAAuB,EAAvB;;AACA,SAASF,YAAT,CAAsBG,KAAtB,EAA6B;AAC3B;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB,aAASC,WAAT,CAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,YAArC,EAAmD;AACjD,aAAO;AACLC,QAAAA,OAAO,EAAEC,MAAM,CAAC,OAAOJ,MAAP,GAAgB,cAAjB,CADV;AAELK,QAAAA,KAAK,EAAE,OAFF;AAGLJ,QAAAA,MAAM,EAAE;AACNK,UAAAA,SAAS,EAAE;AACTH,YAAAA,OAAO,EAAEC,MAAM,CAAC,QAAQJ,MAAR,GAAiB,MAAlB,CADN;AAETK,YAAAA,KAAK,EAAE;AAFE,WADL;AAKNE,UAAAA,OAAO,EAAE;AACPJ,YAAAA,OAAO,EAAE,SADF;AAEPF,YAAAA,MAAM,EAAEA,MAFD;AAGPI,YAAAA,KAAK,EAAEH;AAHA;AALH;AAHH,OAAP;AAeD;;AACD,aAASM,QAAT,CAAkBC,UAAlB,EAA8B;AAC5B,UAAIC,OAAO,GAAGZ,KAAK,CAACa,SAAN,CAAgBF,UAAhB,CAAd;AACA,UAAIG,SAAS,GAAG,cAAcH,UAA9B;AACA,aAAO;AACLI,QAAAA,KAAK,EAAE;AACLV,UAAAA,OAAO,EAAE,cADJ;AAELF,UAAAA,MAAM,EAAE;AACNa,YAAAA,SAAS,EAAEf,WAAW,CAAC,GAAD,EAAM;AAC1B,4BAAc;AACZI,gBAAAA,OAAO,EAAE,kDADG;AAEZF,gBAAAA,MAAM,EAAE;AACNc,kBAAAA,WAAW,EAAE;AADP;AAFI,eADY;AAO1BC,cAAAA,OAAO,EAAE,aAPiB;AAQ1B,2BAAa;AARa,aAAN,CADhB;AAWNC,YAAAA,UAAU,EAAElB,WAAW,CAAC,GAAD,EAAMW,OAAN,EAAeE,SAAf,CAXjB;AAYN,6BAAiBb,WAAW,CAAC,KAAD,EAAQW,OAAR,EAAiBE,SAAjB,CAZtB;AAaNM,YAAAA,QAAQ,EAAEnB,WAAW,CAAC,EAAD,EAAKW,OAAL,EAAcE,SAAd;AAbf;AAFH;AADF,OAAP;AAoBD;;AACDd,IAAAA,KAAK,CAACa,SAAN,CAAgB,eAAhB,IAAmCQ,MAAM,CAACC,cAAP,CAAsB,EAAtB,EAA0B,UAA1B,EAAsC;AACvEC,MAAAA,KAAK,EAAEb;AADgE,KAAtC,CAAnC;AAGD,GA7CA,EA6CEV,KA7CF;AA8CF","sourcesContent":["'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}