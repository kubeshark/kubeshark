{"ast":null,"code":"'use strict';\n\nvar refractorYaml = require('./yaml.js');\n\nmodule.exports = tap;\ntap.displayName = 'tap';\ntap.aliases = [];\n\nfunction tap(Prism) {\n  Prism.register(refractorYaml); // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  };\n}","map":{"version":3,"sources":["/Users/leon/lib-test/liraz-test/node_modules/refractor/lang/tap.js"],"names":["refractorYaml","require","module","exports","tap","displayName","aliases","Prism","register","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias"],"mappings":"AAAA;;AACA,IAAIA,aAAa,GAAGC,OAAO,CAAC,WAAD,CAA3B;;AACAC,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,aAAf,EADkB,CAElB;;AACAO,EAAAA,KAAK,CAACE,SAAN,CAAgBL,GAAhB,GAAsB;AACpBM,IAAAA,IAAI,EAAE,kBADc;AAEpBC,IAAAA,IAAI,EAAE,cAFc;AAGpBC,IAAAA,MAAM,EAAE,mBAHY;AAIpBC,IAAAA,OAAO,EAAE,cAJW;AAKpBC,IAAAA,OAAO,EAAE,kBALW;AAMpBC,IAAAA,IAAI,EAAE,wBANc;AAOpBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,oBADF;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAPW;AAWpBC,IAAAA,WAAW,EAAE,MAXO;AAYpBC,IAAAA,SAAS,EAAE,KAZS;AAapBC,IAAAA,OAAO,EAAE;AACPJ,MAAAA,OAAO,EAAE,0CADF;AAEPK,MAAAA,UAAU,EAAE,IAFL;AAGPC,MAAAA,MAAM,EAAEhB,KAAK,CAACE,SAAN,CAAgBe,IAHjB;AAIPC,MAAAA,KAAK,EAAE;AAJA;AAbW,GAAtB;AAoBD","sourcesContent":["'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}