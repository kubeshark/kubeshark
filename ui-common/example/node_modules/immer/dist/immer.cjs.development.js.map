{"version":3,"file":"immer.cjs.development.js","sources":["../src/utils/env.ts","../src/utils/errors.ts","../src/types/types-internal.ts","../src/utils/common.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/immer.ts"],"sourcesContent":["// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyTypeSet ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existig to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tArchtypeObject\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tconst p = path[i]\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === ArchtypeObject || parentType === ArchtypeArray) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n"],"names":["hasSymbol","Symbol","hasMap","Map","hasSet","Set","hasProxies","Proxy","revocable","Reflect","NOTHING","for","DRAFTABLE","DRAFT_STATE","iteratorSymbol","iterator","errors","data","path","op","plugin","thing","die","error","args","e","msg","apply","Error","ArchtypeObject","ArchtypeArray","ArchtypeMap","ArchtypeSet","ProxyTypeProxyObject","ProxyTypeProxyArray","ProxyTypeES5Object","ProxyTypeES5Array","ProxyTypeMap","ProxyTypeSet","isDraft","value","isDraftable","isPlainObject","Array","isArray","constructor","isMap","isSet","proto","Object","getPrototypeOf","prototype","original","base_","ownKeys","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","getOwnPropertyDescriptors","target","res","forEach","key","getOwnPropertyDescriptor","each","iter","enumerableOnly","getArchtype","keys","entry","index","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","latest","copy_","shallowCopy","base","slice","descriptors","i","length","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","plugins","getPlugin","pluginKey","loadPlugin","implementation","currentScope","getCurrentScope","createScope","parent_","immer_","drafts_","canAutoFreeze_","unfinalizedDrafts_","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","revokeDraft","enterScope","immer","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","assigned_","autoFreeze_","createProxyProxy","parent","isManual_","traps","objectTraps","arrayTraps","revoke","proxy","source","readPropFromProto","peek","prepareCopy","createProxy","getDescriptorFromProto","current","currentState","markChanged","deleteProperty","owner","defineProperty","setPrototypeOf","fn","arguments","isNaN","parseInt","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","curriedProduce","hasError","Promise","then","arg1","arg2","arg3","patches","inversePatches","nextState","p","ip","createDraft","finishDraft","applyPatches","patch","applyPatchesImpl","applyPatches_","proxyMap_","proxySet_","createES5Proxy_","push","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","markChangesRecursively","markChangesSweep","createES5Draft","proxyProperty","assertUnrevoked","drafts","hasArrayChanges","hasObjectChanges","object","min","Math","baseValue","baseIsDraft","descriptor","JSON","stringify","enablePatches","REPLACE","ADD","REMOVE","basePath","generatePatchesFromAssigned","generateArrayPatches","generateSetPatches","clonePatchValueIfNeeded","assignedValue","origValue","unshift","rootState","replacement","parentType","join","type","deepClonePatchValue","splice","map","entries","k","v","cloned","enableMapSet","extendStatics","d","b","__proto__","__extends","__","DraftMap","_super","size","prepareMapCopy","cb","thisArg","_value","_map","values","next","r","done","DraftSet","prepareSetCopy","enableAllPlugins","castDraft","castImmutable"],"mappings":"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"}