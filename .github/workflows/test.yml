name: Test

on:
  pull_request:
    branches:
      - 'develop'
      - 'main'
  push: # needed to upload test coverage report to codecov
    branches:
      - 'develop'
      - 'main'

concurrency:
  group: mizu-tests-validation-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17'

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install libpcap
        shell: bash
        run: |
          sudo apt-get install libpcap-dev

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCR_JSON_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: CLI Test
        run: make test-cli

      - name: Agent Test
        run: make test-agent

      - name: Shared Test
        run: make test-shared

      - name: Check modified files
        id: modified_files
        env:
          dependant_folders: |
            (
              tap/extensions/*
            )
        run: |
          echo "========== check paths of modified files =========="
          folders_arr=${{ env.dependant_folders }}
          git diff --name-only HEAD^ HEAD > files.txt
          matched=false
          while IFS= read -r file
          do
            for folder in ${folders_arr[*]}
            do
              if [[ $folder == $file ]]; then
                matched=true
                break
              fi
            done
            if [[ $matched = true ]]; then
              echo "$file - match condition"
              break
            else 
              echo "$file - does not match condition"
            fi
          done < files.txt
          if [[ $matched = true ]]; then
            echo "match found set to true"
            echo "::set-output name=matched::true"
          else
            echo "no match found"
            echo "::set-output name=matched::false"
          fi

      - name: Extensions Test
        if: steps.modified_files.outputs.matched == 'true'
        run: make test-extensions

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

