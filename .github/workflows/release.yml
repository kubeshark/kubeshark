on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Release

concurrency:
  group: kubeshark-publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Build and publish a new release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Version
        id: version
        shell: bash
        run: |
          {
            echo "tag=${GITHUB_REF#refs/*/}"
            echo "build_timestamp=$(date +%s)"
            echo "branch=${GITHUB_REF#refs/heads/}"
          } >> "$GITHUB_OUTPUT"

      - name: Build
        run: make build-all VER='${{ steps.version.outputs.tag }}' BUILD_TIMESTAMP='${{ steps.version.outputs.build_timestamp }}'

      - name: Log the version into a .txt file
        shell: bash
        run: |
          echo '${{ steps.version.outputs.tag }}' >> bin/version.txt

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "bin/*"
          tag: ${{ steps.version.outputs.tag }}
          prerelease: false
          bodyFile: 'bin/README.md'

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: kubeshark/homebrew-kubeshark
          token: ${{ secrets.HOMEBREW_TOKEN }}
          path: homebrew-kubeshark

      - name: Bump core homebrew formula
        uses: mislav/bump-homebrew-formula-action@v3
        with:
          # A PR will be sent to github.com/Homebrew/homebrew-core to update this formula:
          formula-name: kubeshark
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}

      - name: Generate Homebrew formulae
        shell: bash
        run: |
          export FULL_VERSION=${{ steps.version.outputs.tag }}
          export CLEAN_VERSION=$(echo $FULL_VERSION | sed 's/^v//')
          export DARWIN_AMD64_SHA256=$(shasum -a 256 bin/kubeshark_darwin_amd64 | awk '{print $1}')
          export DARWIN_ARM64_SHA256=$(shasum -a 256 bin/kubeshark_darwin_arm64 | awk '{print $1}')
          export LINUX_AMD64_SHA256=$(shasum -a 256 bin/kubeshark_linux_amd64 | awk '{print $1}')
          export LINUX_ARM64_SHA256=$(shasum -a 256 bin/kubeshark_linux_arm64 | awk '{print $1}')
          envsubst < .github/static/kubeshark.rb.tmpl > homebrew-kubeshark/kubeshark.rb

          cat homebrew-kubeshark/kubeshark.rb

      - name: Commit and push Homebrew formulae
        working-directory: homebrew-kubeshark
        run: |
          git config --global user.email "bot@kubeshark.io"
          git config --global user.name "Kubeshark Bot"
          git add kubeshark.rb
          git commit -m "Release ${{ steps.version.outputs.tag }}"
          git push
