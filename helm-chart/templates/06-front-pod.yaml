---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubeshark.co/app: front
    sidecar.istio.io/inject: "false"
    {{- include "kubeshark.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.tap.annotations }}
    {{- toYaml .Values.tap.annotations | nindent 4 }}
  {{- end }}
  name: kubeshark-front
  namespace: {{ .Release.Namespace }}
spec:
  containers:
    - env:
        - name: REACT_APP_DEFAULT_FILTER
          value: ' '
        - name: REACT_APP_HUB_HOST
          value: ' '
        - name: REACT_APP_HUB_PORT
          value: '{{ .Values.tap.ingress.enabled | ternary "/api" (print ":" .Values.tap.proxy.hub.port) }}'
      image: '{{ .Values.tap.docker.registry }}/front:{{ .Values.tap.docker.tag }}'
      imagePullPolicy: {{ .Values.tap.docker.imagepullpolicy }}
      name: kubeshark-front
      readinessProbe:
        failureThreshold: 3
        periodSeconds: 1
        successThreshold: 1
        tcpSocket:
          port: 80
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 750m
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 50Mi
      volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
          readOnly: true
  volumes:
    - name: nginx-config
      configMap:
        name:  kubeshark-nginx-config
  dnsPolicy: ClusterFirstWithHostNet
  serviceAccountName: {{ include "kubeshark.serviceAccountName" . }}
  terminationGracePeriodSeconds: 0
  tolerations:
    - effect: NoExecute
      operator: Exists
{{- if not .Values.tap.ignoretainted }}
    - effect: NoSchedule
      operator: Exists
{{- end }}
status: {}
