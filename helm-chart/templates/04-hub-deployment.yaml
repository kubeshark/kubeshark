apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubeshark.fullname" . }}-hub
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubeshark.co/app: hub
    {{- include "kubeshark.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.tap.annotations }}
    {{- toYaml .Values.tap.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: 1  # Set the desired number of replicas
  selector:
    matchLabels:
      app.kubeshark.co/app: hub
  template:
    metadata:
      labels:
        app.kubeshark.co/app: hub
        sidecar.istio.io/inject: "false"
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: {{ include "kubeshark.serviceAccountName" . }}
      containers:
        - name: kubeshark-hub
          command:
            - ./hub
            {{ .Values.tap.debug | ternary "- -debug" "" }}
          envFrom:
            - configMapRef:
                name: kubeshark-config-map
            - secretRef:
                name: kubeshark-secret
          image: '{{ .Values.tap.docker.registry }}/hub:{{ .Values.tap.docker.tag }}'
          imagePullPolicy: {{ .Values.tap.docker.imagepullpolicy }}
          readinessProbe:
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 3
            tcpSocket:
              port: 80
          livenessProbe:
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 3
            tcpSocket:
              port: 80
          resources:
            limits:
              cpu: {{ .Values.tap.resources.hub.limits.cpu }}
              memory: {{ .Values.tap.resources.hub.limits.memory }}
            requests:
              cpu: {{ .Values.tap.resources.hub.requests.cpu }}
              memory: {{ .Values.tap.resources.hub.requests.memory }}
