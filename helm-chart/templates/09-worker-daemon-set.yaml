---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubeshark.co/app: worker
    sidecar.istio.io/inject: "false"
    {{- include "kubeshark.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.tap.annotations }}
    {{- toYaml .Values.tap.annotations | nindent 4 }}
  {{- end }}
  name: kubeshark-worker-daemon-set
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubeshark.co/app: worker
      {{- include "kubeshark.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubeshark.co/app: worker
        {{- include "kubeshark.labels" . | nindent 8 }}
      name: kubeshark-worker-daemon-set
      namespace: kubeshark
    spec:
      containers:
        - command:
            - ./worker
            - -i
            - any
            - -port
            - '{{ .Values.tap.proxy.worker.srvport }}'
            - -servicemesh
            {{ .Values.tap.tls | ternary "- -tls" "" }}
            - -procfs
            - /hostproc
            {{ .Values.tap.debug | ternary "- -debug" "" }}
          image: '{{ .Values.tap.docker.registry }}/worker:{{ .Values.tap.docker.tag }}'
          imagePullPolicy: {{ .Values.tap.docker.imagepullpolicy }}
          name: kubeshark-worker-daemon-set
          envFrom:
            - secretRef:
                name: kubeshark-secret
        {{- if .Values.tap.debug }}
          env:
          - name: PROFILING_ENABLED
            value: "true"
          - name: PROFILING_DUMP_PATH
            value: "pprof"
          - name: PROFILING_INTERVAL_SECONDS
            value: "60"
        {{- end }}
          resources:
            limits:
              cpu: {{ .Values.tap.resources.worker.limits.cpu }}
              memory: {{ .Values.tap.resources.worker.limits.memory }}
            requests:
              cpu: {{ .Values.tap.resources.worker.requests.cpu }}
              memory: {{ .Values.tap.resources.worker.requests.memory }}
          securityContext:
            capabilities:
              add:
                - NET_RAW
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_PTRACE
                - DAC_OVERRIDE
                - SYS_RESOURCE
                - SYS_MODULE
              drop:
                - ALL
          readinessProbe:
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 5
            tcpSocket:
              port: {{ .Values.tap.proxy.worker.srvport }}
          livenessProbe:
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 5
            tcpSocket:
              port: {{ .Values.tap.proxy.worker.srvport }}
          volumeMounts:
            - mountPath: /hostproc
              name: proc
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
{{- if .Values.tap.persistentstorage }}
            - mountPath: /app/data
              name: kubeshark-persistent-volume
{{- end }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: {{ include "kubeshark.serviceAccountName" . }}
      terminationGracePeriodSeconds: 0
      tolerations:
        - effect: NoExecute
          operator: Exists
{{- if not .Values.tap.ignoretainted }}
        - effect: NoSchedule
          operator: Exists
{{- end }}
{{- if gt (len .Values.tap.nodeselectorterms) 0}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              {{- toYaml .Values.tap.nodeselectorterms | nindent 12 }}
{{- end }}
      volumes:
        - hostPath:
            path: /proc
          name: proc
        - hostPath:
            path: /sys
          name: sys
{{- if .Values.tap.persistentstorage }}
        - name: kubeshark-persistent-volume
          persistentVolumeClaim:
            claimName: kubeshark-persistent-volume-claim
{{- end }}
