{{- if .Values.tap.auth.dexConfig }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubeshark.co/app: dex
    {{- include "kubeshark.labels" . | nindent 4 }}
  annotations:
  {{- if .Values.tap.annotations }}
    {{- toYaml .Values.tap.annotations | nindent 4 }}
  {{- end }}
  name: {{ include "kubeshark.name" . }}-dex
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1  # Set the desired number of replicas
  selector:
    matchLabels:
      app.kubeshark.co/app: dex
      {{- include "kubeshark.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubeshark.co/app: dex
        {{- include "kubeshark.labels" . | nindent 8 }}
    spec:
      containers:
        - name: kubeshark-dex
          image: 'dexidp/dex:v2.42.0-alpine'
          ports:
            - name: http
              containerPort: 5556
              protocol: TCP
            - name: telemetry
              containerPort: 5558
              protocol: TCP
          args:
          - dex
          - serve
          - /etc/dex/dex-config.yaml
          imagePullPolicy: {{ .Values.tap.docker.imagePullPolicy }}
          volumeMounts:
            - name: dex-secret-conf-volume
              mountPath: /etc/dex/dex-config.yaml
              subPath: dex-config.yaml
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5558
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5558
            periodSeconds: 1
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 3
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 750m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 50Mi
    {{- if .Values.tap.docker.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.tap.docker.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
    {{- end }}
{{- if gt (len .Values.tap.nodeSelectorTerms.dex) 0}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              {{- toYaml .Values.tap.nodeSelectorTerms.dex | nindent 12 }}
{{- end }}
      {{- if or .Values.tap.dns.nameservers .Values.tap.dns.searches .Values.tap.dns.options }}
      dnsConfig:
        {{- if .Values.tap.dns.nameservers }}
        nameservers:
        {{- range .Values.tap.dns.nameservers }}
          - {{ . | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.tap.dns.searches }}
        searches:
        {{- range .Values.tap.dns.searches }}
          - {{ . | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.tap.dns.options }}
        options:
        {{- range .Values.tap.dns.options }}
          - name: {{ .name | quote }}
            {{- if .value }}
            value: {{ .value | quote }}
            {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
      volumes:
        - name: dex-secret-conf-volume
          secret:
            secretName: kubeshark-dex-conf-secret
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: {{ include "kubeshark.serviceAccountName" . }}

{{- end }}
