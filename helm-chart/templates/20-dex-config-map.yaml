---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubeshark-dex-config-map
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubeshark.labels" . | nindent 4 }}
data:
  dex-config.yaml: |
    # The base path of Dex and the external name of the OpenID Connect service.
    # This is the canonical URL that all clients MUST use to refer to Dex. If a
    # path is provided, Dex's HTTP service will listen at a non-root URL.
{{- if .Values.tap.ingress.enabled }}
    issuer: https://{{ .Values.tap.ingress.host }}/dex
{{- else }}
    issuer: http://0.0.0.0:{{ .Values.tap.proxy.front.port }}/dex
{{- end }}

    # The storage configuration determines where Dex stores its state.
    # See the documentation (https://dexidp.io/docs/storage/) for further information.
    storage:
      type: memory

    # HTTP service configuration
    web:
      http: 0.0.0.0:5556

    # Telemetry configuration
    telemetry:
      http: 0.0.0.0:5558

    # Static clients registered in Dex by default.
    staticClients:
     - id: kubeshark-hub
       secret: enter a secret for Kubeshark Hub
       name: 'Kubeshark Hub'
       redirectURIs:
{{- if .Values.tap.ingress.enabled }}
         - https://{{ .Values.tap.ingress.host }}/api/oauth2/callback
{{- else }}
         - http://0.0.0.0:{{ .Values.tap.proxy.front.port }}/api/oauth2/callback
{{- end }}

    # Connectors are used to authenticate users against upstream identity providers.
    # See the documentation (https://dexidp.io/docs/connectors/) for further information.
    connectors:
      - type: oidc
        id: descope
        name: Descope
        config:
          # Canonical URL of the provider, also used for configuration discovery.
          # This value MUST match the value returned in the provider config discovery.
          #
          # See: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig
          issuer: enter issuer URL

          # Connector config values starting with a "$" will read from the environment.
          clientID: enter client ID
          clientSecret: enter client secret

          # Dex's issuer URL + "/callback"

{{- if .Values.tap.ingress.enabled }}
          redirectURI: https://{{ .Values.tap.ingress.host }}/dex/callback
{{- else }}
          redirectURI: http://0.0.0.0:{{ .Values.tap.proxy.front.port }}/dex/callback
{{- end }}

    # Enable the password database.
    # It's a "virtual" connector (identity provider) that stores
    # login credentials in Dex's store.
    enablePasswordDB: true
