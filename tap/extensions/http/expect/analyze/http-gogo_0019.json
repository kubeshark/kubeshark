[{"id":0,"proto":{"name":"http","longName":"Hypertext Transfer Protocol -- HTTP/1.1","abbr":"HTTP","macro":"http","version":"1.1","backgroundColor":"#205cf5","foregroundColor":"#ffffff","fontSize":12,"referenceLink":"https://datatracker.ietf.org/doc/html/rfc2616","ports":["80","443","8080"],"priority":0},"src":{"ip":"1","port":"1","name":""},"dst":{"ip":"2","port":"2","name":""},"outgoing":true,"timestamp":-6795364578871,"startTime":"0001-01-01T00:00:00Z","request":{"_cookies":[],"_headers":[{"name":"Accept","value":"text/css,*/*;q=0.1"},{"name":"Accept-Encoding","value":"gzip, deflate"},{"name":"Accept-Language","value":"en-US,en;q=0.5"},{"name":"Connection","value":"keep-alive"},{"name":"Host","value":"www.go2go.com"},{"name":"Referer","value":"http://www.go2go.com/"},{"name":"User-Agent","value":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0"}],"_queryString":[],"_queryStringMerged":[],"bodySize":0,"cookies":{},"headers":{"Accept":"text/css,*/*;q=0.1","Accept-Encoding":"gzip, deflate","Accept-Language":"en-US,en;q=0.5","Connection":"keep-alive","Host":"www.go2go.com","Referer":"http://www.go2go.com/","User-Agent":"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0"},"headersSize":-1,"httpVersion":"HTTP/1.1","method":"GET","path":"","pathSegments":[],"queryString":{},"summary":"","targetUri":"","url":""},"response":{"_cookies":[],"_headers":[{"name":"Cache-Control","value":"no-store, no-cache, must-revalidate, post-check=0, pre-check=0"},{"name":"Content-Encoding","value":"gzip"},{"name":"Content-Type","value":"text/html"},{"name":"Date","value":"Thu, 16 May 2013 20:34:51 GMT"},{"name":"Expires","value":"Thu, 19 Nov 1981 08:52:00 GMT"},{"name":"P3p","value":"CP=\"NOI COR NID ADMa DEVa PSAa PSDa STP NAV DEM STA PRE\""},{"name":"Pragma","value":"no-cache"},{"name":"Server","value":"lighttpd"},{"name":"Set-Cookie","value":"[REDACTED]"},{"name":"Transfer-Encoding","value":"chunked"},{"name":"Vary","value":"Accept-Encoding"},{"name":"X-Frame-Options","value":"SAMEORIGIN"},{"name":"X-Powered-By","value":"PHP/5.3.3"}],"bodySize":0,"content":{"encoding":"base64","mimeType":"text/html","size":29834,"text":""},"cookies":{},"headers":{"Cache-Control":"no-store, no-cache, must-revalidate, post-check=0, pre-check=0","Content-Encoding":"gzip","Content-Type":"text/html","Date":"Thu, 16 May 2013 20:34:51 GMT","Expires":"Thu, 19 Nov 1981 08:52:00 GMT","P3p":"CP=\"NOI COR NID ADMa DEVa PSAa PSDa STP NAV DEM STA PRE\"","Pragma":"no-cache","Server":"lighttpd","Set-Cookie":"[REDACTED]","Transfer-Encoding":"chunked","Vary":"Accept-Encoding","X-Frame-Options":"SAMEORIGIN","X-Powered-By":"PHP/5.3.3"},"headersSize":-1,"httpVersion":"HTTP/1.1","redirectURL":"","status":200,"statusText":"OK"},"summary":"","method":"GET","status":200,"elapsedTime":0,"path":"","isOutgoing":true,"rules":{},"httpPair":"{\"request\":{\"isRequest\":true,\"captureTime\":\"0001-01-01T00:00:00Z\",\"payload\":{\"details\":{\"_cookies\":[],\"_headers\":[{\"name\":\"Accept\",\"value\":\"text/css,*/*;q=0.1\"},{\"name\":\"Accept-Encoding\",\"value\":\"gzip, deflate\"},{\"name\":\"Accept-Language\",\"value\":\"en-US,en;q=0.5\"},{\"name\":\"Connection\",\"value\":\"keep-alive\"},{\"name\":\"Host\",\"value\":\"www.go2go.com\"},{\"name\":\"Referer\",\"value\":\"http://www.go2go.com/\"},{\"name\":\"User-Agent\",\"value\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0\"}],\"_queryString\":[],\"_queryStringMerged\":[],\"bodySize\":0,\"cookies\":{},\"headers\":{\"Accept\":\"text/css,*/*;q=0.1\",\"Accept-Encoding\":\"gzip, deflate\",\"Accept-Language\":\"en-US,en;q=0.5\",\"Connection\":\"keep-alive\",\"Host\":\"www.go2go.com\",\"Referer\":\"http://www.go2go.com/\",\"User-Agent\":\"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:20.0) Gecko/20100101 Firefox/20.0\"},\"headersSize\":-1,\"httpVersion\":\"HTTP/1.1\",\"method\":\"GET\",\"path\":\"\",\"pathSegments\":[],\"queryString\":{},\"summary\":\"\",\"targetUri\":\"\",\"url\":\"\"},\"method\":\"GET\",\"rawRequest\":null,\"rawResponse\":null,\"url\":\"\"}},\"response\":{\"isRequest\":false,\"captureTime\":\"0001-01-01T00:00:00Z\",\"payload\":{\"details\":{\"_cookies\":[],\"_headers\":[{\"name\":\"Cache-Control\",\"value\":\"no-store, no-cache, must-revalidate, post-check=0, pre-check=0\"},{\"name\":\"Content-Encoding\",\"value\":\"gzip\"},{\"name\":\"Content-Type\",\"value\":\"text/html\"},{\"name\":\"Date\",\"value\":\"Thu, 16 May 2013 20:34:51 GMT\"},{\"name\":\"Expires\",\"value\":\"Thu, 19 Nov 1981 08:52:00 GMT\"},{\"name\":\"P3p\",\"value\":\"CP=\\\"NOI COR NID ADMa DEVa PSAa PSDa STP NAV DEM STA PRE\\\"\"},{\"name\":\"Pragma\",\"value\":\"no-cache\"},{\"name\":\"Server\",\"value\":\"lighttpd\"},{\"name\":\"Set-Cookie\",\"value\":\"[REDACTED]\"},{\"name\":\"Transfer-Encoding\",\"value\":\"chunked\"},{\"name\":\"Vary\",\"value\":\"Accept-Encoding\"},{\"name\":\"X-Frame-Options\",\"value\":\"SAMEORIGIN\"},{\"name\":\"X-Powered-By\",\"value\":\"PHP/5.3.3\"}],\"bodySize\":0,\"content\":{\"encoding\":\"base64\",\"mimeType\":\"text/html\",\"size\":29834,\"text\":\"\"},\"cookies\":{},\"headers\":{\"Cache-Control\":\"no-store, no-cache, must-revalidate, post-check=0, pre-check=0\",\"Content-Encoding\":\"gzip\",\"Content-Type\":\"text/html\",\"Date\":\"Thu, 16 May 2013 20:34:51 GMT\",\"Expires\":\"Thu, 19 Nov 1981 08:52:00 GMT\",\"P3p\":\"CP=\\\"NOI COR NID ADMa DEVa PSAa PSDa STP NAV DEM STA PRE\\\"\",\"Pragma\":\"no-cache\",\"Server\":\"lighttpd\",\"Set-Cookie\":\"[REDACTED]\",\"Transfer-Encoding\":\"chunked\",\"Vary\":\"Accept-Encoding\",\"X-Frame-Options\":\"SAMEORIGIN\",\"X-Powered-By\":\"PHP/5.3.3\"},\"headersSize\":-1,\"httpVersion\":\"HTTP/1.1\",\"redirectURL\":\"\",\"status\":200,\"statusText\":\"OK\"},\"method\":\"\",\"rawRequest\":null,\"rawResponse\":null,\"url\":\"\"}}}"}]